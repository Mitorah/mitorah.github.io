(function(n){function a(a){for(var t,i,s=a[0],o=a[1],l=a[2],g=0,b=[];g<s.length;g++)i=s[g],Object.prototype.hasOwnProperty.call(e,i)&&e[i]&&b.push(e[i][0]),e[i]=0;for(t in o)Object.prototype.hasOwnProperty.call(o,t)&&(n[t]=o[t]);c&&c(a);while(b.length)b.shift()();return r.push.apply(r,l||[]),L()}function L(){for(var n,a=0;a<r.length;a++){for(var L=r[a],t=!0,s=1;s<L.length;s++){var o=L[s];0!==e[o]&&(t=!1)}t&&(r.splice(a--,1),n=i(i.s=L[0]))}return n}var t={},e={app:0},r=[];function i(a){if(t[a])return t[a].exports;var L=t[a]={i:a,l:!1,exports:{}};return n[a].call(L.exports,L,L.exports,i),L.l=!0,L.exports}i.m=n,i.c=t,i.d=function(n,a,L){i.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:L})},i.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,a){if(1&a&&(n=i(n)),8&a)return n;if(4&a&&"object"===typeof n&&n&&n.__esModule)return n;var L=Object.create(null);if(i.r(L),Object.defineProperty(L,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var t in n)i.d(L,t,function(a){return n[a]}.bind(null,t));return L},i.n=function(n){var a=n&&n.__esModule?function(){return n["default"]}:function(){return n};return i.d(a,"a",a),a},i.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},i.p="/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],o=s.push.bind(s);s.push=a,s=s.slice();for(var l=0;l<s.length;l++)a(s[l]);var c=o;r.push([0,"chunk-vendors"]),L()})({0:function(n,a,L){n.exports=L("56d7")},"034f":function(n,a,L){"use strict";var t=L("85ec"),e=L.n(t);e.a},"56d7":function(n,a,L){"use strict";L.r(a);L("e260"),L("e6cf"),L("cca6"),L("a79d");var t=L("2b0e"),e=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("v-app",[L("v-col",{attrs:{cols:"12",sm:"6"}},[n._v(" Advent of code christmas challenge. Check out "),L("a",{attrs:{href:"https://adventofcode.com/"}},[n._v("adventofcode.com ")]),L("br"),n._v(" Source code can be found at "),L("a",{attrs:{href:"https://github.com/Mitorah/mitorah.github.io"}},[n._v("GitHub")]),L("v-select",{attrs:{items:n.DayTitles,label:"Day"},model:{value:n.SelectedDay,callback:function(a){n.SelectedDay=a},expression:"SelectedDay"}})],1),L(n.DayValue(n.SelectedDay),{tag:"component"})],1)},r=[],i=(L("7db0"),L("d81d"),function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[n._v(" NO CONTENT ")])}),s=[],o={data:function(){return{}}},l=o,c=L("2877"),g=Object(c["a"])(l,i,s,!1,null,null,null),b=g.exports,d=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},h=[],p=(L("d3b7"),L("ac1f"),L("25f0"),L("1276"),"2004\n1823\n1628\n1867\n1073\n1951\n1909\n1761\n1093\n1992\n1986\n1106\n1537\n1905\n1233\n1961\n1760\n1562\n1781\n1329\n1272\n1660\n1367\n1248\n1697\n1515\n1470\n1980\n1884\n1784\n1966\n1778\n1426\n1255\n1089\n1748\n1253\n1870\n1651\n1131\n1623\n1595\n1128\n1014\n1863\n1855\n1203\n1395\n1521\n1365\n1202\n780\n1560\n1834\n1494\n1551\n1398\n1190\n1975\n1940\n1217\n1793\n1310\n1070\n1865\n1307\n1735\n1897\n1410\n1994\n1541\n1569\n1731\n1238\n1193\n1226\n1435\n1159\n1642\n1652\n1908\n1920\n1930\n1068\n1914\n1186\n1795\n1888\n1634\n1750\n1950\n1493\n1353\n1461\n1658\n1856\n1301\n1538\n1948\n1998\n1847\n1880\n1657\n1536\n1457\n1762\n1706\n1894\n542\n1991\n1108\n1072\n1064\n1511\n1496\n1480\n1955\n1604\n1766\n1983\n1713\n1234\n1503\n1583\n1729\n1140\n1006\n1600\n1699\n1280\n1891\n1996\n1375\n1167\n1625\n1129\n1770\n1497\n1620\n1267\n1421\n1399\n1563\n1636\n1293\n1506\n1613\n1958\n1967\n1182\n1050\n1947\n1787\n1774\n1928\n1896\n1303\n1826\n1132\n1254\n1752\n1510\n1705\n1229\n1558\n1989\n1567\n698\n1738\n1357\n1587\n1316\n1838\n1311\n1057\n1644\n1135\n1300\n1134\n1577\n1381\n1806\n1176\n1993\n1769\n1633\n1450\n1819\n1973\n1694\n969\n1987\n1095\n1717\n1933\n1593\n1045\n1355\n1459\n1619"),u="--- Day 1: Report Repair ---\nAfter saving Christmas five years in a row, you've decided to take a vacation at a nice resort on a tropical island. Surely, Christmas will go on without you.\n\nThe tropical island has its own currency and is entirely cash-only. The gold coins used there have a little picture of a starfish; the locals just call them stars. None of the currency exchanges seem to have heard of them, but somehow, you'll need to find fifty of these coins by the time you arrive so you can pay the deposit on your room.\n\nTo save your vacation, you need to get all fifty stars by December 25th.\n\nCollect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!\n\nBefore you leave, the Elves in accounting just need you to fix your expense report (your puzzle input); apparently, something isn't quite adding up.\n\nSpecifically, they need you to find the two entries that sum to 2020 and then multiply those two numbers together.\n\nFor example, suppose your expense report contained the following:\n\n1721\n979\n366\n299\n675\n1456\nIn this list, the two entries that sum to 2020 are 1721 and 299. Multiplying them together produces 1721 * 299 = 514579, so the correct answer is 514579.\n\nOf course, your expense report is much larger. Find the two entries that sum to 2020; what do you get if you multiply them together?\n\n--- Part Two ---\nThe Elves in accounting are thankful for your help; one of them even offers you a starfish coin they had left over from a past vacation. They offer you a second one if you can find three numbers in your expense report that meet the same criteria.\n\nUsing the above example again, the three entries that sum to 2020 are 979, 366, and 675. Multiplying them together produces the answer, 241861950.\n\nIn your expense report, what is the product of the three entries that sum to 2020?",F="Solve(inputData) {\n    // Split data to array\n    inputData = inputData.split('\\n')\n\n    // --- Part One ---\n    inputData.find(x => inputData.find(y => {\n        if (parseInt(x) + parseInt(y) == 2020) {\n            // Result found!\n            this.SetResult(x * y)\n            return true;\n        }\n\n        return false\n    }))\n\n    // --- Part Two ---\n    inputData.find(x => inputData.find(y => inputData.find(z => {\n        if (parseInt(x) + parseInt(y) + parseInt(z) == 2020) {\n            // Result found!\n            this.SetResult(x * y * z)\n            return true\n        }\n\n        return false\n    })))\n}",m=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("v-row",[L("v-col",[n._l(n.resultData,(function(n,a){return L("show-task-content",{key:a,attrs:{title:("Part "+(a+1)).toString(),file:n,autoGrow:!0,height:60}})})),L("show-task-content",{attrs:{title:"Solution",file:n.solutionData,height:n.height}})],2),L("v-col",[L("show-task-content",{attrs:{title:"Task",file:n.taskData,height:n.height}}),L("show-task-content",{attrs:{title:"Input data",autoGrow:!1,file:n.inputData,height:n.height}})],1)],1)},B=[],y=(L("a9e3"),function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("v-col",{attrs:{cols:"12",md:"12"}},[n._v(" "+n._s(n.title)+" "),L("v-textarea",{attrs:{readonly:"",outlined:"",dense:"","auto-grow":n.autoGrow,value:n.file,height:n.height}})],1)}),f=[],v={props:{title:String,file:String,height:Number,autoGrow:{type:Boolean,default:!1}},data:function(){return{}}},w=v,k=L("6544"),R=L.n(k),j=L("62ad"),x=L("a844"),z=Object(c["a"])(w,y,f,!1,null,null,null),q=z.exports;R()(z,{VCol:j["a"],VTextarea:x["a"]});var D={props:{taskData:String,inputData:String,solutionData:String,resultData:Array,height:{type:Number,default:600}},components:{"show-task-content":q},data:function(){return{}},mounted:function(){}},S=D,T=L("0fd9"),I=Object(c["a"])(S,m,B,!1,null,null,null),E=I.exports;R()(I,{VCol:j["a"],VRow:T["a"]});var N={components:{"show-task":E},data:function(){return{CurrentInputData:p,CurrentTaskData:u,CurrentSolutionData:F,InputData:p,TaskResult:[]}},mounted:function(){this.Solve(p)},methods:{Solve:function(n){var a=this;n=n.split("\n"),n.find((function(L){return n.find((function(n){return parseInt(L)+parseInt(n)==2020&&(a.SetResult(L*n),!0)}))})),n.find((function(L){return n.find((function(t){return n.find((function(n){return parseInt(L)+parseInt(t)+parseInt(n)==2020&&(a.SetResult(L*t*n),!0)}))}))}))},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},P=N,C=Object(c["a"])(P,d,h,!1,null,null,null),W=C.exports,A=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},O=[],_=(L("a630"),L("3ca3"),L("2909")),M="5-11 t: glhbttzvzttkdx\n2-4 f: cfkmf\n9-12 m: mmmmmmmmmmmmm\n2-10 z: vghqbzbcxf\n10-11 b: tbtbvbbnbwd\n1-6 d: cmhdnw\n1-5 r: xrrrdrrr\n12-13 g: pggkggggfggggg\n7-9 g: gsgwhgggg\n4-5 v: tvsgqvvv\n5-7 n: nnncngdnznjx\n1-4 v: vvvzqvzvvvvv\n11-12 r: mmrwxhrzvmrr\n5-11 f: wcldfbbkxbfjrtffrr\n3-4 x: pcnxgxx\n11-12 g: kgggghpfgmwzgg\n2-3 z: zzzzmzn\n11-12 n: nrncpbpnlpnn\n2-4 q: qqgq\n11-14 k: kkkkkkkkkkkkkkk\n4-10 w: fkswkgwwhpjfcg\n6-12 s: sssshsssfssw\n2-14 d: szcsdskhhqrpldwp\n1-5 j: zjpjjqxjjjrjjjj\n9-13 q: qqqqqqlqjqwqhqqr\n1-9 f: vrffffffxffnfbffff\n13-14 s: ssssssssssssskm\n3-6 z: mwrzcnnf\n8-9 c: bccczcccctjv\n2-4 j: hxpd\n8-12 w: fwvzwgfwdwxww\n3-12 h: hhtmhhphrhhbhhhk\n2-4 r: hrqr\n10-11 f: ffffqfffhflfffffff\n2-6 j: ggppjc\n8-16 l: cltwcjcsxllxctxs\n3-4 t: ttwj\n10-12 b: bqbcbqlnzbtbrm\n12-13 l: llllslllwlllgltdlll\n4-7 x: xfvxbqxs\n5-6 v: xrvqvv\n11-17 q: mdblqqptcvqqfqqqq\n8-19 f: ffpdzwvcffmsffffbffl\n12-14 w: hwpjcxgcvpwhww\n2-4 d: pzdtd\n9-10 p: vgtpmmxppp\n3-4 k: vkwh\n14-15 d: swgpzprkmrkxdddk\n13-14 z: gxzzgzzjhlzzzs\n4-5 b: bbgbbp\n2-4 p: pnqcn\n16-20 d: rkqpfvbfvtcgdmhddpdd\n2-3 l: llzpllll\n6-10 v: hdnxdvxmxv\n2-4 m: xcfmcmmmzgw\n9-12 n: fmcndbqvnlnncqnxffmz\n3-12 t: bcttczggbtgt\n4-6 j: vwvjlq\n4-5 t: mttfttvtttttttw\n3-5 v: vxjvq\n5-7 z: kzvzzrzmwwxtnsrmhp\n9-11 p: ppppppppppppppppp\n5-7 n: nbzdpqvxxcmn\n5-6 n: cnnntn\n2-7 r: rrrrrrrrhrrwrrrr\n6-18 s: stngssgssnsrsflsssk\n11-14 q: qqqqqqqqqqqqqnq\n3-5 d: dtdvd\n3-4 m: mmqn\n7-10 d: ddddddddddd\n7-11 k: kkkkkkkckkkkk\n9-16 z: zzxzgwtjzzzzzhkz\n6-8 l: lllllllll\n13-18 z: tszsszrlzzqzzkzwxjxd\n3-11 b: bbcbbbbnbbppbbb\n2-8 j: jjjjjjjjjjjjjpjjjj\n1-8 f: fcltvbhffbqf\n6-19 m: hhvkzmqtmpvbvrbhwmm\n7-8 z: qzzmzzzzqz\n2-5 b: fhbwb\n3-4 m: mrlqtlkphwnc\n8-10 p: cprpgpwkpp\n2-5 t: tttttt\n7-10 m: zlrbpxxwvrjxs\n10-14 q: gddtnqqcqlfqshq\n9-11 p: kpzpppppnhspp\n1-5 n: wfvnv\n7-8 k: fbzwwdkdx\n2-5 d: gjgxfdcvhrmwwrl\n1-3 s: sxss\n8-12 n: nnnnnnnsnnnnnncvnn\n11-12 c: cccccccccccvc\n3-10 v: bvvvvgwdvqbv\n6-15 b: hfnlwhxxmbgwbbkgfp\n18-19 m: mbfbmmjmmmmvmmjcpmc\n1-13 n: jxbqfntqxwjncfzmftjv\n3-5 b: rqxpblz\n14-16 n: nnnbpnnpgnptnsnhnnn\n8-9 g: jgzgfgpqq\n9-10 f: fffffffffff\n5-7 c: crcctccc\n5-9 j: nnkwgjtjj\n5-7 f: mxffbff\n2-4 g: qggng\n4-8 r: rxrrzpjrmqlgvkv\n8-17 q: wqtdqqqkqqlldqqqfrq\n10-11 h: spmxjhhhhhh\n3-4 q: qqkq\n4-6 b: bbbbkb\n15-16 x: xxxxxxfxxxxvxxfxxx\n3-4 k: kqxm\n4-9 w: cbkrrgkzg\n14-17 s: sssssssssssssdssms\n17-18 c: cccccccccccccccckccc\n6-8 l: llllmgllkqsllsq\n16-19 k: kkkkkkkkkkkkkkkkkkgk\n15-17 f: ffqffffffffffffff\n16-19 p: pppppppppppppppgpppp\n1-2 s: ssnsl\n5-17 v: vgwwvvfvvldvsqqwvgt\n5-7 m: mtbqmfm\n3-6 b: wmzbxbxx\n9-19 h: lhmwjzxchvjsxtmbmqh\n10-11 p: ppppppppppzpp\n3-16 p: ppqppppppppppppppjpp\n3-4 p: hpjhhw\n8-12 m: wzvmhjnmlbdmwlnvwwh\n4-7 n: nnnnnnhnnn\n11-13 h: hhchrhthhmhhcmg\n1-4 f: fffh\n6-8 q: qqqqqqqq\n4-12 d: dddddddddddkd\n2-8 g: gkgggggrqggg\n12-18 g: ggjhbbljhgtfrgwgggg\n5-15 d: dddddddddddddddd\n7-12 v: kkmcjvvvvhvvpv\n3-11 r: nhrcwzxhrsr\n6-8 h: dhhhnhzhhdhhh\n2-3 k: vfkckkk\n3-18 c: nxcrgvbbchzbznxqxb\n3-6 x: xxxxxxxx\n11-15 w: wwwwwwwwlwlwxwwkh\n7-12 t: jttttwdtkzttttft\n6-7 l: tqslglhkxmcmjksxlc\n1-4 s: kssz\n14-16 b: bbbbbbtbbbbbbcbsbwbb\n5-8 l: llllrllhll\n6-7 d: bjddgkztz\n4-5 x: cnxxtxxz\n3-4 m: mmzdgmtmwm\n2-6 z: zzzzzhlzz\n9-14 b: jhbbkdpfwrvbsqchgl\n8-14 q: wqbtbjpfxxwrgnp\n14-19 p: pxmfpcpkppppprppcwx\n5-8 w: wkcqvdwp\n7-15 x: zwpzjkjtdrhlwksxdz\n1-2 g: bggg\n3-5 z: zzzzzzz\n7-10 v: tvvvvvvpvvvvvvvv\n2-3 r: rrrrrr\n4-9 z: zpzmzzzzpzzp\n4-6 s: dsnswc\n1-12 f: fffzffffffffff\n1-5 c: cqccvccczmccc\n5-19 x: lgrsxhlwzthdxtwfbvx\n3-10 t: xvhtznxhvgpx\n3-11 x: gvhxpjmwxtxmgqks\n11-13 b: rjvtlmntzpbbjprtlbb\n1-4 m: mmmm\n5-10 k: pkkgkkmnhk\n2-3 v: vvmv\n12-13 p: mppspppbfpgwp\n1-3 m: mmmpmmbm\n4-9 b: hzbjdbjxpxqbtlm\n1-4 p: ppppppppppppppp\n4-5 g: ggfgg\n8-11 j: dwjzgmgdcczhwc\n6-7 w: wwwwwwwww\n3-5 t: vtqwt\n1-5 k: kkhkkk\n4-7 c: ccvtcrcc\n1-10 l: vwknprttll\n9-11 x: htnnvnrtxdx\n15-17 r: rrrrxrrlrrrrrcrrs\n2-3 v: vsvvv\n4-15 g: mxjglqklwwjnksg\n1-2 c: ccdc\n10-16 l: ljrrlvtlrqglmgdf\n3-6 s: ssssblsdsb\n5-6 r: mrrrrtrr\n13-17 w: wwwwghwwtkwwrwwfx\n4-5 j: jjdjjzjjb\n2-3 s: ssjsss\n8-14 r: rrrrrrrrrrrrrrrrrr\n7-9 l: lllllllllll\n15-17 j: jjxjjjjjsjjjjjjjjjj\n6-8 r: hrrrcqrr\n6-7 w: wndbtqqmdw\n4-7 k: cktskgxmkk\n3-9 z: blkmxrzjhcp\n10-11 p: ppppppzpfmpt\n8-9 s: sssssssss\n1-5 l: zglfs\n7-8 s: mstsxsvsm\n1-4 z: zzzzrbvzwr\n16-17 g: ggggkgggggggggggggg\n1-2 j: jjjjjwjjzj\n4-18 m: zmmbvvsrcmmcmqmpwlm\n11-15 f: ffffffffffvfffq\n5-6 c: csvcccccc\n1-12 z: zzzzzgzzzzzbqz\n17-18 s: sssssssssssssssjns\n6-10 m: jmfztgfmml\n5-7 x: bnxxxrx\n13-16 p: ppppppppppppmpphp\n11-14 t: ttttttltttvttttx\n13-14 t: qttnscscgxttttt\n4-5 b: vzbhz\n4-7 r: tdrzrrfqrrrrrrb\n15-17 p: pppppppppppppppppp\n9-17 q: xgqqnxppgqjqsbqqqdnv\n3-15 t: hrrnrspnpkwcktg\n3-6 f: fffcxf\n3-8 n: nznvppnn\n4-6 z: lzksskczzjzz\n6-12 n: nnnnnsnnnnnwrn\n11-12 q: qqnqqqpqqqcqqqqs\n5-11 z: zzzzlzzzzzrzz\n1-5 z: zzzzz\n4-5 j: bsspj\n18-19 d: ptdpdjpsdpddhsddkwd\n13-16 k: kkkkkkkkkkkkfkkw\n7-9 s: zsssbssfs\n15-19 b: bbbbbbbbbbbbbbbbbbbb\n1-7 g: gngrmgb\n1-7 f: vgkmsrfgwlwqzvfk\n7-11 p: psfkppdwxdt\n1-12 p: hppbpppppppbpppppp\n12-13 d: xxzpkwgzcxddq\n6-7 k: ktkkkqk\n8-9 v: vvvvvvvvvfvv\n9-13 g: ggggggggggggzggg\n6-7 g: gggggggggggggggggg\n6-10 g: gqgggcgggf\n3-9 r: wdkkqwbrgpvnrmvqc\n2-4 x: xxsxjndqbd\n13-14 j: jjjjmjjsjjjjjj\n12-13 d: dddddddddddddd\n3-4 h: rqnbzh\n2-3 f: ftxhlhhpvdvnz\n11-17 g: hnkmggstgggbgvrggj\n6-7 c: cccccvc\n3-4 m: mmtm\n2-7 r: rhrrrrr\n6-14 l: wpzllljvxdsxblz\n7-8 b: wxbrbbbb\n9-12 q: qfqqqqqqlqqrqvq\n11-15 p: ppppppppppppppppppp\n19-20 l: vjbsvzclllslkmlslxml\n4-5 v: jvnbhkv\n12-16 j: jfjjjjjjjkjsjjjvjjj\n3-4 w: wwww\n1-4 v: kvnv\n1-5 r: hrrrdrrrrrrrrrrrr\n18-19 s: skwfsfqfmhfgkbsmsnj\n3-4 f: pfks\n11-12 p: ttpbsjfvxcdm\n4-8 d: vhdddgndrmddfdg\n1-3 j: sbjwgvvhvj\n13-20 l: gslclvrnllgljtljmlnn\n9-11 m: mmmmmmmjkmdrmmmm\n8-14 r: fmzrhrdssfmxkq\n3-9 f: rvfmskmdfk\n3-13 c: ccjcccccccccbc\n15-16 w: wwwwwwwwwwwwwwwww\n4-5 r: hrlnjk\n5-13 q: qqqqqqqqqqqqqqqq\n15-16 j: jjjjjjjjjjjjjjjjj\n18-19 p: mhsgkktbhpwvvqmppbmc\n13-15 g: vfjtrgrrkbstblz\n12-15 j: jjjjkczjjjjjjpjjjvjx\n3-4 b: dbbb\n6-7 s: sbssskssss\n15-16 p: jgppppsspppppgxwm\n2-11 f: hmhwwqcjdfk\n4-6 t: tttttqt\n1-8 r: vrrrrdqrrrrrrrrrrr\n2-5 v: lftqnpm\n3-4 h: fbzthx\n2-8 w: wwnpwwxwwwcwzwwr\n1-3 r: grrrr\n12-13 d: pvddxddtsqgdd\n4-18 w: vfsrcftqqllwqvqwhrgt\n3-11 w: wnwqmfxfgkcxhmgh\n17-18 l: lllllllllllllllllb\n5-6 x: rvfxxx\n10-11 n: nnnnnnnnnnnnn\n1-9 s: wshhwwsscxps\n2-12 k: bkvqsmzmjbckxvhtnkfb\n7-10 l: ltlsnlrllm\n1-5 n: nvnnn\n2-4 m: gmpmz\n13-19 k: kkkkwkkxkkkkpkfkkkq\n6-15 l: dlhlcllllrllllll\n14-15 q: qqqqfqcqqqqqqqsq\n6-7 z: qzzdtzzqzz\n1-4 v: pvvvkrgkvhmvvv\n1-3 b: bfbcjdmb\n6-9 b: gqbljxvmmbcbbkqgb\n10-12 v: vvvvmvvhdrzv\n2-3 t: tttt\n9-13 p: jlhnpxnppwnpplqp\n3-5 z: zdzcz\n4-19 b: bbbbbbbbbrgbbdbbbbb\n9-15 x: xxxxxxxxlxxxxxbx\n1-5 f: sfffmf\n8-12 w: lnlwfcwgtzhxlr\n1-3 c: cclrc\n8-12 p: jhkpfmltvpjpb\n2-8 m: jmnmhkrmqvwx\n7-9 p: pppppppndppp\n7-9 k: kkkmkkkdkks\n4-5 w: wwwwww\n1-3 j: pjjj\n3-4 z: xczz\n5-6 h: nhdlvq\n4-9 g: gggngrgtgggggg\n6-9 l: klllltllrlll\n1-3 k: mkkk\n4-11 b: hfbbbfccxbc\n4-10 w: wmhpzkswdwl\n1-2 h: kphh\n10-17 g: gggggggggggggggggggg\n15-19 g: gggmggggggggggggggg\n2-3 z: zqxl\n8-10 p: pppphpppppppp\n2-3 q: qhsqqqq\n1-4 v: vqtvvlnpwvvnv\n16-17 g: bgjpggsggggxggjgg\n8-9 p: kpskgpklpkprqrtpjkdh\n8-12 f: frxfhffpqqfw\n3-4 d: dswjddd\n5-9 t: ttwtttttdttttt\n3-5 q: qqqqq\n2-11 g: gggggggggggg\n3-15 d: tddxdddddddsdvdx\n2-3 d: dzmnd\n4-8 j: gjjjjjjvkbjcbxp\n5-18 l: djxdjmvntxwlnsftglr\n3-6 b: bbhbbbbbh\n17-20 k: kkzkkkkkrkkkkkkkhkkv\n7-9 f: fvffffzfnff\n4-10 t: tttkttttwwtt\n3-5 t: vttmpzqxqtqnz\n8-9 q: wkpkqsvvqmdq\n3-6 q: qhqqqq\n3-4 q: qdqqpph\n2-6 t: vrzktf\n2-3 n: nnnn\n3-4 t: tbtw\n5-12 v: zrwpjvpmxgncxknv\n10-12 r: rrrrgdrrrzrs\n3-4 k: qmmmbbnvvhvdwmfzk\n5-6 j: jqzvjjjxj\n7-13 v: vvvvvvvvvvvvkvv\n7-8 p: kpppphppph\n6-7 l: lzsfzlll\n7-9 m: mmmmmmgmn\n3-8 m: lmbxzdzrsq\n14-17 k: ckhdnjzmvhtvbktskrk\n5-10 d: ddpdpdjtnbdg\n6-8 v: vtfzlwgdffhf\n7-8 n: nkvnjsrnn\n2-5 p: ppkppp\n2-3 p: nppgpbr\n1-3 k: dklkkkkkkkk\n1-2 x: xxxx\n2-4 d: dpdtddd\n4-5 p: mlhpphxphv\n14-15 x: xxdxdwkxxvbxwcxxx\n10-11 f: jdfsmfxffffwfrfffhj\n3-9 l: llbgcfzlnz\n13-14 h: chhhhwhmqhhjhh\n3-4 g: gmgkggg\n6-7 q: qprdhdwsjnblqnkgf\n9-10 r: rrrrwprhrr\n2-5 g: jbjgl\n7-8 x: xxxxxxnl\n7-8 q: qqqqqqgr\n3-4 v: vvvsv\n3-4 w: wwhnjwwgw\n1-8 f: mdqfrxfwfcf\n2-4 v: gvhvwkvhfs\n15-16 d: dcddddddddddddqnddd\n13-14 v: kvkvvvzvshfkvpzvvvp\n17-19 z: zzzzzzzzzzzzzzzzrzqz\n6-8 k: kmkkkfgkkk\n12-16 v: svxtcjxgdmkvqjfvzln\n4-10 p: gljwppnhpc\n8-15 c: ccccccccccccccccc\n1-5 w: wwwwwwww\n3-9 w: jwqgswwbtwwswwq\n2-18 t: ptblkjvmjwglftpblr\n8-11 n: hznznmrvjnm\n5-6 q: qqqwrqq\n4-10 s: scjssfsfcs\n3-7 p: pppprpplpppzp\n6-7 z: zzzzzpwzz\n1-4 h: hhhh\n14-16 r: rcrprqrxrrlrjrlrrrlr\n4-6 x: xxxlxjxx\n8-10 j: jjjjjjjqjcj\n10-13 f: ffffffffftfff\n8-9 r: rqrzrjhrr\n7-11 m: tmfmhvmmpkmp\n4-7 h: bjhhlhhh\n2-3 l: lwll\n10-11 s: jssssssssssssssssz\n13-14 p: splrwgnphqclrmqf\n9-11 j: jsjjjjltjjjjjzpjjdj\n3-4 g: gpcwhg\n5-7 s: ssbsssssss\n5-8 w: bgwbjwwnwwwvww\n9-11 f: fjcgtktnfpfxrqg\n2-9 j: xgmdjfzsfhf\n12-15 f: hkcgtffnzcffffffxdjb\n5-10 k: kxggklgdrjz\n6-8 b: bxbbbbbbb\n4-10 m: tmqfmmmmmm\n3-5 g: svtqgh\n9-17 s: ssqssdrsstspssjssj\n9-11 s: dssssssssslss\n1-4 k: kckkqdkkmg\n3-4 w: zbhwmkgqfqstwdwhs\n1-2 j: jjjjnjj\n10-14 w: rlwpdltwwtzdmnwgmdw\n3-4 j: bjnx\n14-18 n: nrnrnhnjnfwnnnnnrln\n8-11 g: gvhwsbhghdgg\n15-16 h: hghhhhhhhhhhhhht\n2-12 x: xhxxxxxxxxxkxxx\n8-13 n: xqnrnndtnznnkxb\n3-6 t: rbnxbjw\n6-7 v: vdfmjxvvv\n1-13 x: xxxxxxxxxxxxxxxxxxx\n3-9 m: mmmmmmmqmmmm\n4-6 d: dddcdkddddcdgvzd\n5-6 w: wwgwwhw\n9-12 h: lmmwfqczxchc\n12-15 x: xgpxxstxxxxxxxsrxz\n6-10 c: wsnftlccckchtlqjhmt\n8-9 f: ffffffzbd\n7-10 z: zzzzbzhzzgzzzzzpzd\n2-7 c: pccxccc\n3-10 l: zlkmbdffdrhcwsc\n5-6 x: xxxmxx\n15-16 b: bbbbbbbbbbbbbbjtbbbf\n4-6 m: lmmtnmrqwgmqmmmmw\n7-15 j: jmpjrjjthvwjcljvnz\n1-2 z: gqzj\n1-6 h: hhhwhh\n2-3 m: mzkm\n7-9 z: zzhczvztz\n6-7 w: vhkgmcwwjwgw\n2-3 l: lsllllplllljlll\n3-4 r: mvmr\n10-12 h: hzbvhdfwthhhhjwhr\n7-11 x: gstsnxjzhsmlnnwdcmt\n12-13 g: pjmjghprgnxggf\n3-4 m: rfmm\n6-14 d: tsdlsjprjndfndhdmzhz\n2-6 b: ppbbmhc\n3-4 j: jjrkj\n2-4 d: ddwd\n2-3 h: mblfdbbkdjhhtm\n4-5 q: qtqnd\n2-6 g: ggggggg\n3-4 c: cczdc\n13-16 k: kvbgnklxkkwxkqlk\n2-7 p: qphjpkpmzfpzlppw\n5-8 c: ccccbccnc\n2-10 k: kkkkkkkkkkk\n15-16 x: xjxpxjxdkxlxfjqj\n11-15 j: njjjsjjjjjcbjjt\n1-3 z: mzzfz\n1-5 f: fffffffffff\n3-7 v: jvvwmjvjm\n2-5 r: vrrkrrxfqrmv\n15-16 v: sbvnlvvdvrbrwvvq\n3-7 g: bwghkwggfm\n7-9 v: vvvvvvvvjvv\n3-7 m: gmmmmktmmb\n6-12 t: mtbmttttkfth\n5-9 c: ccpfchzpcdxcml\n9-13 d: ddddddddbdddld\n2-3 g: nrkg\n4-8 m: mqnpqmxmq\n2-4 p: pnpqpf\n16-19 p: ppppppppppppppprppzp\n3-6 j: jjjlmf\n1-6 k: kbnpkkckwktwwqkcff\n1-4 z: hzzg\n5-7 b: bbbbbbbbbbbbbbsq\n2-12 z: zwzzzzzzhzzzzzzzz\n6-11 x: nddhcxbtgsxxcq\n3-5 k: gkktkkh\n2-8 f: wfnbhxlfstfwxrkhdxj\n5-6 r: zcrrrr\n1-2 p: dqjjwqjnqp\n4-9 g: ggngjgggbggvg\n3-6 m: mmsmcjmmmmmmmmmm\n3-17 c: qvczjdtppwlvclclcw\n8-9 k: kkkkkkkwdkkk\n5-7 d: gddnldkddd\n5-9 h: whkhvhrshllhldphhn\n11-17 q: qqqqqzqqqqcqqqqqdqqq\n5-6 k: fjszvkzmhshdd\n6-8 k: kkkkkkzk\n11-13 j: jjjjjjjjjjjjjjj\n4-10 q: slwqqsqkbqqb\n7-8 s: cvwvzswq\n10-14 c: tvhxzvpdcckdzc\n1-5 p: jpppppp\n12-15 g: spggvdggsmfhggg\n5-11 n: zlgnqkkqlhmrgn\n11-18 j: zrjgljjljjjzjhjkrj\n10-14 t: tttttttktdttttttcdtt\n10-11 p: szxpqprpchkwvwqqk\n9-14 t: ttttttgtmtfmttttttt\n10-15 n: nnnnnnnznbpnnnxn\n1-4 l: lllll\n4-5 w: wbhhjpwbbft\n10-12 r: rhrrlcrlrrmrrrwlrbx\n13-14 g: ggggggggggggggggg\n7-9 f: fvvwfffff\n9-15 n: pnnnnnnnlndnnnnnnnn\n5-7 b: bbbbbbbb\n8-15 v: ldhwnvvwtxbskzvk\n10-15 t: tgkkgtfttxtttqbtttv\n5-15 s: hlsfskvqssskxds\n2-7 g: wlnqrrdw\n8-9 w: mwpbdlmmj\n5-11 h: lclzlhhhhfvrrrzvnkfz\n8-9 c: jcwdnxgnv\n1-6 h: dchmhm\n9-14 s: ssbdsvccsxtpnszv\n3-5 d: dddddd\n1-6 w: vwwwwf\n5-6 f: lrffxb\n16-17 n: nnnnnnnnnnnnwnnnnnnn\n4-5 x: qlxjptn\n4-5 d: ndddd\n1-9 r: zrrrrrcrr\n4-5 r: brnrr\n15-16 r: rrrrrrrrrrrrrrhrrrrr\n4-8 w: wwvdwwwwwww\n12-14 f: ffffffdffffpfhfdg\n3-9 h: srhvhkvsv\n17-18 j: jzjjjjjsjjjjjjjjjj\n4-8 t: lvpttpct\n2-3 t: ttqt\n3-11 v: wpvmlbvbpvs\n10-11 x: vrkmmglwxxxsxsnxf\n4-7 k: kkkkkkk\n3-5 k: kkkkkkk\n13-18 v: rkvvvlkzhvvmbgvvvk\n1-2 p: prpppg\n8-11 c: cxkchzcchccdzqfc\n1-6 z: zzwzzz\n3-4 z: czpdt\n11-12 d: ddddddddddddc\n6-8 l: llldlkvzll\n5-15 n: wngptdmbvqftdvw\n10-12 j: qjxmgghlbklxcpd\n4-6 z: mdhzpzlw\n11-13 c: cccccczgccccccccccc\n5-10 z: zzzzxzzzzvzzzzmz\n7-14 c: frhncvjxdcccbg\n12-19 g: gggggggggggggggggggg\n12-13 n: nwsknnnnnnnnnqtnnxn\n11-12 d: ddpddddnrddw\n8-9 s: bssssfsss\n1-2 t: ttttttttttt\n8-10 b: bbbbbbbrbfbbb\n3-7 c: jwtdcccgj\n4-5 j: djjjjhm\n2-7 v: snsflvvrf\n6-15 q: qqqqvrqqqqqqqqkqq\n8-12 q: wbqqxvflbqxqzq\n9-15 t: tttttztttjwdtsttpw\n1-8 l: lllllllll\n7-12 f: fffffffffffsf\n4-5 m: lklqm\n13-15 t: trtttttttthtgtt\n4-5 q: qqqqqqqqq\n1-10 r: prrrrrrrrhr\n2-5 d: cprddmdhdvd\n5-6 s: qsrxss\n4-5 q: vwlvqqrplzqs\n14-18 d: ddddddddlddddwdddgv\n2-5 p: ppmqxptpp\n12-13 w: wwwwwwwwkwwjtwww\n6-7 f: spfffsnzc\n9-16 s: zdmsgmcbspjtwsdspwvs\n11-17 z: zzzzzzzzzzzzzzzzzz\n11-16 j: jjjtjjcjjjbjbldv\n6-12 b: bbbbbbbbjbbbbb\n4-7 c: cccgcctc\n3-4 f: fffjhf\n10-19 g: ggjgggggjdggkgglggg\n1-13 x: xvqpxzmjjxklx\n6-8 k: kkkkkkkd\n7-11 r: rhfrxrrttnrfrgqphr\n10-11 w: hwwwwwncqwpwqwfvzww\n3-4 h: hhmhh\n1-5 n: zncnnwhcnqj\n3-10 m: mmcmmmmlmcmmmmm\n1-5 j: jjljx\n5-8 b: bbbbbbbbbb\n3-4 x: bvxxxxn\n1-3 b: bfkbbbb\n2-7 m: mjmmmmmm\n4-7 n: znnnnnnn\n12-14 h: kvlxhkdqbvwhhh\n11-12 q: qlgqqqqdmqqqqqqsqn\n2-5 p: pppppppvptvw\n4-5 c: ccccccvr\n1-5 b: xbqbn\n7-8 p: pxnddnpgsp\n2-3 j: nxxjs\n1-4 j: vtdfk\n7-12 l: mlcdlklmpbjl\n4-6 l: lqgrml\n12-14 v: vfplrnnvhlvhzk\n2-5 x: xjkxbxxx\n10-12 v: vvvvgvfjwvvjvvv\n1-3 w: brprgblcpwhhp\n3-8 n: nzdnnnnnnnvznnnnx\n3-6 p: dghpfthx\n8-9 r: frrrrrrmj\n12-13 c: wnmxtcqqgcdcdpp\n1-3 p: zpsp\n11-12 z: zpzwzzszmgzgvztdzmrz\n15-16 d: dxdqddddrdddddzzd\n4-15 g: gbgrsgggjgggqdvnhggg\n3-4 j: vjjmpl\n17-18 b: bbbbbbbbbbbbbbbbbbb\n14-17 h: vzhhhpqhqbgvghckh\n6-16 w: wlwdwvwwbwwxwwwv\n3-4 x: cxgj\n10-12 t: ttjttztlgrtbttst\n16-17 x: xtxxrxxxgxxxbqxfr\n8-12 j: gjnnbxhgcgpd\n3-4 b: pkkbfb\n2-3 g: gggmgwgggggggghggg\n8-10 z: zzzszzpjmzzzz\n10-11 r: xbrkrjcsrtmrgtrrm\n6-7 n: blmcznpnsbsw\n3-4 n: nwzqznxn\n6-9 j: jnjhvjxjjzc\n4-5 d: qrddth\n1-4 p: pphp\n9-10 j: mhxwjjjbjj\n5-6 l: llcllc\n1-3 t: rtrttvtttttt\n2-14 c: ccxccccfgcdccctbzgqc\n3-7 k: kkrkkkq\n5-10 z: zzzdqkzzgstqzzzz\n1-3 w: pjbt\n6-10 m: dlmsmrmmmmxmrmmmm\n1-4 v: qvlsm\n11-19 d: ddddddddddkdddddddpd\n2-3 s: gsknvsrcwfbxnk\n9-13 q: lvpvdqvzqndtbsrwjf\n2-6 n: sjspfczdsnt\n2-4 c: cccw\n8-10 x: xqhcxzxxxxfdx\n3-7 l: llltwlll\n2-4 m: khqmnm\n3-12 j: jvshgpptttfgkrnwf\n11-12 k: kkkkkkpdkkkk\n1-2 d: fcdd\n11-12 l: dpnxdjhclqllqsd\n8-9 p: tnphpwrppgm\n6-7 c: frhvcll\n4-9 x: xxxxxxxxxx\n3-4 n: znnn\n2-3 h: hmjw\n7-8 m: qvtpmwmm\n10-12 c: hbccgmvbhgccck\n6-7 j: jjjjgjjjjjjjjjjj\n3-6 m: rmrdgddjtmm\n9-10 h: hhhhhhhhhhh\n9-16 w: fwwwnmkwwjwcszwb\n3-10 v: wkvxpxjcsvqgv\n11-18 s: ssssssssssqssssssvs\n5-14 v: bxbkvfvnvnvvwf\n11-13 k: kdbkwbpkwjkkk\n4-7 n: ncnnkvnnn\n6-9 q: qxmvqmpqqdqsqjkhqq\n6-8 p: ppppppspfpp\n7-8 w: wwwhcsttd\n18-20 t: tlrzstttttrttdmxhxtt\n10-11 h: hhxzchbhhhshhbhv\n14-17 h: jbfhhthndhwkhhbhh\n12-13 t: tltttctbpmztrxnf\n4-15 w: mbgcvdvhhwbpckxwsw\n4-5 r: rrrrrlrvzrrhkr\n1-3 q: qplqqdqqqqqvmqz\n6-8 r: rvmrrftw\n1-2 c: cczcrncddc\n4-7 j: cjrbtlkxj\n2-5 t: httgxlxfdskjgmdk\n4-6 z: jtzzlv\n8-9 d: ndndddddd\n5-12 f: ncmjfbkmzxmfxfvnfnbw\n2-5 z: zzfnz\n1-6 d: sdddpr\n12-14 v: vdvvvvvvvvvkvvv\n11-15 m: jtgmzcmmmxnpvrtmmm\n3-8 d: vqtddpdqdfddhcd\n4-5 l: llplr\n2-4 f: fcfzh\n3-6 v: lbvklvp\n15-16 k: kkkkkkkkkkkkkkkkk\n6-7 c: ccccccccc\n11-16 h: hhhhhhhhhhhhhhhsh\n12-14 l: llllllwllllllllllll\n11-12 v: bvslvwvzgwnv\n4-5 l: xllllll\n2-3 c: xccc\n7-17 j: jjjjjjjjjjjjjjxjdjjj\n18-19 w: wrwwwwwxwwplwhwwwww\n4-5 z: tzzncf\n1-2 g: gpgswkqsnxxkn\n10-12 f: xpfffrxfqfcfff\n14-16 r: rrrrrrrzxrrrrrrr\n8-17 d: dddddddddddddddddd\n7-11 j: kjvjgbjqkwjjjs\n7-11 x: xxxxxxxxxxxxxx\n13-16 d: cddddddgddddrddgdzd\n11-15 x: xhpxxxxxxbktlxr\n5-19 p: ppkpsnhkpttdqpvlhzp\n10-14 f: xcfzqffcnfprzf\n3-17 c: bdcmfmcptmhqczphc\n1-12 d: ddddddddddmd\n6-7 h: nnbphmjb\n14-15 w: dmlvwvxwgcvfgwwl\n7-8 v: qlvvvgjrcvwvvlszgvc\n2-4 c: ncrc\n5-7 q: qqmtqqqx\n13-14 c: pcnbccwtcczcccg\n1-5 t: dpgtlsw\n12-13 f: zrcqtjjqjfrqp\n6-12 n: mbhwrnnxzzjnlrmm\n5-7 v: rvtrvhvtnvmvvmdv\n9-14 g: ggggggggfggggl\n1-13 q: gqqqgqqqqqqqpqq\n8-15 k: tkdkdrgkdkktkrkdk\n9-11 m: mpvmldmmbmj\n2-6 c: chcccgclcrcc\n5-7 l: llllhlllll\n11-12 g: ggggggggggggg\n2-3 x: bvcx\n11-14 b: bbbbbbbbbqbsbb\n3-6 x: xxxxxxx\n9-16 g: bgggvwjhgmggpqjgv\n6-9 n: ngsdrnnnknxgqdn\n5-6 x: btjbxx\n9-11 t: ttttctttdtktttt\n6-7 s: ncxcsds\n5-17 s: ssssssssssssssssss\n3-8 t: ctdvrttftptt\n9-10 j: fllmfjqjtqjjjtjgjjj\n9-13 z: qzzhdznqfxrrrpw\n4-6 k: hhkkqkwkk\n12-13 q: qqdqqsqrrqqnx\n4-6 j: hjtbnnfbhqbd\n3-10 w: wwcqtplgdwzc\n11-13 d: wdxddddcdvddddd\n3-6 d: rcxlqm\n7-8 w: wgcpwnxldswgc\n6-10 p: pppppbpppwp\n5-10 w: wbfwdgwfzrrlwft\n10-11 c: ccccccccccbp\n3-6 q: qqtqqbqq\n12-15 k: kkkkkkkkkkkkkkk\n12-15 x: xxxxxxxxxxxxxxxx\n3-16 x: xvlxmxnnxxxkxxxj\n3-13 z: zfzxglzkhzrbzpzdtn\n6-14 f: mfffflfffffffzfff\n10-12 m: lnnkhjthrndmcj\n12-13 k: kkkkkkkkqkkjbk\n3-4 c: kzcz\n3-4 h: phhhl\n5-15 n: nnnnnbnsnnnnnnqnnnn\n12-16 v: zvccvkvcfvplvvcx\n1-3 z: qzzzz\n2-3 p: fjzkvmcsp\n8-10 c: rccdvcckkcc\n3-11 l: lllllllnlll\n5-8 w: wwwdffwwwwgvwf\n9-11 z: kjzrzzkhlzpzzzzzznl\n9-16 t: ttttttttdttttttqttt\n14-15 s: sfsfzlshbskndfcz\n6-8 k: kkkkkkkkk\n2-4 k: wpck\n8-9 v: gtmcmvkvzbcrgvc\n6-10 v: vvvvvmvvvvv\n10-11 h: lhhhxhhhvwmmghfwk\n8-11 w: wwwwwwwfwwlww\n5-17 b: bbbbbbbbbbbbbbbbbb\n4-11 j: jjjjjjjjjjjj\n7-13 p: mpppppnnpppptcppp\n10-11 w: wwwwwxwwmvwww\n6-8 n: nmnsnknt\n1-7 z: zzzzzhzzzb\n2-6 v: kccntgvhvggvdfnq\n16-17 g: gggggggggggggggxgg\n6-8 v: brvpfvgvpvvgjpzq\n2-10 w: sgnqldnccv\n3-4 z: dzxkzzszzrpdgx\n7-10 q: qqqtqqmqqqqq\n4-9 x: xxxnxwxxjxxxx\n10-12 d: ddddddddqddq\n7-8 z: zrzzzzzs\n1-19 w: wwwwwwwwwwwwwwwwwww\n3-4 l: jqxlf\n13-15 t: ctbllrttmtqttxt\n12-13 p: ppbppppqfppts\n6-11 p: pklpppljpcpgdpv\n8-9 s: ssstsssss\n13-16 t: ttttkvmttntwtpft\n5-8 x: xkvxfxxpg\n2-18 s: fgfrrxjqfrxskgkqvj\n1-4 v: fwmlrv\n9-10 x: xxxxxxxxxxx\n6-13 f: wbwctctbsptfj\n4-13 n: nnnnnnnnnnnnrn\n8-9 n: nmnsnnmnnlhlhvjx\n12-14 g: gggggggggggczv\n5-8 r: rzqrrrrkzhr\n12-17 k: kkkkkhkkkkxkkkkbkk\n6-8 h: hhhhhhhqqmhh\n1-3 h: dhmmghrhthhhvqpthf\n3-4 t: ttkft\n3-6 w: fwnwwgqq\n8-9 h: whpwkhbhh\n9-10 k: kkkkkkksbxk\n4-6 k: qfkkrkwr\n3-6 l: flllgl\n6-7 z: zzzzzqmzzzzzz\n2-3 h: zhhzh\n4-9 t: gvqnsttftcd\n3-6 c: zcbcsktcmhrkgc\n5-8 m: zmqmmmmmmmmmmf\n1-2 c: ccvcc\n7-9 s: ssssssjstsssssssssss\n12-19 t: ttftttttpnkttttttwt\n5-6 m: lpqmmmfmvzb\n9-11 d: ddddddddvdldd\n7-9 k: kkkkkkkkk\n12-15 l: lllllllllllpllllll\n1-4 b: kzbbb\n18-19 b: bxvlzxjgzbdbwfrjhvv\n2-9 w: whwwwnwwcwwwwwww\n4-11 f: ffffffffsff\n5-6 v: fhvcvv\n1-5 m: qqmpfmm\n6-8 m: mmmmkvvhmcmmmmm\n2-6 c: gcpvrcfhpsrpbtffnwk\n5-6 q: sqkfqq\n3-4 p: mbqppdqkdgkbf\n8-11 b: bbbbbbbtbbpbbb\n5-6 g: lmggqm\n3-7 q: hnqhnqq\n2-4 r: rrrlrd\n7-8 r: rrrbrlrr\n5-9 j: jjjdqjjjjjjjqjjckg\n6-7 l: lllwpll\n1-4 w: wxswwkw\n17-18 w: wnxxmrvqmcgmntpfxnh\n1-5 c: ccccc\n4-8 v: vvxvvvvw\n8-9 p: pppppppmpppp\n1-7 z: zzzzzzmzzz\n10-12 q: qqqqqqqqqssmqq\n2-5 x: mxxnv\n4-19 r: rrrlrrrrrrrzfrlrrrfr\n4-8 k: kkkkkpxk\n5-7 r: rfrqfbrrjv\n3-6 h: hsvkkw\n2-5 w: nwsfw\n2-5 q: hqstqgq\n6-15 n: mbmtgnvfzjnnjgnn\n1-2 f: fffffff\n1-7 v: vzvvvvvvxvvrrnzvv\n3-9 h: whhhhhhhhhhnhhh\n11-15 g: cgxhgsggnggrkgv\n5-6 m: mmmmmmm\n14-19 k: qkkkcvqjkklhkkkktkk\n2-8 r: fcrrqrrgrrrrrrlr\n1-2 l: lllvl\n17-18 c: vmcbkchcdktrnxccht\n10-14 l: klwzklwmllccql\n4-7 g: xgfggwg\n2-4 s: trhz\n3-5 j: lzfglwfbsqj\n4-5 p: stnprtpzszfc\n9-13 p: pppnppppjtsppc\n6-16 r: rxrrrrrrrdrbrrlrh\n10-11 c: ccccvclccrl\n8-9 l: nlglpwlqxl\n10-11 x: xxxxxxxgsxx\n7-8 z: zzzzszzlzwzzzzzzzz\n1-5 q: qqnbc\n2-3 v: jvvvv\n2-6 f: btdfbcfnk\n8-10 w: wlwnbwwblmww\n3-13 v: brwmcxvlptbdvchwkjp\n8-9 w: gwwwwwwbr\n2-11 k: pkhzsvjbhkk\n6-7 g: gggggmb\n6-7 g: gggggggg\n7-16 q: cqxfqzqnqvmkkhjqdr\n1-13 r: rrrrrrrrlrrrrrr\n10-14 x: xxxxxxxxxqxxxxxxxxxx\n4-5 l: llllp\n1-3 c: wccc\n5-11 k: kkfgkkkkkkkkqhk\n2-7 n: lnnjcks\n12-14 s: sssssssssssssss\n1-16 q: qqqqqqqqqqqqqqqzq\n2-3 n: nnnn\n8-20 m: vrtvfghfmskclmlmbwmm\n2-4 n: nnwn\n12-13 d: pdftgnmpcwddd\n5-6 b: tsrbbb\n4-7 q: zrppqcw\n11-17 l: llllllllllllllllll\n1-4 b: brzbfdgbphrzxtlpgj\n7-8 x: xwlxxxxxxl\n5-6 h: hhchnm\n3-4 x: xxxxx\n4-5 k: pkkqjkk\n4-8 k: xqkkfwdkmsrr\n7-8 l: lllllcsl\n4-9 c: ccczcccccccccc\n8-12 j: jjjjjjjqjjjjjjjj\n9-11 j: vzkhqcjzkwjbpzv\n11-12 r: rrrrrrrrrrtxr\n1-4 t: mttbgtttttt\n2-12 r: rrrrrrrzrrrrrr\n10-11 c: ccccccccccgcc\n9-16 d: bgdctdzjdxqfrbddznnp\n3-7 s: brsjsdsh\n3-11 j: cjwlbhgvcjc\n13-16 j: pjfrdprjhmfqjddq\n9-15 n: nnnnnnnnnnnnnnnnn\n14-15 b: zbbbtbfbbbbbbbl\n4-14 p: pppppppppppppjpp\n3-6 j: pwbfjs\n1-11 z: zzzzzzzzzzjz\n7-17 d: gldddpskdbvmdmwgk\n5-18 g: gggggggggggnmggggggg\n6-7 g: llgggdh\n4-5 j: zszjs\n3-13 s: kwjbvbgxhwsbskjdkbv\n1-2 c: kghcc\n1-8 k: vtkthkhs\n6-7 n: nnnnnnnnn\n13-14 s: xssssssssssssq\n3-4 h: hhxnh\n8-10 g: gctrgrcgjg\n7-9 n: nnncnnnnnn\n7-8 b: bbnpbbbbb\n6-11 x: jxqtcxxdxkxcwtxhdv\n10-11 q: qqqkqkqqqqzqqq\n5-6 k: kkkkkk\n3-4 m: lndx\n14-18 l: hdzlvpxlqnbklgpqgpz\n14-18 f: ffffffffffxfffffff\n4-9 p: gprzchppz\n5-7 q: qqsljxk\n7-8 q: pqqjqnkq\n3-6 v: jvmvvvvvvjvf\n2-10 l: hllsznczblmxbrmrnj\n13-14 w: wwwwwwwwwwwwvc\n4-8 m: mnmmmmmgm\n10-11 r: rrrrrrwcrlq\n3-4 q: qqqq\n4-9 s: spwsjshpst\n1-6 k: kkznkkkkk\n2-6 t: dlbjpf\n7-10 d: qxqbdtddgdvzmdmrp\n16-18 b: bbbbbblbbbbbbbbvbs\n1-5 c: cwbbccccccb\n4-11 z: zrxzszzlzvzzzmdkt\n17-19 b: bppptxztffxxqnlpbbb\n3-9 n: nnnlncrnnnnn",V="--- Day 2: Password Philosophy ---\nYour flight departs in a few days from the coastal airport; the easiest way down to the coast from here is via toboggan.\n\nThe shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. \"Something's wrong with our computers; we can't log in!\" You ask if you can take a look.\n\nTheir password database seems to be a little corrupted: some of the passwords wouldn't have been allowed by the Official Toboggan Corporate Policy that was in effect when they were chosen.\n\nTo try to debug the problem, they have created a list (your puzzle input) of passwords (according to the corrupted database) and the corporate policy when that password was set.\n\nFor example, suppose you have the following list:\n\n1-3 a: abcde\n1-3 b: cdefg\n2-9 c: ccccccccc\n\nEach line gives the password policy and then the password. The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid. For example, \n1-3 a means that the password must contain a at least 1 time and at most 3 times.\n\nIn the above example, 2 passwords are valid. The middle password, cdefg, is not; it contains no instances of b, but needs at least 1. The first and third passwords are valid: they contain one a or nine c, \nboth within the limits of their respective policies.\n\nHow many passwords are valid according to their policies?\n\n--- Part Two ---\nWhile it appears you validated the passwords correctly, they don't seem to be what the Official Toboggan Corporate Authentication System is expecting.\n\nThe shopkeeper suddenly realizes that he just accidentally explained the password policy rules from his old job at the sled rental place down the street! The Official Toboggan Corporate Policy actually works a little differently.\n\nEach policy actually describes two positions in the password, where 1 means the first character, 2 means the second character, and so on. (Be careful; Toboggan Corporate Policies have no concept of \"index zero\"!) Exactly one of these positions must contain the given letter. Other occurrences of the letter are irrelevant for the purposes of policy enforcement.\n\nGiven the same example list from above:\n\n1-3 a: abcde is valid: position 1 contains a and position 3 does not.\n1-3 b: cdefg is invalid: neither position 1 nor position 3 contains b.\n2-9 c: ccccccccc is invalid: both position 2 and position 9 contain c.\nHow many passwords are valid according to the new interpretation of the policies?\n\n",G="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n\n    inputData = inputData.split('\\n')\n\n    var numberOfResultsPartOne = 0\n    var numberOfResultsPartTwo = 0\n\n    inputData.map(x => {\n        var rowData = x.split(' ')\n        var letterToBeFound = rowData[1][0]\n        var limits = Array.from(rowData[0].split('-'),Number)\n        var minAmount = Math.min(...limits)\n        var maxAmount = Math.max(...limits)\n        var passwordData = rowData[2].split('')\n\n        var lettersFound = 0;\n        \n        // Part One\n        passwordData.map(y => {\n            if (y == letterToBeFound)\n                lettersFound++\n\n            if (lettersFound > maxAmount)\n                return false\n\n            return true\n        })\n        \n        if (lettersFound >= minAmount && lettersFound <= maxAmount) {\n            numberOfResultsPartOne++\n        }\n\n\n        // Part Two\n        if ((passwordData[minAmount - 1] == letterToBeFound) != (passwordData[maxAmount - 1] == letterToBeFound))\n            numberOfResultsPartTwo++\n    })\n\n    this.SetResult(numberOfResultsPartOne)\n    this.SetResult(numberOfResultsPartTwo)\n}",Y={components:{"show-task":E},data:function(){return{CurrentInputData:M,CurrentTaskData:V,CurrentSolutionData:G,InputData:M,TaskResult:[]}},mounted:function(){this.Solve(M)},methods:{Solve:function(n){n=n.split("\n");var a=0,L=0;n.map((function(n){var t=n.split(" "),e=t[1][0],r=Array.from(t[0].split("-"),Number),i=Math.min.apply(Math,Object(_["a"])(r)),s=Math.max.apply(Math,Object(_["a"])(r)),o=t[2].split(""),l=0;o.map((function(n){return n==e&&l++,!(l>s)})),l>=i&&l<=s&&a++,o[i-1]==e!=(o[s-1]==e)&&L++})),this.SetResult(a),this.SetResult(L)},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},H=Y,$=Object(c["a"])(H,A,O,!1,null,null,null),X=$.exports,U=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},J=[],K=(L("4160"),".....#....#...#.#..........#...\n...#.................#.........\n......#...#.#.#.....#..#.....#.\n.........#.#.............##....\n#..####..#..#.##.....#.........\n...#........#..##...........#..\n..##.#.#..#....#..#......#.#...\n.......#.##....#.....###....#.#\n.#..#...#......#..#....##.#....\n...#...............#.#.....#...\n..#............#..#.........#.#\n#.#.#.............##.#......#..\n#...#..............##...#.#....\n...#....#................#.#..#\n..#.#..#.#.#..#.....#.........#\n#.............#..#..........#..\n.#...#.#........###.#....#...#.\n#......#....#.#..#.##..#.......\n.##......###.#......#..##...#..\n#..#....#........#......#.#....\n.#..................#.....#.###\n.#......#.#.#.....#...#.#......\n....#.............#.#..........\n....#..#.#........#..###.......\n.....#....#...#........#.......\n...........#.###....##.......#.\n....#...........#.#..#...#.....\n...........#.....#.#...........\n.....#........#.....#.#..#....#\n#.#......#.......#.......#.....\n..........#.............#.#.#..\n#...#..........#....#....#.....\n.#.#......#..##...#.....#...##.\n.#....#...#.#.......#.#........\n....#....##.##...#.............\n#...#....#..#.........#........\n...#.....#.#...#.......#..#....\n#.......#...#....##........#..#\n####........#........#....#.#..\n............##..........#......\n.......#.....#.#.#.##..#...#...\n..........#....#...##.........#\n..##..####.......##......#.##..\n.....#.#......##...#..#...#....\n....#.#.#.........#........#...\n...........###...#.........##..\n.......#.#....#......#.##...##.\n.................#...##.#...##.\n.......#.......#..#.#..........\n.#....#..#....#........#.......\n...............#.##..#...##..#.\n.###.#....#......#...#.#.....#.\n.#.....##.......#.......#......\n....#..#.....#.....#...........\n.......#....#.................#\n.......#.##...#...#......#.....\n.#.....#...####.............#..\n......#.........#..........#...\n.........#....#....#........###\n....#.........#......##.....#..\n....#........##...##.....##...#\n.#..#....#..........#...#.###.#\n#..#......#...#........#.......\n...#.........................#.\n.............#........#........\n.......#.#.#.....##.....#..#...\n..##..##.........#.............\n.#...#..#......#...##..##..###.\n.....#....#...#...##.##........\n.#.#..#...........#..#..#......\n##..#...#..#...##..#....#......\n...#...#...#.........#....###..\n...##..#....#.#.#.......#...#..\n..#.#.....#..#....#..##.......#\n.....#.#.....#......#....#.#...\n.......##....#.....#...#.....#.\n..##..#.................#.#....\n..............##....##.#..##...\n.#..#.....#....#.#.#...........\n......#.#.#..#..#...#.....#..##\n..#.........#.#.......###...##.\n#.....#...........#.....#.##.#.\n#..........#....#....#..#....#.\n.#.....#...#.......###......#..\n....##..##......#....#....#....\n.......#.#.............#....#.#\n.#..#.##.##.##....#.#.....##.##\n....#..##.#..#.............##..\n....#...........#...#....#..#..\n...........#..#....#....##.#.##\n......#....#....#.....#......#.\n.##.##....#.....#.#......#...#.\n.....##.......#.#.#........##..\n#..........##..#....#..#.#....#\n...#...........................\n...#..#...#..#.#.#.#.......#.#.\n.....#.........#..###..........\n...#.#......##....#......#..###\n#..............#....#.......#..\n.........##......###..###......\n..#......##...........#.##.....\n#.#..#......#...##.............\n......#.#.............#....#..#\n#.....##..#.#.................#\n..##....#.....#....#.....###...\n.#.#.##.....#..................\n.#......#.#.#.....#..#....#....\n..#.#.....##.#...#..#.#.##.....\n..#.#..#......##.#.#..........#\n.......##.....#..#...#....##.#.\n...#.....#..........#..........\n......................##......#\n...###.........##.........#....\n....#..................#.....#.\n.##..#.............#........##.\n....#....#...###..........#....\n.....#.#..........###..........\n..#......##......#.#.##.#..#...\n##...........#.#..#.....#..#...\n.........#......#..........#.#.\n...#.##.#..#..###..#...........\n....##.#.##...........#.....##.\n....#...................###....\n#.......#......#......#.....#..\n#..........##..................\n...#..#.#....#..#.........##.#.\n......#...##.#...............#.\n.........#....#.#...#..#..#....\n...#......###..#......#.....#.#\n#..###.#.............#.........\n......#...........#............\n..#..#.##.....#......#.#..#...#\n.........#..............#......\n........#.....#..#...#.....#..#\n.....................#........#\n.##.......##...#.###.........#.\n.#...#.......#.#....##....#....\n........#......#...........#.#.\n....#......##...#.....#...#...#\n..#.........#.#...............#\n....#.....#......#.............\n.............##.....#....#.....\n........#......#.#.....#....#..\n#.........#...#......#....#...#\n.#........###...#.#.#...#....#.\n.###...........#..#............\n....##.........#..#...##.#..###\n.####..#.#...............##.#..\n#.....#...#....#.......##....#.\n..#.....##...##.#...#..#.......\n..#.###.......#.....#.......#..\n...........#.......#....##....#\n..#...#....##........###......#\n...#..#..............#...#.....\n##.#.............#....##.#..##.\n##.#..#..............#.#.......\n.......#....#....##............\n.##..##.#..........#.#...#.#...\n.........##.......##...#...#...\n............#...##....#...#....\n........#...#..#...#.##......#.\n..#...#.#.........#.#....#.....\n..#...#.#..#.......#.#.........\n.......#.....#...#.#..###....#.\n.#......#.#....#.#.####....#...\n.......##..#......#...#......##\n#####.....#........#.#.......#.\n.....#...#..#...#.#.....#..#...\n....#...#....##.....##....#.#..\n.#..#......#.####.....#....#..#\n...#.......#..#.....##........#\n.#.....#.#.#.....##...#..#.....\n.............#...#..#.....#....\n...#.....##.......#...##..#...#\n..#.............#...#..#..##...\n...#........#........#...#...#.\n##..........#.#.#.............#\n....#....#..............#..#...\n....#..####..##....#.......#.#.\n.#..#.....##....#.#.....#...#..\n#............##..#..#.#......#.\n....#..........##..#...........\n..#.##.#.......#...#.##....#...\n....#.#.............#.#.##....#\n...#..#.#.#......#..#....#....#\n.............#...........#..#..\n#.............##.......#..###..\n..##....#.#.#...#...#....#...#.\n##.......####........##..#.....\n.###..#..#..#..#...#.#.........\n............#............#.....\n#...#.....#.#.##.##...#.......#\n#........#....#...#.........#..\n#....#.#......#.............#..\n....#............#......##...#.\n.......#........#..#.......#..#\n#.#...#.#.#..#..#........#....#\n#.#.##...........#.....#.....#.\n.#...##.#..#...................\n###...#.#.....................#\n.#....##...##.#....#..#........\n........###...#.#....##...#..##\n...#..#..........###..#.......#\n..#..##.............#.....#....\n....##..#..............#.......\n...##...##.#....#.#...#...#.#.#\n..#..........#.....##........#.\n.#.#.....#......#..#....#......\n...##.#....#.......#......#....\n...##..#........##......#..##..\n#..###...#...........#.#.......\n..##...#...#.#.#...#.#.....#...\n..#.....##.#....#.....#..#.....\n..#.#......#.......#...........\n....##......##.............#..#\n.......#.........##...#..#...#.\n.#........#.##.#.....#.#.......\n#..#...#..#.....##...........#.\n..##..............#....#.......\n.#..#....#.#...........#..##.#.\n#....#..###..........#...#.....\n.......#...##........#.#...###.\n....#..#......##......#.....#..\n.#..##..#..#......#......#.##..\n....#.#...........#..#.#.##.#..\n.....#......#.....#.....#..#...\n..........#...........#...##...\n#..#.#.#..#....#.....##......##\n..#.....#.....#................\n...#.#..##.........#..#..##....\n.#.....##..#.#.#.#.....#.......\n...........##...#..............\n...#.#....##..#.............###\n...#.#...........#.........#...\n#.....#.....##..#.#.#.#....#...\n##..................##.##......\n......#.....#....#.....#..#...#\n.............#.......#....#..##\n.#..#.##..#..#.........##...#..\n..#.#....#........#....#....##.\n.#.#.#.#.#.......#.......#..#..\n#.....#..##..#.........#.......\n.............#.#..............#\n.........#......#....#.#......#\n.........#.#...##..#.#.........\n...........#..........#........\n.......#...#...#......#..#.....\n#.....#...............#.....#.#\n..#....#..........#.#...#..#...\n#....##..#..#.....#.#..#.#.....\n.#....#..###............##.....\n......#.##...........#....#..#.\n...#........##....#...#...#....\n..#.#.#.....#..#.#..........##.\n..................#...........#\n##........#.#......#.#.......#.\n......#..#.............##......\n.#..###..#...###......#....#..#\n..#...........#...#...##..#...#\n..#..........#..............#..\n.....#.........................\n..#.#..##...........##...#.....\n...........#......##.....##....\n......#.......#................\n.........#.......#.#...........\n#......#...#........##.....##..\n...#.....#....#..#.....#.......\n....#.#......#...#..#.##.##...#\n..#..#.#.....#...#...........#.\n.#....##.####.....#..........##\n...##.##.....##..###...#.......\n.......#.#...#....#.......#..#.\n.#..#.###.#.............#......\n.###.........####..#...........\n#..#.#.###.....#.......#.......\n.#.....#.....#.....#.........#.\n..#...#......#.......##.###....\n.......##.............##.#.....\n.....................#.....##.#\n##.#...#........#..##........#.\n...#..........#.#.#..#......###\n.#....#.#.#..........##........\n....#....####....#.#....#..#.#.\n..#.........#....##..........##\n...##.#.......##.#.......#.#...\n........#..#......#...#.#.....#\n.....##............#.#.......#.\n.........##...##..#.....#..#...\n#...#....#........#...#....##.#\n..#.....#..........#...##.....#\n.##..#.........#...........#...\n.....##.#.#.#.#..#...#.....#.#.\n.#..#..##.........#.......#...#\n#....#.....#...#....#.........#\n...#..#.......#.........#......\n.#....##..#......##.#.#......#.\n....##.##...........#...#......\n..#.#....#.##...#......#.......\n...#........#.............#....\n...##....................#.###.\n.#.......#.........#......##...\n....#..#..............#....#...\n....##.#............#..........\n.#...#....#...##..........#....\n....#............#.....#.......\n.......#........#..............\n....#.#....#.#..#..#...........\n......................#.#......\n#......##.....#..#.......##....\n...#........#........#.#...##..\n##.#....##....#................\n#..#....#..............#.##....\n......#........#...........#...\n#....##.##...#...#..#...##.....\n............#............#..#..\n#....#...#..#..#.#...........#.\n.......#..........#..........##\n.....#......#....##.#..........\n.#....#....#....#....#..#...#..\n.....###....#...#.#.#........#.\n.......#...#..........##..#...#\n..##........................##.\n.....#....#..............#....#"),Q="-- Day 3: Toboggan Trajectory ---\nWith the toboggan login problems resolved, you set off toward the airport. While travel by toboggan might be easy, it's certainly not safe: there's very minimal steering and the area is covered in trees. \nYou'll need to see which angles will take you near the fewest trees.\n\nDue to the local geology, trees in this area only grow on exact integer coordinates in a grid. You make a map (your puzzle input) of the open squares (.) and trees (#) you can see. For example:\n\n..##.......\n#...#...#..\n.#....#..#.\n..#.#...#.#\n.#...##..#.\n..#.##.....\n.#.#.#....#\n.#........#\n#.##...#...\n#...##....#\n.#..#...#.#\nThese aren't the only trees, though; due to something you read about once involving arboreal genetics and biome stability, the same pattern repeats to the right many times:\n\n..##.........##.........##.........##.........##.........##.......  ---\x3e\n#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..\n.#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.\n..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#\n.#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.\n..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....  ---\x3e\n.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#\n.#........#.#........#.#........#.#........#.#........#.#........#\n#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...\n#...##....##...##....##...##....##...##....##...##....##...##....#\n.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#  ---\x3e\nYou start on the open square (.) in the top-left corner and need to reach the bottom (below the bottom-most row on your map).\n\nThe toboggan can only follow a few specific slopes (you opted for a cheaper model that prefers rational numbers); start by counting all the trees you would encounter for the slope right 3, down 1:\n\nFrom your starting position at the top-left, check the position that is right 3 and down 1. Then, check the position that is right 3 and down 1 from there, and so on until you go past the bottom of the map.\n\nThe locations you'd check in the above example are marked here with O where there was an open square and X where there was a tree:\n\n..##.........##.........##.........##.........##.........##.......  ---\x3e\n#..O#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..\n.#....X..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.\n..#.#...#O#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#\n.#...##..#..X...##..#..#...##..#..#...##..#..#...##..#..#...##..#.\n..#.##.......#.X#.......#.##.......#.##.......#.##.......#.##.....  ---\x3e\n.#.#.#....#.#.#.#.O..#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#\n.#........#.#........X.#........#.#........#.#........#.#........#\n#.##...#...#.##...#...#.X#...#...#.##...#...#.##...#...#.##...#...\n#...##....##...##....##...#X....##...##....##...##....##...##....#\n.#..#...#.#.#..#...#.#.#..#...X.#.#..#...#.#.#..#...#.#.#..#...#.#  ---\x3e\nIn this example, traversing the map using this slope would cause you to encounter 7 trees.\n\nStarting at the top-left corner of your map and following a slope of right 3 and down 1, how many trees would you encounter?\n\n--- Part Two ---\nTime to check the rest of the slopes - you need to minimize the probability of a sudden arboreal stop, after all.\n\nDetermine the number of trees you would encounter if, for each of the following slopes, you start at the top-left corner and traverse the map all the way to the bottom:\n\nRight 1, down 1.\nRight 3, down 1. (This is the slope you already checked.)\nRight 5, down 1.\nRight 7, down 1.\nRight 1, down 2.\nIn the above example, these slopes would find 2, 7, 3, 4, and 2 tree(s) respectively; multiplied together, these produce the answer 336.\n\nWhat do you get if you multiply together the number of trees encountered on each of the listed slopes?\n\n",Z="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n    \n    // Prepare data to have array of arrays, where each index contains one line as array\n    inputData = inputData.split('\\n')\n    for(let i = 0; i < inputData.length; i++) {\n        inputData[i] = inputData[i].split('')\n    }\n\n    // Part One\n    this.SetResult(this.SolveRoute(inputData, {x:0, y:0}, {right:3, down:1}, '#'))\n\n    // Part Two\n\n    // Setup input data\n    var userInput = [\n        {\n            input: {right: 1, down: 1},\n            symbol: '#'\n        },\n        {\n            input: {right: 3, down: 1},\n            symbol: '#'\n        },\n        {\n            input: {right: 5, down: 1},\n            symbol: '#'\n        },\n        {\n            input: {right: 7, down: 1},\n            symbol: '#'\n        },\n        {\n            input: {right: 1, down: 2},\n            symbol: '#'\n        },\n    ]\n    \n    var result = 1\n\n    // Multiply results together as they finish\n    userInput.forEach(input => {\n        result = result * this.SolveRoute(\n            inputData,\n            {x:0, y:0},\n            input.input,\n            input.symbol\n            )\n    });\n    \n    this.SetResult(result)\n\n},\nSolveRoute(inputData, startingPosition, input, symbol) {\n    var symbolsFound = 0\n    var currentPosition = startingPosition\n\n    do {\n        // Check if symbol matches\n        if (inputData[currentPosition.y][currentPosition.x] == symbol)\n            symbolsFound++\n\n        // Add input to current position\n        currentPosition.x += input.right\n        currentPosition.y += input.down\n        \n        // Check if out of bounds\n        if (currentPosition.y >= inputData.length)\n            break;\n        \n        // If x-axis has moved over the limit of array, move it back to the start, in correct position\n        currentPosition.x = currentPosition.x >= inputData[currentPosition.y].length ? currentPosition.x - inputData[currentPosition.y].length : currentPosition.x\n        \n    } while (currentPosition.y < inputData.length)\n\n    return symbolsFound\n}",nn={components:{"show-task":E},data:function(){return{CurrentInputData:K,CurrentTaskData:Q,CurrentSolutionData:Z,InputData:K,TaskResult:[]}},mounted:function(){this.Solve(K)},methods:{Solve:function(n){var a=this;n=n.split("\n");for(var L=0;L<n.length;L++)n[L]=n[L].split("");this.SetResult(this.SolveRoute(n,{x:0,y:0},{right:3,down:1},"#"));var t=[{input:{right:1,down:1},symbol:"#"},{input:{right:3,down:1},symbol:"#"},{input:{right:5,down:1},symbol:"#"},{input:{right:7,down:1},symbol:"#"},{input:{right:1,down:2},symbol:"#"}],e=1;t.forEach((function(L){e*=a.SolveRoute(n,{x:0,y:0},L.input,L.symbol)})),this.SetResult(e)},SolveRoute:function(n,a,L,t){var e=0,r=a;do{if(n[r.y][r.x]==t&&e++,r.x+=L.right,r.y+=L.down,r.y>=n.length)break;r.x=r.x>=n[r.y].length?r.x-n[r.y].length:r.x}while(r.y<n.length);return e},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},an=nn,Ln=Object(c["a"])(an,U,J,!1,null,null,null),tn=Ln.exports,en=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},rn=[],sn=(L("caad"),L("a15b"),L("fb6a"),L("2532"),L("159b"),"eyr:2021 hgt:168cm hcl:#fffffd pid:180778832 byr:1923 ecl:amb iyr:2019 cid:241\n\nhcl:#341e13 ecl:lzr eyr:2024 iyr:2014 pid:161cm byr:1991 cid:59 hgt:150cm\n\niyr:2018 eyr:2027\nhgt:153cm\npid:642977294 ecl:gry hcl:#c0946f byr:1999\n\npid:#534f2e eyr:2022\necl:amb cid:268\niyr:2028 hcl:2b079f\nbyr:2008\nhgt:185cm\n\nbyr:2000 hgt:161cm ecl:blu\neyr:2030 pid:647793597 hcl:#a97842 iyr:2011\n\nhcl:#3e335d\nhgt:75cm\niyr:2010 byr:1940 ecl:#e0f130\npid:434016528\ncid:138 eyr:2017\n\nhcl:#6b5442 cid:185 hgt:163cm eyr:2023\npid:510706612 byr:2001 ecl:amb iyr:2019\n\nhcl:#6b5442 byr:1942 eyr:2022\niyr:2016 pid:969898152 ecl:amb\n\necl:blu\npid:734638153 byr:1968\nhcl:#733820 eyr:2020 hgt:160cm\niyr:2019\n\niyr:2014 eyr:2020 byr:1996\nhgt:158cm ecl:oth pid:920487833 hcl:#888785\n\nbyr:1948 hcl:#341e13 cid:117 pid:802002577\nhgt:188cm eyr:2028\necl:blu iyr:2010\n\npid:9572562 hgt:65cm ecl:#ac200e iyr:2028\nbyr:2002\neyr:2031 hcl:z\n\nbyr:2024 hcl:#866857 ecl:dne\neyr:2031 pid:#a28d39\niyr:1920 hgt:158in\n\npid:023850020 hgt:163cm iyr:2017 byr:1966\ncid:145\necl:grn eyr:2027 hcl:#ceb3a1\n\nhcl:z byr:2008 eyr:2020 ecl:#e810c9 hgt:76cm pid:0485860220\n\nhgt:154cm\nhcl:#fffffd ecl:grn byr:1929 iyr:2019 pid:868514160 eyr:2026\n\ncid:181 byr:1991 eyr:2026 hgt:166cm\nhcl:#cfa07d\niyr:2010 ecl:hzl pid:248467397\n\neyr:2036\nhgt:60cm byr:2023 ecl:#7f7a50 iyr:1964 hcl:z pid:189cm\ncid:233\n\necl:#8b23b5 iyr:1940 hcl:#341e13 pid:806874850 hgt:150cm eyr:2033 byr:1930\n\nhcl:#efcc98 ecl:#cf8dd0 byr:1939 hgt:75cm eyr:2023 pid:7912576181\niyr:2014\n\ncid:282 hcl:#18171d\necl:blu pid:475471726\nhgt:158cm byr:1948 eyr:2030 iyr:2018\n\neyr:2030 iyr:2013 pid:843774570 hgt:186cm ecl:amb\nbyr:1961 hcl:#7d3b0c\n\ncid:239\neyr:2021 pid:814286281\necl:gry byr:1945 iyr:2016 hcl:#efcc98\nhgt:167cm\n\nbyr:1931 hcl:#cfa07d pid:148883217 iyr:2011\nhgt:172cm\neyr:2026 ecl:gry\n\nhcl:z\neyr:2037\necl:#bbb299 iyr:2015 byr:1931 hgt:186in\npid:8019203964\n\nhgt:178 hcl:bf28b4\neyr:2028\necl:zzz\npid:184cm byr:1935 iyr:2017\n\ncid:195 byr:1936\neyr:2028 hgt:168cm hcl:#a69e3b pid:836680712\necl:amb iyr:2020\n\nhgt:65in\npid:580748663 eyr:2028 iyr:2018 ecl:amb hcl:#866857 byr:1969\n\niyr:2021 hcl:94dc65\neyr:2027\nbyr:2011 pid:172cm ecl:#84a05a\nhgt:72cm\n\npid:138102285\nhcl:#efcc98 iyr:2019\necl:grn cid:270 byr:1969\nhgt:187cm eyr:2027\n\neyr:2022 hgt:151cm pid:505032844\necl:brn iyr:2020 hcl:#cfa07d byr:1965\n\nhcl:#7d3b0c\necl:blu eyr:2024\npid:7946112272 iyr:2010 cid:337 hgt:180in\nbyr:2011\n\nhgt:65in iyr:2011 pid:774065195 eyr:2020\necl:brn\nbyr:1993\nhcl:#c0946f\n\necl:blu\nhgt:65in\niyr:2014\nhcl:#6b5442 byr:1948\npid:672157135\n\nhcl:#2e5fe2 hgt:182cm byr:1989\ncid:205 iyr:2010 pid:116603730 eyr:2020 ecl:oth\n\necl:zzz iyr:2029\npid:152cm hcl:z hgt:67cm\neyr:2032\nbyr:1942\n\niyr:2012 hgt:180cm byr:1951 pid:777840558 cid:324 eyr:2029\necl:blu hcl:#341e13\n\nhcl:z\ncid:320 byr:1995 eyr:2022 pid:#0830f1 hgt:63 ecl:#9db56f iyr:2017\n\neyr:1996 iyr:2018 ecl:gmt\nhgt:182cm pid:523450129 hcl:#6660a6 cid:76 byr:1959\n\niyr:2013\npid:427856678\neyr:2027 cid:146\necl:hzl\nhgt:171cm\n\neyr:2027 hgt:158cm\npid:54529307 hcl:z\necl:hzl byr:2018 iyr:1980\n\niyr:2010 eyr:2026\necl:amb hcl:#a97842 pid:404930776 cid:277 byr:1994 hgt:184cm\n\neyr:2028 hgt:150cm pid:#534041 iyr:2022\nhcl:#733820\ncid:130 ecl:blu\nbyr:1963\n\necl:blu hgt:160cm hcl:#ceb3a1 byr:1951 eyr:2029\npid:655280714\niyr:2020\n\ncid:248 byr:1966 iyr:2017\neyr:2025 ecl:blu pid:930670644 hcl:#866857\n\necl:amb eyr:2028 cid:308 byr:1951 hgt:183cm pid:260537189\niyr:2011 hcl:#cfa07d\n\nbyr:1993\nhcl:#7d3b0c pid:787304941\niyr:2017 eyr:2024 hgt:178cm cid:314\necl:hzl\n\necl:#62c438 hcl:915943 iyr:1958 pid:1027793033 byr:2015 hgt:90\neyr:2035\n\nhcl:#b6652a eyr:2028 ecl:gry hgt:168cm byr:1921 pid:130528933 iyr:2020\n\neyr:2023 pid:675106386 ecl:brn byr:2021\niyr:2011\nhgt:153cm hcl:#888785\n\niyr:2010 pid:586165419 eyr:2023\necl:gry hgt:169cm hcl:#623a2f byr:1993\n\niyr:2015 pid:332903175 eyr:2021\nhgt:154cm\nhcl:#733820 ecl:gry byr:1951\n\nhcl:e58fa1 byr:1932 ecl:dne\ncid:272 eyr:2026 hgt:175cm iyr:1936 pid:408053740\n\niyr:2013 hgt:151cm\npid:151cm\nhcl:#888785\nbyr:2014\ncid:207 eyr:2023 ecl:#51625d\n\niyr:2016 cid:112\necl:amb\npid:727316519\neyr:2020 byr:1947 hcl:#ceb3a1 hgt:180cm\n\neyr:2036 hcl:z\necl:gmt pid:11080111\nbyr:1972 hgt:161in iyr:2030\n\niyr:2013 ecl:gry eyr:2030\nhcl:#602927 byr:1968 hgt:160cm\npid:888357737\n\neyr:2026\npid:259305913 iyr:2012 hgt:166cm ecl:amb byr:1951 hcl:#b6652a\n\nbyr:1939 hgt:158cm\ncid:232 eyr:2022 ecl:amb\nhcl:#fffffd pid:312632405\niyr:2016\n\necl:amb hgt:166cm pid:138763305 hcl:#a97842 byr:1972 eyr:2020\niyr:2020\n\nhgt:155cm hcl:#733820 byr:2010\npid:138766753\necl:grt eyr:2032 cid:50\niyr:2002\n\neyr:2029 ecl:gry iyr:2013 byr:1924\nhgt:181cm\nhcl:#fffffd pid:194780722\ncid:216\n\neyr:2020 pid:1817301064 hcl:#b6652a\necl:grn iyr:2014\nbyr:2000 hgt:171cm\n\nhcl:#03f240 iyr:2017 ecl:oth byr:1921 pid:464020404 eyr:2025 cid:348\nhgt:179cm\n\ncid:284 hcl:23f681\npid:190cm iyr:2023 eyr:2032\nhgt:61cm ecl:#6da9d9\nbyr:2029\n\nhgt:175cm byr:1959 ecl:amb\neyr:2030 cid:315 hcl:#ceb3a1\npid:795101457\niyr:2013\n\neyr:2027 hgt:170cm cid:100 ecl:grn\niyr:2011 hcl:#d6b2ee pid:760346767 byr:1950\n\neyr:2014 hcl:#a97842 ecl:blu\npid:5560121737 hgt:73in\niyr:2010\n\nbyr:1945 hcl:#7d3b0c eyr:2024 ecl:brn iyr:2013\npid:433715275\n\neyr:2022 ecl:gry byr:1982 hcl:#6b5442 iyr:2019 pid:650096889 hgt:65in\n\niyr:2010 ecl:oth hgt:154cm eyr:2024 cid:122 hcl:#341e13\nbyr:1929 pid:264796724\n\neyr:2026 cid:225\nbyr:1928 pid:479832664 hcl:#cfa07d iyr:2020\nhgt:192cm\necl:gry\n\npid:460595787 hgt:157cm iyr:2018\necl:oth\nhcl:#ceb3a1 eyr:2021\n\niyr:2018 pid:787208686 hgt:178cm cid:118\nhcl:#ceb3a1 ecl:oth\neyr:2030 byr:1949\n\nhcl:#efcc98 byr:1934 hgt:175cm ecl:oth\niyr:2019 cid:326 pid:337273951 eyr:2024\n\nhcl:#6b5442\npid:422717762 iyr:2010 ecl:gry\neyr:2024\nhgt:165cm byr:1950\n\npid:712203563 eyr:2023\nhgt:151cm\niyr:2010\nbyr:1950\nhcl:#ceb3a1 ecl:grn\n\nhcl:#888785 eyr:2020 iyr:2016\nhgt:191cm byr:1927 pid:848960326 ecl:hzl\n\nbyr:1999 iyr:2016\nhgt:62in hcl:#7d3b0c eyr:2028\n\ncid:195\niyr:1957 eyr:2023 byr:1993\nhgt:176cm pid:316550627 hcl:68f2e3 ecl:amb\n\nhcl:#623a2f pid:780723069\nbyr:1936 cid:271 eyr:2022\nhgt:188cm\niyr:2017 ecl:grn\n\neyr:2021 pid:209774111 hgt:192cm\nhcl:#6b5442 ecl:amb\niyr:2018\nbyr:1983\n\nhcl:#edeee4 byr:2001 cid:68 pid:717560044 ecl:hzl eyr:2030 iyr:2016 hgt:191cm\n\neyr:1968 cid:222 ecl:gry pid:90867093 hcl:#866857\niyr:2026 hgt:72 byr:1965\n\neyr:2028\nhgt:152cm pid:759034572 iyr:2017 hcl:#a97842\necl:brn\ncid:168 byr:1987\n\nhcl:453e20 eyr:2011\necl:gry hgt:75cm byr:1994 pid:41067436 iyr:2024\n\necl:blu hgt:61cm\nbyr:1988 eyr:2022 iyr:2020\npid:219813481 hcl:#ceb3a1\n\npid:635783992\nbyr:1950 eyr:2029 hgt:182cm hcl:#c0946f ecl:oth\n\niyr:2016 ecl:amb pid:393320246 hgt:156cm\nhcl:#fffffd byr:1988 eyr:2028\n\npid:689161094\nhcl:#623a2f iyr:2011\neyr:2020 byr:1953\nhgt:153cm ecl:brn\n\nhgt:185cm hcl:#ceb3a1\npid:751921928 iyr:2019 ecl:grn eyr:2028\nbyr:1943\n\nhcl:#b6652a eyr:2025 iyr:2016 ecl:hzl\nhgt:169cm byr:1931 pid:486548422\n\nhgt:160cm pid:49931386\necl:gry iyr:2010 eyr:2021 hcl:#341e13 cid:64 byr:1933\n\nbyr:1927\npid:415362434\necl:gmt eyr:2028\nhgt:153cm hcl:#18171d iyr:2017 cid:163\n\nbyr:1949 pid:427698686\neyr:2027 iyr:2018 ecl:hzl hgt:159cm\nhcl:#ceb3a1 cid:132\n\nhcl:#7d3b0c iyr:2013 byr:2023 eyr:2037\ncid:83 ecl:#05c60a hgt:160\npid:429836535\n\nhgt:174cm eyr:1937 pid:149685914 byr:2004 iyr:2017\nhcl:#623a2f cid:303\necl:blu\n\nhgt:60cm pid:47770642\nbyr:2020 eyr:2032 ecl:#cc7bc6 cid:144 iyr:2025 hcl:z\n\niyr:2010 ecl:amb\npid:#5f3343 hcl:#733820 eyr:2021 byr:1933\nhgt:169cm\n\nhcl:#efcc98\nhgt:172cm eyr:2020\necl:oth\nbyr:2001 pid:027554330\niyr:1983 cid:165\n\nbyr:2026 hgt:158cm iyr:2016 hcl:#733820\necl:hzl cid:117\neyr:2037\npid:37781880\n\nhcl:#602927 cid:248\nbyr:1999\nhgt:181cm eyr:2029 pid:554270506\niyr:2016\necl:blu\n\nbyr:1952 iyr:2014\necl:oth\nhcl:#cfa07d hgt:186cm pid:875655050\neyr:2024\n\neyr:2030 hgt:186cm hcl:#18171d pid:038705513 ecl:grn cid:100 byr:1927\niyr:2015\n\ncid:98 eyr:2022\nbyr:1957 ecl:grn\nhgt:182cm pid:607781478\nhcl:#ceb3a1\n\neyr:1977 iyr:2021\nhgt:178cm cid:186 byr:2026\npid:#b15551 ecl:utc\nhcl:z\n\npid:334408791\nhgt:158cm hcl:#6b5442 cid:83 byr:1983 iyr:2012 ecl:grn\neyr:2030\n\neyr:2028 iyr:2015 ecl:amb\npid:352112783\ncid:345 byr:1938 hgt:71in\nhcl:#6b5442\n\nbyr:2028 pid:380227894 eyr:2025\necl:blu hgt:189cm hcl:a51656\niyr:1956\n\nhgt:184cm iyr:2016 ecl:hzl pid:485327910 hcl:#fffffd byr:1970 eyr:2027\n\nbyr:1992 iyr:2018 eyr:2030 hcl:#888785 hgt:168cm pid:535221295 ecl:blu\n\nhgt:165cm hcl:#fffffd byr:1961 ecl:gry pid:639998127\neyr:2028\niyr:2011\n\nhgt:74in iyr:2015 cid:284 pid:035643775 byr:1978 hcl:#623a2f\necl:grn eyr:2023\n\nbyr:1954\necl:#16e7c4 hgt:164cm\neyr:2029 iyr:2015 pid:377679333 hcl:#a97842 cid:233\n\neyr:2026 pid:266604186 byr:1981 ecl:brn\niyr:2012\nhgt:156cm\nhcl:#c0946f\n\ncid:189 hcl:z ecl:#40f51a\nhgt:180cm iyr:2014 pid:0942329667 byr:1946 eyr:2025\n\neyr:2020 hgt:165cm byr:1961\niyr:2013 hcl:#888785 ecl:blu pid:156cm\n\ncid:126 hcl:#623a2f pid:153152767 hgt:163cm ecl:grn eyr:2030 iyr:2020 byr:1959\n\nbyr:1935\npid:990549858 hcl:#623a2f\necl:blu iyr:2012 cid:160 eyr:2028 hgt:172cm\n\nhcl:111b82\nbyr:1955 pid:765740335 hgt:150cm ecl:amb\niyr:2019 eyr:1937\n\nhgt:59cm byr:2023 eyr:2032 pid:652161761 cid:61 ecl:brn iyr:2011\nhcl:#623a2f\n\nbyr:1951 eyr:2023 iyr:2017\nhcl:#18171d\necl:brn cid:306 pid:446746225 hgt:187cm\n\nhgt:160cm ecl:blu pid:855958582 byr:1988 hcl:#6f97ba iyr:2016\neyr:2026\n\niyr:2010 byr:1948\ncid:336 ecl:hzl\neyr:2030\npid:475243853\nhgt:175cm\nhcl:#ceb3a1\n\nhgt:168cm eyr:2021 ecl:oth hcl:#229bb0\niyr:2016 byr:1949 pid:720804107\n\niyr:2011\neyr:2025\necl:gry cid:330 byr:1927 pid:699837182\nhcl:#b6652a hgt:161cm\n\nbyr:1988 eyr:2026 ecl:gry\nhgt:162cm pid:924306872\niyr:2013\nhcl:#888785\n\nbyr:1934 ecl:brn pid:0774345729 iyr:1964 hcl:z hgt:170in cid:262\n\neyr:2028 byr:1989\niyr:2014\necl:blu pid:388512489\nhcl:#7bc6b9\ncid:212\nhgt:187cm\n\nbyr:1960 pid:#e494ee eyr:2026 hgt:192cm hcl:a82f5a\niyr:1999 ecl:#89848d\n\nbyr:2006 pid:#3bac86\ncid:297\nhcl:55d36e\niyr:1985\necl:#538688\neyr:1923\n\necl:hzl iyr:1925 eyr:2030\npid:1231954396 hgt:154cm byr:2009\nhcl:#c0946f\n\nhgt:63in\npid:229535785 ecl:oth hcl:#9e34cd\niyr:2020\neyr:2021 byr:1943 cid:73\n\nhgt:63cm hcl:z byr:2029 eyr:1928 pid:4559542479\ncid:258 iyr:2024 ecl:#7058ad\n\necl:hzl hcl:z pid:146884476 iyr:2011 cid:158\nbyr:1991 eyr:2030 hgt:156cm\n\nbyr:2030 iyr:2017 pid:19198146\nhcl:#7d3b0c\necl:#af1431 eyr:2023\nhgt:74cm\n\nhcl:#6b5442 hgt:168cm eyr:2020\ncid:260 byr:1920\necl:hzl\n\nbyr:1971 cid:186 hgt:60 eyr:2022 pid:160cm\nhcl:z\niyr:2013\necl:blu\n\nhcl:#7d3b0c cid:218 eyr:2022 pid:015062066 ecl:hzl iyr:2010 hgt:170cm byr:2001\n\niyr:1984 byr:2027\neyr:2033\nhcl:94d9ab hgt:148 ecl:gmt\ncid:288\npid:160cm\n\nhcl:#74c9e7 eyr:2026 hgt:168cm byr:1994 ecl:brn pid:651587465\n\nhgt:160cm\necl:gry cid:182 byr:1929 pid:890454205 hcl:#efcc98 eyr:2029 iyr:2020\n\necl:brn hgt:156in\neyr:2022\ncid:289 iyr:2022 hcl:e34ec4 pid:#206e1c byr:1938\n\neyr:2030\npid:99239063 cid:166\nhgt:153cm hcl:0a3633 byr:1990 iyr:2024 ecl:grn\n\nbyr:2019 hgt:189cm hcl:#cfa07d iyr:1927 ecl:#bafabd pid:161cm eyr:2024\n\nhcl:#ceb3a1 iyr:2010\nhgt:163cm eyr:2020\npid:948123697 ecl:brn byr:1973\n\npid:691623749 iyr:2016 hcl:#18171d byr:1972 eyr:2030\nhgt:173cm ecl:hzl\n\nhcl:#ceb3a1 cid:271\niyr:2010 byr:1977 hgt:161cm\neyr:2022\npid:460185976 ecl:hzl\n\neyr:2028 ecl:hzl cid:98\npid:828517281 hgt:154cm\niyr:2016 hcl:#866857 byr:1924\n\nhgt:99\niyr:2030 byr:2003 eyr:2039 pid:184cm ecl:lzr cid:71\nhcl:z\n\neyr:2029 pid:864807599\niyr:2013 hcl:#866857 ecl:grn byr:1961 hgt:185cm\n\nhcl:#866857\nhgt:66in ecl:oth iyr:2018\neyr:2026 cid:170 byr:1999 pid:538451102\n\niyr:2024 byr:2015 cid:271 pid:69951601 hgt:190cm\necl:xry\neyr:2003\nhcl:#c0946f\n\nhgt:178cm hcl:#ceb3a1 byr:1942\npid:583281865 iyr:2015 eyr:2020\necl:grn\n\neyr:2020 hcl:#866857 ecl:oth hgt:153cm cid:212 byr:1972 iyr:2012 pid:198849319\n\necl:blu\ncid:222 hgt:174cm hcl:#866857\nbyr:1971 iyr:2016 eyr:2030\n\necl:blu pid:521480106\niyr:2020\neyr:2027 byr:1942\nhcl:#733820 hgt:153cm cid:106\n\ncid:57 pid:685649434\neyr:2026\nhcl:#efcc98 ecl:grn iyr:2013\nbyr:1968 hgt:157cm\n\ncid:63 pid:195592844 hcl:#efcc98\nbyr:1980 ecl:gry iyr:2016\neyr:2023\nhgt:178cm\n\nhcl:z\nbyr:2024 hgt:179cm\niyr:2017\neyr:1998 ecl:#d087a7\n\npid:673581655 eyr:2023\nbyr:1924 hcl:#18171d ecl:blu hgt:187cm iyr:2015\ncid:69\n\nbyr:1979 eyr:2020 pid:925293477 ecl:amb cid:145 hcl:#1fc76d hgt:188cm iyr:2013\n\npid:833495286\nhcl:#cfa07d ecl:brn\nbyr:1993 eyr:2020 cid:209\nhgt:165cm iyr:2018\n\nhgt:181cm\nhcl:#efcc98 pid:264709463\niyr:2019\neyr:2026\ncid:313 byr:1926 ecl:gry\n\npid:798909144 iyr:2015 ecl:brn hgt:183cm hcl:#623a2f byr:1979\neyr:2023\n\ncid:257\necl:grn pid:203787314 hcl:#fffffd iyr:2020 hgt:192cm byr:1964\n\npid:15955243\neyr:1962\nbyr:2012 hgt:155cm iyr:2025 hcl:z\n\ncid:126\nhgt:156cm\nbyr:1936 pid:495593265\necl:brn hcl:ee357b iyr:2030 eyr:2014\n\npid:182cm eyr:2022 ecl:#c8bb8a\niyr:2021 byr:1922 cid:270 hcl:#866857 hgt:190cm\n\neyr:2030\nbyr:1963 cid:224 ecl:gry iyr:2020 hgt:192cm\nhcl:#8117b1 pid:845227725\n\nbyr:2028 pid:168cm eyr:1989 ecl:blu hcl:311389 hgt:173cm cid:227\niyr:2015\n\nbyr:1949 hcl:#a97842 hgt:162cm\npid:100263539 eyr:2027\necl:grn iyr:2015\n\necl:#6f9669 eyr:2033 byr:2003 hcl:z iyr:2019 pid:223282429\nhgt:172\n\npid:#8bc2c0 hgt:74cm ecl:zzz hcl:5afd12 eyr:1922\nbyr:2019 iyr:1924 cid:50\n\nhcl:#66518f hgt:187cm byr:1989\neyr:2027 iyr:2018 ecl:blu pid:656263178\n\npid:257605814 iyr:2013 eyr:2026 ecl:grn hgt:170cm byr:2018 hcl:e9d195\n\necl:grt byr:2010 eyr:2033\npid:35619145\niyr:2025\nhgt:64cm hcl:z\ncid:221\n\neyr:1997 pid:221307345 hgt:120\niyr:2019 ecl:zzz\nbyr:2009\nhcl:#fffffd\n\nhgt:192cm byr:1932 cid:213 hcl:#ceb3a1\necl:oth iyr:2018\neyr:2023 pid:232126505\n\niyr:2020 cid:225\neyr:2025 pid:456238536 byr:1932 hcl:#fffffd ecl:oth\nhgt:170cm\n\neyr:2023 pid:113720753 hgt:173cm hcl:#efcc98\necl:blu\nbyr:1977\niyr:2010\n\nhcl:#866857 pid:240698984 byr:1973\necl:amb iyr:2014 hgt:159cm eyr:2020\n\neyr:2026\niyr:2019 pid:150506583 byr:1984 cid:249\necl:brn hgt:176cm\nhcl:#18171d\n\niyr:2012\nhgt:189cm byr:1970\npid:152682317 eyr:2025 cid:315 ecl:oth hcl:#6b5442\n\nhgt:167cm eyr:1923 hcl:4a53cb pid:392236104 iyr:2018 ecl:gry\nbyr:1922\n\nbyr:1966 hgt:191cm\niyr:2011 cid:167\necl:brn eyr:2024 hcl:#29000d\n\nbyr:1964 hgt:177\neyr:2037 pid:4494972428 hcl:#7d3b0c ecl:utc cid:205 iyr:2019\n\nhcl:#cfa07d iyr:2028 pid:165cm ecl:#e2a3e0\ncid:147\neyr:2025\nhgt:169in byr:2010\n\nhgt:162cm\nhcl:#866857\neyr:2024 byr:1962 iyr:2020\npid:246010906\necl:oth\n\npid:145361253 ecl:brn iyr:2019 eyr:2025\nhcl:#ceb3a1 hgt:164cm byr:1938\n\nhgt:157cm ecl:#f6feaa iyr:2015\nhcl:#623a2f\ncid:290 eyr:2034\npid:058787629\n\nhcl:#ceb3a1 iyr:2011\npid:468547313 cid:175 byr:1991 eyr:2021 hgt:158cm\necl:blu\n\necl:hzl eyr:2026 pid:448134141 hgt:186cm iyr:2016 byr:1929 hcl:#c0946f\n\nhgt:64cm eyr:2027\necl:#277bd0 hcl:df2be7\niyr:2023\npid:167286554\nbyr:2004\n\npid:739664020 eyr:2026 hgt:61in\niyr:2011 byr:1959 ecl:grn\nhcl:#602927\n\neyr:2039 hgt:183cm hcl:z pid:5208130216\necl:blu\ncid:161 iyr:1932 byr:2004\n\niyr:2015 pid:509173428 eyr:2030 ecl:#14471f hcl:z hgt:177in byr:1994\n\nbyr:1951\niyr:2012 hcl:#733820\npid:799059999 hgt:70in eyr:2026 ecl:hzl\n\neyr:2028 byr:1925\nhgt:181cm\necl:grn\niyr:2016\nhcl:#cfa07d pid:558448804\n\npid:675014385 iyr:2012 ecl:oth hgt:183cm\nhcl:#623a2f byr:1997\neyr:2026 cid:311\n\neyr:1972 hcl:c452d2\necl:gmt\nbyr:2010 iyr:2015\nhgt:66cm cid:266\npid:021900882\n\necl:gry hgt:65in cid:182 hcl:#c0946f\npid:558235233\neyr:2027 byr:1946 iyr:2017\n\nhcl:#b6652a pid:846441761 iyr:1971 hgt:59cm eyr:2027 byr:2010 ecl:amb cid:144\n\ncid:77 hgt:180in eyr:2024\nhcl:b6c2c6 pid:159cm iyr:2002\necl:#62e506 byr:1976\n\niyr:1969 eyr:2024 cid:143 pid:#f31765 ecl:brn\nhgt:68cm hcl:7f9598 byr:1949\n\nbyr:1964\nhcl:#341e13\necl:gry\nhgt:168cm eyr:2028\niyr:2012 pid:714678484\n\nhgt:185cm eyr:2028\nhcl:#b6652a byr:1945 iyr:2012 ecl:hzl\n\niyr:2015 hgt:191cm\necl:blu hcl:#888785 pid:206356787\neyr:2021 byr:1920\n\neyr:1937\nhcl:b3eb9c hgt:175cm\niyr:2012 ecl:brn pid:62490997 cid:267\nbyr:2024\n\nhcl:#866857\nbyr:1960\npid:021105433\nhgt:174cm eyr:2022 iyr:2017\necl:blu cid:123\n\nhcl:#ceb3a1 byr:1976 pid:306207321\niyr:2019\ncid:262 hgt:175cm\neyr:2025 ecl:oth\n\nbyr:1945\ncid:346 eyr:2030 hcl:#1f6f6f iyr:2013\nhgt:65in pid:857729755\necl:blu\n\nbyr:1934 ecl:oth hgt:174cm\neyr:2030\ncid:263 hcl:#47e20e pid:545880650\n\npid:190920088 byr:1995\nhcl:b4f162 iyr:2019 ecl:gry eyr:2020 hgt:176cm\n\nbyr:1984 hcl:#7d3b0c\npid:947573713 hgt:154cm\necl:blu\neyr:2023\niyr:2017\n\nhcl:#ceb3a1 pid:645117349 cid:213\neyr:2022 ecl:brn\niyr:2017 hgt:151cm byr:1997\n\nbyr:1929 hcl:#18171d hgt:184cm pid:378639521\necl:amb iyr:2018\neyr:2022\n\npid:567411452 hgt:158cm byr:1998 eyr:2030 iyr:2013 hcl:#fffffd\necl:grn\n\niyr:1962\npid:184cm\neyr:2034 cid:62 ecl:gry hcl:z hgt:156in\n\neyr:2022 byr:2015 pid:193cm ecl:#ca25ab\nhcl:eb0dfc cid:136\nhgt:150cm\niyr:1977\n\npid:087678152\nhcl:#ecdb8b\nhgt:162cm iyr:2015\neyr:2024\nbyr:1939\necl:grn\n\neyr:2024 hgt:150cm iyr:2023 ecl:#ca3855 hcl:#888785 byr:1943\npid:4402658120\n\npid:107396492 hcl:#341e13\nhgt:145 ecl:oth iyr:2013\neyr:2025 cid:128 byr:2023\n\neyr:2020 hgt:167cm byr:1997 hcl:#888785\necl:oth pid:609333522 iyr:2017\n\npid:172cm\neyr:1930 iyr:1966 ecl:#f98bd9 hgt:179in hcl:a1d424\n\necl:hzl byr:1924 iyr:2018 eyr:2020\npid:505733566\nhcl:#733820\nhgt:151cm\n\neyr:2011 pid:176cm hgt:163in iyr:1964\nhcl:z ecl:#9e90ad byr:2010\n\necl:brn iyr:2011 pid:932000043 byr:1995 eyr:2025 hgt:150cm\nhcl:#6b5442\n\npid:347820679\niyr:2010 ecl:#aa4902 hcl:56faf0 hgt:70cm byr:1923 eyr:2024\n\necl:blu\nhgt:160cm iyr:2015 pid:706725204 byr:1987 eyr:2030 hcl:#cfa07d\n\nhcl:#763a5b iyr:2011\nbyr:1965 pid:834192733\ncid:302 ecl:blu eyr:2028 hgt:170cm\n\nbyr:1967 hgt:193cm\necl:hzl\npid:598436934 cid:262\niyr:2014 hcl:#b6652a eyr:2021\n\npid:336728648\neyr:2030 hcl:#888785\nhgt:150cm ecl:hzl byr:1926\niyr:2015\n\npid:073366341 byr:1984 hcl:#cfa07d iyr:2019 hgt:178cm ecl:grn eyr:2026\n\niyr:1923 pid:19933565 ecl:#16b3c1 hgt:162\neyr:1945 hcl:e0e20c\nbyr:2028\n\nhgt:159in\npid:171cm eyr:2023 iyr:2022 ecl:#c073e6 hcl:22ed05 byr:2011\n\nbyr:2003 eyr:2022\ncid:336 ecl:grt\niyr:2020 hgt:156cm\nhcl:#c0946f pid:716113144\n\necl:hzl\niyr:2019 hgt:171cm hcl:#9855d4\nbyr:1974\neyr:2025 pid:260661320\n\nhgt:165cm byr:2016 pid:203313454\niyr:2011\nhcl:z ecl:blu eyr:2023\n\neyr:2016\nhgt:182cm iyr:2029 byr:2004\necl:gmt hcl:25d3a1\npid:4435010716\n\necl:blu\npid:159928755 hgt:177 hcl:74fd3f eyr:2023 cid:244 byr:1956\niyr:2016\n\nhcl:#c5c154 iyr:2011 ecl:gry byr:1971 hgt:75in cid:251\neyr:2025\n\neyr:2023\nhgt:155cm byr:1943 iyr:2020 ecl:amb hcl:#ceb3a1 pid:591194126\n\ncid:123\nbyr:1950 iyr:2022 hgt:154cm ecl:hzl pid:555951199 hcl:#efcc98 eyr:2022\n\ncid:145 iyr:2028\nhgt:163\nbyr:2007 ecl:#ca0e61 pid:#b57087 eyr:1985 hcl:#b6652a\n\necl:utc\niyr:1953 eyr:2034 hcl:#602927\ncid:150 pid:166cm hgt:72cm byr:2003\n\niyr:2012 pid:585191659\nbyr:1959 eyr:2027\nhgt:150cm ecl:blu hcl:#888785\n\necl:#483899 eyr:2032 pid:#4d59f7 iyr:2020 byr:2005 hcl:a8a13c hgt:140\n\necl:brn pid:#8d9fe0 cid:265 byr:2029 hgt:68cm iyr:1989 hcl:4df783 eyr:1990\n\ncid:110 hgt:165cm\necl:grn\niyr:2017 eyr:2025 byr:1923\n\nbyr:1986 iyr:2020 hgt:69in pid:815979778 hcl:#ceb3a1 eyr:2027 ecl:blu\n\npid:345227220\neyr:2030\nbyr:1954 ecl:hzl hcl:#733820 hgt:151cm iyr:2016\n\nhgt:152 byr:2016 ecl:grt hcl:z eyr:1994 pid:463925189\niyr:2013\n\nhcl:#341e13\nhgt:169cm byr:1990 iyr:2015\necl:blu\neyr:2034 pid:120750202\n\niyr:2020\npid:589274468 byr:1995 ecl:blu eyr:2025 hgt:168cm hcl:#888785\n\nhcl:#888785\nhgt:169cm iyr:2016\nbyr:1930\necl:grn pid:864871732 eyr:2022\n\neyr:2021 cid:73 hgt:186cm hcl:#8092f6 byr:1957 pid:151353277 ecl:blu iyr:2018\n\nhcl:5afb32 byr:2027 pid:179cm\ncid:222 hgt:59cm ecl:grt eyr:2040 iyr:1980\n\nhcl:#a97842 pid:403342198 eyr:2026\nbyr:1976 ecl:gry hgt:150cm\niyr:2015\n\nhgt:63in eyr:2023 hcl:#6b5442 pid:371994667 iyr:2020 byr:1991 ecl:gry\n\npid:247978507\nhgt:175cm iyr:2016 eyr:2022\nbyr:1945 hcl:#b6652a ecl:gry\n\nhgt:150cm cid:254 hcl:#18171d ecl:blu eyr:2030\nbyr:1922\npid:450204714 iyr:2015\n\niyr:2016 pid:470585547\nhgt:60in\neyr:2024 byr:1946\necl:oth hcl:#b6652a\n\niyr:2020 eyr:2026\nhcl:#cfa07d\npid:524717559 hgt:99\ncid:303 byr:1967 ecl:amb\n\ncid:178 byr:2021 hcl:7234f4 hgt:192in eyr:2038 iyr:2020 pid:466801711 ecl:amb\n\npid:597934488 iyr:2011 cid:336 hcl:#81434f\necl:grt hgt:185cm eyr:2034\nbyr:2014\n\neyr:2038\nbyr:2017 hgt:70cm cid:283\necl:brn pid:392669975 iyr:2013 hcl:#602927\n\npid:#c85b65 hgt:60cm iyr:2001 eyr:2035 hcl:e28fae\necl:#32a45c byr:1924\n\niyr:2011 byr:1945 hgt:164cm ecl:gry eyr:2029 hcl:#18171d\npid:402905843\n\npid:5602590426 byr:2013 eyr:2024\necl:zzz iyr:2014 hgt:173cm\nhcl:#733820\n\necl:hzl eyr:1964\npid:508473248\nbyr:1961 hgt:181cm iyr:2020\nhcl:#623a2f\n\nhcl:z hgt:121 pid:635654838 eyr:2020 iyr:1968\nbyr:1954\n\nbyr:1974 pid:759133744\niyr:2010 eyr:2027\ncid:266 ecl:hzl\nhgt:153cm\n\necl:oth byr:1960\neyr:2022\niyr:2014\nhgt:62in hcl:#623a2f pid:155340768\n\nhgt:187cm\nhcl:#866857 pid:725526503 cid:134 iyr:2017 ecl:grn\nbyr:1982 eyr:2020\n\nhgt:154cm byr:1953\necl:blu pid:212064297\ncid:69 eyr:2022\nhcl:#c0946f iyr:2015\n\necl:gry hgt:183cm iyr:2017 pid:995219023 eyr:2025\nbyr:1960 hcl:#7d3b0c\n\nbyr:1935 ecl:oth cid:235 pid:978368915\nhcl:#b6652a\niyr:2019 hgt:69in eyr:2028\n\niyr:2005\neyr:2028\nhgt:192in hcl:#9ced60 byr:2004\npid:102299023\ncid:348 ecl:hzl\n\nhcl:6cbe91 pid:191cm iyr:1962\nbyr:2007 hgt:192in eyr:1963\n\npid:020385831 hgt:173cm\necl:amb hcl:fdbb66 cid:287\neyr:2034\nbyr:2024 iyr:2018\n\neyr:2024\nbyr:1952 hgt:186cm cid:250\npid:852070008 ecl:blu\nhcl:#c0946f iyr:2010\n\necl:#914e86 pid:164cm hgt:170cm iyr:2011\nbyr:2014\neyr:2026 hcl:z\n\nbyr:1952 hgt:176in\nhcl:#e49400\npid:011105160\neyr:2026 cid:103 ecl:oth iyr:2011\n\necl:#362113 hgt:155in\npid:859337122 cid:133\neyr:2025 byr:1997 iyr:2012\n\necl:hzl eyr:2025 iyr:2013\npid:669359650 byr:1922 hcl:#efcc98 cid:149 hgt:169cm\n\niyr:2028 hgt:177in\ncid:75\neyr:2036 byr:2007 pid:48265132\necl:zzz hcl:z\n\nhgt:66in eyr:2030\nhcl:#623a2f iyr:2010 pid:458699137\nbyr:1980\necl:amb\n\nhgt:171cm ecl:amb iyr:2011 hcl:#888785 byr:1923 eyr:2020\npid:312162952\n\nbyr:1963\nhcl:#18171d pid:316505921 ecl:blu iyr:2017\nhgt:155cm eyr:2029\n\necl:gry\nbyr:1973 iyr:2011\npid:479606625 eyr:2028\nhcl:#888785 cid:108 hgt:160cm"),on="--- Day 4: Passport Processing ---\nYou arrive at the airport only to realize that you grabbed your North Pole Credentials instead of your passport. \nWhile these documents are extremely similar, North Pole Credentials aren't issued by a country and therefore aren't actually valid documentation for travel in most of the world.\n\nIt seems like you're not the only one having problems, though; a very long line has formed for the automatic passport scanners, and the delay could upset your travel itinerary.\n\nDue to some questionable network security, you realize you might be able to solve both of these problems at the same time.\n\nThe automatic passport scanners are slow because they're having trouble detecting which passports have all required fields. The expected fields are as follows:\n\nbyr (Birth Year)\niyr (Issue Year)\neyr (Expiration Year)\nhgt (Height)\nhcl (Hair Color)\necl (Eye Color)\npid (Passport ID)\ncid (Country ID)\nPassport data is validated in batch files (your puzzle input). Each passport is represented as a sequence of key:value pairs separated by spaces or newlines. Passports are separated by blank lines.\n\nHere is an example batch file containing four passports:\n\necl:gry pid:860033327 eyr:2020 hcl:#fffffd\nbyr:1937 iyr:2017 cid:147 hgt:183cm\n\niyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884\nhcl:#cfa07d byr:1929\n\nhcl:#ae17e1 iyr:2013\neyr:2024\necl:brn pid:760753108 byr:1931\nhgt:179cm\n\nhcl:#cfa07d eyr:2025 pid:166559648\niyr:2011 ecl:brn hgt:59in\nThe first passport is valid - all eight fields are present. The second passport is invalid - it is missing hgt (the Height field).\n\nThe third passport is interesting; the only missing field is cid, so it looks like data from North Pole Credentials, not a passport at all! \nSurely, nobody would mind if you made the system temporarily ignore missing cid fields. Treat this \"passport\" as valid.\n\nThe fourth passport is missing two fields, cid and byr. Missing cid is fine, but missing any other field is not, so this passport is invalid.\n\nAccording to the above rules, your improved system would report 2 valid passports.\n\nCount the number of valid passports - those that have all required fields. Treat cid as optional. In your batch file, how many passports are valid?\n\n--- Part Two ---\nThe line is moving more quickly now, but you overhear airport security talking about how passports with invalid data are getting through. Better add some data validation, quick!\n\nYou can continue to ignore the cid field, but each other field has strict rules about what values are valid for automatic validation:\n\nbyr (Birth Year) - four digits; at least 1920 and at most 2002.\niyr (Issue Year) - four digits; at least 2010 and at most 2020.\neyr (Expiration Year) - four digits; at least 2020 and at most 2030.\nhgt (Height) - a number followed by either cm or in:\nIf cm, the number must be at least 150 and at most 193.\nIf in, the number must be at least 59 and at most 76.\nhcl (Hair Color) - a # followed by exactly six characters 0-9 or a-f.\necl (Eye Color) - exactly one of: amb blu brn gry grn hzl oth.\npid (Passport ID) - a nine-digit number, including leading zeroes.\ncid (Country ID) - ignored, missing or not.\nYour job is to count the passports where all required fields are both present and valid according to the above rules. Here are some example values:\n\nbyr valid:   2002\nbyr invalid: 2003\n\nhgt valid:   60in\nhgt valid:   190cm\nhgt invalid: 190in\nhgt invalid: 190\n\nhcl valid:   #123abc\nhcl invalid: #123abz\nhcl invalid: 123abc\n\necl valid:   brn\necl invalid: wat\n\npid valid:   000000001\npid invalid: 0123456789\nHere are some invalid passports:\n\neyr:1972 cid:100\nhcl:#18171d ecl:amb hgt:170 pid:186cm iyr:2018 byr:1926\n\niyr:2019\nhcl:#602927 eyr:1967 hgt:170cm\necl:grn pid:012533040 byr:1946\n\nhcl:dab227 iyr:2012\necl:brn hgt:182cm pid:021572410 eyr:2020 byr:1992 cid:277\n\nhgt:59cm ecl:zzz\neyr:2038 hcl:74454a iyr:2023\npid:3556412378 byr:2007\nHere are some valid passports:\n\npid:087499704 hgt:74in ecl:grn iyr:2012 eyr:2030 byr:1980\nhcl:#623a2f\n\neyr:2029 ecl:blu cid:129 byr:1989\niyr:2014 pid:896056539 hcl:#a97842 hgt:165cm\n\nhcl:#888785\nhgt:164cm byr:2001 iyr:2015 cid:88\npid:545766238 ecl:hzl\neyr:2022\n\niyr:2010 hgt:158cm hcl:#b6652a ecl:blu byr:1944 eyr:2021 pid:093154719\nCount the number of valid passports - those that have all required fields and valid values. Continue to treat cid as optional. In your batch file, how many passports are valid?\n\n",ln="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n    \n    // Part One\n    inputData = inputData.split('\\n\\n')\n    var correctPassports = []\n    var allPassports = []\n    \n    inputData.forEach(passport => {\n        var splittedArray = passport.split('\\n').join(' ').split(' ')\n        \n        if (splittedArray.length == 8 || (splittedArray.length >= 7 && !passport.includes('cid'))) {\n            correctPassports.push(splittedArray)\n        }\n        allPassports.push(splittedArray)\n    });\n    this.SetResult(correctPassports.length)\n\n    // Part Two\n\n    this.SetResult(this.Validate(correctPassports))\n},\nValidate(inputData) {\n    var validatedPassports = 0\n    \n    inputData.forEach(element => {\n        var validationNumber = 0\n\n        element.forEach(passportData => {\n            passportData = passportData.split(':')\n            \n            switch(passportData[0]) {\n                case 'byr':\n                    if (passportData[1].length == 4) {\n                        if (passportData[1] >= 1920 && passportData[1] <= 2002)\n                            validationNumber++\n                    }\n                    break;\n                case 'iyr':\n                    if (passportData[1].length == 4) {\n                        if (passportData[1] >= 2010 && passportData[1] <= 2020)\n                            validationNumber++\n                    }\n                    break;\n                case 'eyr':\n                    if (passportData[1].length == 4) {\n                        if (passportData[1] >= 2020 && passportData[1] <= 2030)\n                            validationNumber++\n                    }\n                    break;\n                case 'hgt':\n                    var sliced = passportData[1].slice(passportData[1].length - 2)\n\n                    if (sliced == 'cm') {\n                        sliced = passportData[1].slice(0, passportData[1].length - 2)\n                        if (sliced >= 150 && sliced <= 193)\n                            validationNumber++\n                    }\n                    else if (sliced == 'in') {\n                        sliced = passportData[1].slice(0, passportData[1].length - 2)\n                        if (sliced >= 59 && sliced <= 76)\n                            validationNumber++\n                    }\n                    break;\n                case 'hcl':\n                    if (passportData[1].split('')[0] == '#') {\n                        passportData[1] = passportData[1].substring(1)\n\n                        // https://stackoverflow.com/questions/23476532/check-if-string-contains-only-letters-in-javascript/23476587\n                        if (passportData[1].length == 6 && /^[0-9a-f]+$/.test(passportData[1])) {\n                            validationNumber++\n                        }\n                    } \n                    break;\n                case 'ecl':\n                    if (passportData[1].length == 3) {\n                        var conditions = ['amb', 'blu', 'brn', 'gry', 'grn', 'hzl', 'oth']\n                        if (conditions.includes(passportData[1])) {\n                            validationNumber++\n                        }\n                    }\n                    break;\n                case 'pid':\n                    if (passportData[1].length == 9) {\n                        if (!isNaN(passportData[1])) {\n                            validationNumber++\n                        }\n                    }\n                    break;\n                case 'cid':\n                    validationNumber++\n                    break;\n            }\n            \n        if (element.length >= 7 && validationNumber == element.length) {\n            validatedPassports++\n        }\n        });\n    });\n    return validatedPassports\n}",cn={components:{"show-task":E},data:function(){return{CurrentInputData:sn,CurrentTaskData:on,CurrentSolutionData:ln,InputData:sn,TaskResult:[]}},mounted:function(){this.Solve(sn)},methods:{Solve:function(n){n=n.split("\n\n");var a=[],L=[];n.forEach((function(n){var t=n.split("\n").join(" ").split(" ");(8==t.length||t.length>=7&&!n.includes("cid"))&&a.push(t),L.push(t)})),this.SetResult(a.length),this.SetResult(this.Validate(a))},Validate:function(n){var a=0;return n.forEach((function(n){var L=0;n.forEach((function(t){switch(t=t.split(":"),t[0]){case"byr":4==t[1].length&&t[1]>=1920&&t[1]<=2002&&L++;break;case"iyr":4==t[1].length&&t[1]>=2010&&t[1]<=2020&&L++;break;case"eyr":4==t[1].length&&t[1]>=2020&&t[1]<=2030&&L++;break;case"hgt":var e=t[1].slice(t[1].length-2);"cm"==e?(e=t[1].slice(0,t[1].length-2),e>=150&&e<=193&&L++):"in"==e&&(e=t[1].slice(0,t[1].length-2),e>=59&&e<=76&&L++);break;case"hcl":"#"==t[1].split("")[0]&&(t[1]=t[1].substring(1),6==t[1].length&&/^[0-9a-f]+$/.test(t[1])&&L++);break;case"ecl":if(3==t[1].length){var r=["amb","blu","brn","gry","grn","hzl","oth"];r.includes(t[1])&&L++}break;case"pid":9==t[1].length&&(isNaN(t[1])||L++);break;case"cid":L++;break}n.length>=7&&L==n.length&&a++}))})),a},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},gn=cn,bn=Object(c["a"])(gn,en,rn,!1,null,null,null),dn=bn.exports,hn=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},pn=[],un=(L("cb29"),"FFFBFFFRRL\nFFFBBBFLLL\nBFFFBFBRLR\nBFBFFFBRLL\nFFFBFBBRLR\nFBBBBFBLRR\nBFBBBFFLRR\nFBFFBBFLRL\nBFBBBBFRRL\nFBBFBFFRRL\nBBFFFBBLRR\nBFFFFFBRLR\nFBFFBFBLLR\nFBBFFFFLRR\nFFFFBBFRLR\nBBBFBFBLRL\nFFFBFFBRLL\nBBBFBBBRLL\nFBFFFBBRLR\nBFBBBBBLRL\nBFBFBBFRRR\nBFFFBBBLRL\nFBBFFBBRLR\nFBFBFFFRLR\nFBBFFBFLRR\nBFFFFFFLLR\nFBBFBBFRLR\nBFBFBFFLLL\nFFFBBBBRLL\nFBFFFFBLLR\nFFFBBBBLRR\nFFFFBFBRRL\nBBFBBBBLRL\nBBBBFFBLRR\nBFFBBFBRLR\nBBBFFFFRLR\nBBBBFFFRLR\nFBBFFBBRRL\nFFFFBFBRLL\nFBFFFBFRLL\nFBBBFBFLLR\nFFFFBBFRLL\nBBFFFBFLRL\nFFBFBFBRLR\nFBFFBBBLRR\nFFFBFFBLRL\nFFBFBBFLLR\nFFBFFFBLLR\nFBFBBBBRLL\nFBBBBFBRLR\nFBFFBBFRLL\nFFBFFBFLLR\nBBBFFBBLRL\nFFFBFFFLLR\nBBFBBBFRLR\nBBFFFFBRRL\nBFBFFFBLRL\nBBFFBFBRRL\nBBFBBFBRRR\nFFBBBFBRRL\nFFFBFBBRRL\nBBFBBBFLRL\nFBBFBBBRRR\nFFBFFBFRLL\nBBBFBFFLRL\nFBFFFFFLLR\nFFFBBFBLRL\nBBFFBFBRLL\nBBFBFFFRRL\nFBFBBFFRLL\nFBFBBFFLLR\nBFBFFBFRLR\nFBFBFFBLLL\nBFFFBBBRLR\nBBBFBFBRRL\nBFFBFFBLRL\nFBFFBFBLLL\nFBBBFBFRLL\nBFBFBFFLLR\nBFFFFBFRLL\nBFFBBFBLLR\nFFBBBBFRRL\nBFBBFBBRRR\nFBFBFFFRRL\nFFBFFFBRLR\nBBBFBBFLRL\nBFFBFFBLRR\nFFBFBFBLRL\nFFBFBFFLLR\nBFBFBBBRRL\nFFBFFFFLRR\nBFFBBBBRLL\nFFFBFFBRRR\nBBBBFFBLRL\nFFBFBFFLRL\nBFFBFFFLRL\nBBBFBFFRLR\nBBBFBFFRLL\nBBFBBBBRLL\nFFFBBBFLLR\nBFFFBBBRRR\nBBFFFFFLLL\nBBFBFBBLRR\nBFBBFFBRRL\nBFBBFFFRRR\nBFBBBBFRLR\nFBFFFFBRLR\nFFBBFBFLRR\nBFFBFFBRLL\nFBFFFBBRRL\nBBFFBBFRRR\nFBFBFBFLRL\nFBFBBFFRRL\nBFFBFBFRLL\nBBBFFBFLLR\nFFBFBBBRRR\nFBFFBBFLLL\nFFBFFBBLRR\nBBBFBBFRLL\nFFBBFFFRRL\nFFBFFBFLLL\nFFFBBBBLRL\nFFFBFBFRRR\nBBFFFFFLRR\nFBFBFBBLRR\nBBFFFFBLRR\nBBFFFBFLLR\nFBFBFBFLLR\nFFFFBBBLLL\nFBBBFFFLRL\nBFBBFFBLLR\nFFBBFFFLRR\nFBFBBFBLLR\nFFFBBBFRRR\nFBBFBFBRRR\nFBBBBFFLRL\nFFBFFBBRRL\nBBFFFFFRRR\nBFBBFFBLLL\nFFBBFBFRRR\nBBFFBBFRLL\nBBBBFFBRRR\nBBFBFBBRLR\nBFBFFFFLRR\nFFFBBBFRLR\nBFBBBFBLRR\nFBFBBBFLLR\nFFBBFFFLRL\nFBFBFFFLLL\nBBBFFBBRRL\nBBBBFFFLRL\nBFBFFBBRLR\nFBFBFBBLLL\nBFFBBBBLLR\nBBBFBBBRLR\nBBFFFBBLLL\nFBBBFFFLLR\nBBFBBFFRLL\nBFBBFFFLLL\nFFFFBBBRLL\nBFFBBBFRLL\nBFBBBBFLRR\nBFBBFBBRLL\nBFFBBBFRRL\nBFBFBBFRRL\nFBBFFBFRRL\nFFBFFBBLRL\nFBBFFBBLRR\nFBFBFBBLRL\nFBFBBFBLRL\nFBBBFFBRRL\nBFFFFFBRRR\nBBBFBBBLRL\nFBBFFBFLLR\nBFFBBBBRRR\nFFFBFBBRRR\nFFFBBFBLLR\nFBBFFFFLRL\nBBBFBFFLRR\nBBBBFFBRLL\nBFBBFBFLRR\nFBFBFBBLLR\nBFBFFBFRLL\nBBBFFFBLLL\nFBFFFBBLRL\nBFBFFBBRRR\nFBBFBFBRRL\nFFFBFBFLRR\nBBBFFBFLRL\nBFBBFBBLRL\nFBFFBBFRLR\nBFFFFBFLRL\nBFBBBFBLLR\nBFBFBFFLRL\nBFBBBBBLLL\nFFFBBFBRLR\nBBBBFBFLLL\nBBFFFFFRLL\nBBFBFBFRRL\nFFFBBBBRRL\nFFFBFBFRRL\nBBBBFFBRRL\nBFFBFFFLLL\nBFBBBFBLRL\nFFFBBFBRRL\nFBFBBFFLRR\nFFFBFFFRLL\nBBFFBBBRRL\nFBFFFFFLRR\nBBBBFFFRRL\nFFFBFFBLLR\nBBFBBBFRRL\nFFFBFBFLLL\nFBBFFBFRLL\nBFFFFBBRRL\nBFBFBFBLRR\nFBFBFBFLRR\nBBFBBFBLLR\nBBBFFBBLRR\nFBBFFBFRLR\nBBBFFFBLRL\nFFBFFBFRLR\nFFFBBFFLLR\nFFBFFFBRLL\nBFBFFFBRRL\nFBBBFBFLRR\nBBFFFBBLRL\nBFFBBFBLRR\nBFFFBBFLLR\nBFBFBBBLLL\nBFBFBBBRRR\nFFBFBFFRLL\nFFBBBBBRRL\nFFBFFFFRRR\nFFBBBBFRLR\nFBFFFFBRRR\nBFFBFFFLRR\nBBFBFFBLRL\nFBBBBBFRRR\nBBFFBBFLLL\nFFFBBBFLRL\nFFBBFBBLLR\nFFBFFFBRRL\nFBBBFBBLRL\nBFFBFBFLRL\nFBBFFFFRLR\nFFFBBFBRRR\nBFFBFBBLRL\nBFBBFBBLLR\nFBBFBFFLLR\nFFFFBFBRLR\nBFFFFFBRLL\nFBBBBBBLRL\nBFFBBBFRLR\nBBFBFBFRRR\nBBFBFFFRLR\nBBFBFFBLRR\nFFFBFFFRLR\nFBFBBBBRRL\nBBBFFFBRLR\nFFFBFFBLRR\nFBFFFBFRRR\nFFFFBBBRLR\nBBBFFFBRLL\nFFBBBFFLRR\nBFBBFFBRRR\nFBFBBBFLRL\nBFBFFBFRRL\nBBFBFBFRLR\nBFBBBBBRLR\nFFFFBBFLRR\nFBFBBFBLRR\nFFBFBFBLLL\nFFFBBBBRRR\nBBFFBBBRLR\nBFFFBFBLLR\nBFFFBFFLLR\nFFFFBBFLRL\nFBBBFBBRLL\nBFBBFBBLRR\nBBFBBFFRLR\nBFBBFFFLLR\nBBBFFFBLRR\nBFFBBFFLRR\nBBBFFBFRRL\nBBFFBFFLLL\nBFBFFFFRRR\nFBFBBFFLRL\nFBBBBBFLRL\nFFBBFBFLRL\nBFBBFBFLRL\nFBBFFBBRLL\nBBBFFFFLRL\nBFFFBBBLLL\nFFBBBFBRLR\nFFBFBBFRRL\nFBFFBBBRLL\nBBFBBFBRLL\nBFFFFFFLRR\nBFFFFBBRRR\nFFFFBBFLLR\nBFFFBBFLLL\nBBFFFFBRRR\nBFFBBBBLLL\nBFFBFFBLLR\nFFFFBBFRRL\nFFBFBFFRRR\nBFBFFFFLLL\nBBBFFFBRRR\nFFBBBFBRRR\nFBBBFFBRLR\nBFFBBBFLLL\nFBFBBFFRLR\nFBFFBBFRRR\nFBFBFBFRLL\nFBBBFFFLLL\nBFFBFFBRRL\nFBFFBBFLRR\nBFBBBBBLRR\nFBBBBBFRLR\nFFFFBBBLRL\nBBBFBFBLLL\nBBFFBBBLRL\nBFFBBFFRLL\nBBBFFFFLLL\nBBBBFFFLLR\nBBFBBFFLRR\nBFBFBFBLRL\nBBFFFBBRRR\nBBBFFFFLLR\nFBBBFFBRLL\nBFBBFFFRRL\nFFBBBFBLRR\nBFFBBBFLLR\nFFBFBBBRLL\nFBBBBBBLRR\nBFFBBBBRRL\nBFBBBFBLLL\nFBBFBFBLRR\nBFFFBFBRRR\nFBBFFFBRRL\nFFFBFBBLLR\nBBBFFFFRRL\nBFBBFFBRLR\nFBBBFBBLRR\nFBBFFFBLLR\nFBBFBBFRLL\nBBFBBBFLLR\nBBFFFBFRRL\nFBBBBFFRLR\nFFBFBFBRRL\nFFFBFFFRRR\nBFFBFBFLLR\nBFBFFFFRLL\nBFFFFFBLLL\nBFBBFFFLRR\nFFBFFFBRRR\nBBFFBBBRLL\nFBFFFFFRLL\nFFFBFFBRLR\nFBFFBFFRLL\nFFFBFFFLRL\nBBFBFFBLLL\nBBFFFFFLLR\nFBBBFFFRLR\nBFBFFBFLRR\nFFFBBFBLRR\nFBFFFBFLLR\nBFFFBBFLRL\nBFBBBBFRLL\nFFBBFFFRLL\nBBFBFBFLLL\nFBFFBFFRRL\nFBFBFBBRRL\nFBFFFFFLLL\nBBBFFFFRRR\nBFBBBFFLLL\nFBBFFFBLLL\nFFBBBFFRLL\nBFBBFBFRRR\nFFBBBBFLRL\nBFBBFFBRLL\nFFBBBFFRRL\nFBFBBBBLRL\nFFBFBFBLRR\nFBFFBFBLRR\nFFBFFFBLRL\nBBFFBFBLLL\nFBFBBBFRLL\nFFBFFBFLRL\nFBFBFBBRLR\nBFFBBFBRRL\nBFFFFFBLRL\nFFBFBBBLRR\nFBBBFFBLLL\nBFBFBFFRRR\nBBBFBFBLLR\nFBFBBFFRRR\nBFFFFFBRRL\nFFBFFBBLLL\nFBFFBBFRRL\nFBBBBBBRLL\nFFBBFBBRLL\nBBFBFBBLLR\nBBBFBFBLRR\nBBFFBBBLLL\nFBFFFFBLLL\nBFBBFBFLLR\nFBFFBFBRLL\nBFFBFFFRRR\nFFBBBFFRLR\nFBFFBBFLLR\nBBBFBFBRLL\nFBBFFBFLLL\nBFFBBBFLRL\nBBBBFFFRRR\nBBBFBBFRRR\nFFBFBFBLLR\nBFFBBFFRRL\nBBFFFFFRLR\nBBFBBBBRRR\nBBFFBFBLRL\nFBFFFFBLRR\nFFBFBBFLRL\nBFBFFBBLLL\nBBBFFBFLLL\nBBFBFFFLRR\nBFBBBBBLLR\nFFBFFFBLLL\nFBFFFBBLLR\nBFBFFBBLRR\nFFBBBFFLRL\nFBBFBFFLRR\nFBBFBFFRLL\nFBBFBFBRLR\nFBBFFBBLLL\nBBFFBFFLRL\nFBFBBBFRRR\nFFBFFBBRRR\nFBBBBBFRLL\nBBFFBFBLRR\nBBBFFBBRRR\nFFBBBBBRRR\nBBFFBBBLLR\nFBBFBFBLLL\nBBBFBFFLLL\nBBFFBBBLRR\nBFBFBFFRLR\nBBBFBBBLLL\nFBBFBFBLLR\nFBBBBFFLLR\nBFFFBBFRLR\nFFFFBFBRRR\nBFBFBFBLLR\nFFBFFBFRRL\nBFBBFFBLRL\nBFBBBFFLLR\nBBFFBFFLRR\nFBBBBFBRRR\nFBFFFBBLRR\nBBFBBBBLLL\nFBFBBBBRLR\nFFFBBFFLRR\nFFBFFBBLLR\nFBBBBBBRRR\nFFFFBBFLLL\nBFFBFFBRRR\nFFBBFFBRLR\nBBFFFFFLRL\nBBBFBBBLRR\nBFBFBFFLRR\nBFFFBBFRLL\nBFBBFBFLLL\nBFBFFBFLLR\nFFFFBBBLRR\nBBFBFFBRLL\nFFBBFBFRLR\nBBBFBBBRRL\nBFBFBFBRRR\nBFFFFFFRLR\nFBBBBFFLRR\nFBFBFFBLRL\nFFBBBFFLLR\nFBBFFFFRLL\nFBFBFBFRRL\nBFFBFFFRLR\nBFFFBFFRLL\nBBFBFBBRLL\nFFBBFBBLRR\nFBFBBFFLLL\nFBFBFFFLLR\nBFFBBFFLLR\nFFBBFFBRLL\nFBBBFFBLRL\nBBFBBBBLRR\nFFBFBBFRRR\nFFBFBBBLLR\nFFBBFBFRRL\nBBFFFBBRLR\nFFBBFFBLLL\nBFBFBBBLRR\nFFBFBFBRLL\nBFBBBFFRRL\nBFBFBFBRLR\nFFBFFBBRLL\nFFBBBBFRLL\nFBBBFBFRRL\nBBFBFBFRLL\nBFFBFFFRRL\nBFFBBBFRRR\nBBFBFFFLRL\nFBBBFBBLLR\nBFBFBBBRLR\nBBBFBFBRRR\nBFFBFBFRRL\nFFBBFFFLLR\nFFBFFFFRLR\nFBFBFFBRLR\nBFBFFFBRLR\nFFBFFBFLRR\nBBFBFBBLRL\nBBFBFFFLLR\nBFBFFBBLRL\nFFBBFFBLRL\nBFFBBBBLRR\nBBFBBFFRRL\nFBBFBFFLLL\nBFBFBFFRRL\nFFFBFFBLLL\nFBBFFFBRLR\nBFBBFBBRLR\nBFFBBFFLRL\nBFFFFFFLLL\nFBFBBBFRLR\nBFBFBFFRLL\nBBFFBFFRRR\nFBBBFBFLRL\nFFFFBFBLLR\nFBFBFBBRLL\nFBBFFBFRRR\nBBFBFFBLLR\nFBFBBFBRRL\nBFBBBFFLRL\nBBBBFBFRLL\nBFFFFFBLRR\nBBBBFFFLLL\nBFFBFBBLLR\nFFFBBFBRLL\nFBBBFBFLLL\nBFFFBFFRLR\nFBFFBFFRLR\nBBFFFFBLRL\nBFFBBFBRLL\nFFFBBFFRRR\nFFBBFBFLLL\nBBBFFBFLRR\nBFBBBFFRLL\nBFBFFFFRRL\nFFBBFBFLLR\nBBFFBBFLRR\nFFBBFBBRRR\nFBBBBBBLLR\nFFFBBBBLLR\nBBFFFFBRLR\nBFBFFBFLRL\nFBFFFBBRLL\nBBBFBBFLLR\nBFFBBFBLLL\nBFBBFBFRLL\nBBFBFBFLLR\nFFBBBFFLLL\nFBBFBBBRLR\nFBFFBFFLLL\nBFBBBBBRRR\nFFBFBBBRRL\nBFFBFBBLLL\nBBFFBFFLLR\nFBFBFFBRRR\nBBFBFFBRRL\nBBBBFBFLLR\nBFFFFFBLLR\nFFFBFBBLRL\nFBBFBBFLRL\nBBBFFFBRRL\nBFBBBFBRLL\nFBFFFBFLRL\nBBBFFBFRLL\nBFBFFFFRLR\nBFFFFFFLRL\nBBFFFBBLLR\nBBFBBFBLRR\nBFBFBBBLRL\nFFFFBBBRRL\nFBBFBFBLRL\nFBFBBBBLRR\nFFBBBBFRRR\nBBFFBFBRRR\nBBFFFBFRRR\nBFBBBFBRRR\nBBFFBBFLLR\nFBFFBBBLRL\nBFBBFBFRRL\nFBFBFBFRLR\nBFBFFFBLLR\nFBFFBFBRLR\nBFBFFBBRLL\nBFBFBFBRLL\nFBBBFBFRRR\nFBBBFBBRRL\nFBFFFBFRLR\nFBFBBBFRRL\nBFBFFFBLRR\nBBBBFBFLRL\nBBBFBFFRRL\nBFFFFFFRRL\nBFBBBFBRRL\nFBBBBFBLLL\nBBFBBBFLLL\nBFFFBBBRLL\nFFBFBBFRLL\nBBFBBFFLLL\nBFFBFBFLLL\nFFBBBBBLLL\nFBBFFFFLLL\nBBBFFFFLRR\nBFFFFBFLRR\nBFFBFBBLRR\nBFFBFBBRLR\nFBBBFFBLLR\nBFFBFBFRLR\nBBFBBBBRLR\nBBFBBFBRLR\nFFBFBBBRLR\nBFFFBBFRRL\nBBBFFBFRRR\nBFBBFFFRLL\nFFFBBFFRRL\nFFFFBFBLLL\nFFFFBFBLRL\nBBBFFBBRLL\nFFFBFBFRLR\nBFFFBBFLRR\nBFFFFBFLLL\nFFBBFFBRRL\nFBFFFBBRRR\nFFBFBFFRRL\nBFBBFFBLRR\nBBFFBBFRRL\nFFBBBBBLRR\nBFBBFFFRLR\nBFFFFBFLLR\nFBFFBFFLLR\nBFFFFBBRLL\nBBFFBFBRLR\nFBFBFFFLRL\nFBFBFFFRLL\nFBFFFFBRRL\nBFFFBFBLRR\nBFBFFBFRRR\nFFBBFFFLLL\nBFBFBBFLLR\nFFFBFBBLRR\nFBBBBBBLLL\nBBBFBBBRRR\nFBFFBFBRRR\nFBBFBBBLLR\nFBBFFBFLRL\nBBFBBFBLLL\nBBFBBBBRRL\nFBFBBBBLLL\nFBBBBFFRRR\nFFBBFFBLRR\nFBFFBBBRRR\nFFBBFBBRLR\nFFFBFFBRRL\nBBBBFFBLLR\nBBFBBFFLLR\nBBFFBFFRLL\nFBFFBBBRLR\nFFBBBBFLRR\nFBBFFBBLLR\nFBBBBFBLLR\nFBFBFFBLRR\nBFFFBFFRRL\nFBBBBFFRRL\nFFBBFFBLLR\nBBBFFBFRLR\nBFBBBBFLLL\nBBFBBBFRRR\nFFFBFFFLRR\nBBFFBBBRRR\nFBBFBBFRRR\nBFFBBFFRRR\nFFBBFFFRRR\nBFFBFBBRLL\nFBBBFBBLLL\nFBFBFFBRLL\nFBBFBBBLLL\nBFBFFFBLLL\nFFFBFBFLLR\nBBFFBFFRRL\nBFBBBBBRRL\nFBFFFFFLRL\nBFFFBFFLLL\nFBBFFFBRRR\nFBBFBBFLRR\nBFFFBBBRRL\nBFBFFFFLRL\nFBFFBFBLRL\nBBBFFFBLLR\nFBBFFBBLRL\nFFFBFBFLRL\nBBFFBFFRLR\nFBFFFFBRLL\nBBFBBFBLRL\nBFFFBFFLRL\nFBBFFFFLLR\nBFFBBFFRLR\nFFBFFFFLRL\nFBFFFFBLRL\nFBBBBBBRLR\nBBFFFBBRLL\nBFFFBBBLLR\nBFFBBBBRLR\nFBBBBFFLLL\nFFBFBFFRLR\nBFFFFBBLLL\nFBFFFBFRRL\nBFBFBBFRLL\nFFBBBFBRLL\nFBBFBBBLRR\nFBBFFFBLRR\nBFFFFFFRLL\nFFBBBBBLLR\nBBBBFBFLRR\nBFBFBBBRLL\nBFBBBBFLLR\nFFFBFFFLLL\nBFFBFBFRRR\nBBBBFFFLRR\nFBBFFFFRRR\nBFFFBBFRRR\nFBBFBFFRRR\nBFBBFBBLLL\nFFBBBBBRLR\nBBBFFBBLLR\nBBBFBFFRRR\nBBFFFFBLLL\nBFFBFFFLLR\nFFBFBBFLRR\nFFBBFFFRLR\nFBFBBFBLLL\nFBBBFBBRRR\nFBFFBFBRRL\nBFFFBFBLLL\nFFFFBBBLLR\nBFFBBFBLRL\nBFFBBBBLRL\nFBFFFFFRLR\nFBFFBFFLRR\nBFFFFBBLRR\nFBBBFBFRLR\nBBBFBBFLLL\nFFBFFBBRLR\nBBFBFBFLRR\nFBFBBFBRLL\nBFFBFBFLRR\nFBBBBBFRRL\nFBBBBBBRRL\nBBFBFFFLLL\nFFBBBFFRRR\nBFBBBFBRLR\nBFBFFFFLLR\nBBBFFFFRLL\nFBBFFFBRLL\nBFFFFFFRRR\nFBFFFFFRRR\nFBFFBBBLLL\nBFBFBBFLRR\nBBFBBBBLLR\nFBFBBBFLRR\nFFFBBFFRLL\nBFBFBBBLLR\nFFBBFBBRRL\nFBFBBBBLLR\nBBFBFBBLLL\nFBBFBBBRRL\nFBBBBFFRLL\nFBFBFBBRRR\nBFBFBBFRLR\nBFBBFBFRLR\nFBFFBBBLLR\nBFBFBFBRRL\nBFFBFFFRLL\nBFFFFBFRLR\nFBBBFBBRLR\nFFBFFFFRLL\nFBBFBBFLLR\nBFBFFBBRRL\nFFBFBBBLRL\nBBBFBFFLLR\nFBFBFFFRRR\nFFFBBBFRLL\nBBBFBBBLLR\nFBBBFFFRLL\nFFBFBFFLLL\nFFBBBBBLRL\nBFBBBFFRLR\nFFBBBBFLLL\nFBFFFBFLLL\nFFFBBBFLRR\nBBFBBBFLRR\nFBBFBBFRRL\nFBBBBBFLRR\nBBFFBBFLRL\nFFBFFBFRRR\nFBBBFFFRRL\nFFBBBFBLRL\nBBFFFBBRRL\nFBBBFFFRRR\nFFFFBBBRRR\nFBBBBBFLLR\nFBBBBFBRLL\nFBFBBBBRRR\nFFBFFFFLLR\nBBBBFFBLLL\nFBFFFFFRRL\nBBFFFFBLLR\nFFBBFBBLRL\nFBFFFBFLRR\nBFBFBBFLRL\nBBBFBBFRRL\nFFFBBFFLRL\nFBBFBFFLRL\nFBBFBFFRLR\nBBFBFBBRRR\nBFBFBBFLLL\nBBFBBBFRLL\nFBBFBBBLRL\nBFFFFBFRRL\nFBFBFBFRRR\nFBFBBBFLLL\nBFFFFBBLLR\nBBFBBFFRRR\nFFBFBFFLRR\nBBFFFBFRLR\nBBBFFBBRLR\nFBFFBFFRRR\nFFBFBBFLLL\nBFFBBBFLRR\nFBFBFBFLLL\nBFFFFBBRLR\nFFFBBFBLLL\nBBBFBFBRLR\nBFBFFBFLLL\nFFFBBBBLLL\nFFBFBFBRRR\nFBFBBFBRRR\nFBBFBBFLLL\nBBFBFBFLRL\nBFBBBBBRLL\nFFBBFFBRRR\nFFFFBBFRRR\nBFBBBFFRRR\nFFFBFBFRLL\nFFBFFFFRRL\nFFFBBBBRLR\nFBBBFFBRRR\nBBFFFBFLRR\nFBFFFBBLLL\nFBBBBBFLLL\nBBFBFFFRLL\nBFFFBBBLRR\nFFBFBBBLLL\nBBFFFBFRLL\nFFBBBBBRLL\nFBFFBFFLRL\nFFFFBFBLRR\nFBFBFFBRRL\nBFFFFBFRRR\nFBBBBFBLRL\nBBBFBBFRLR\nFFBBBBFLLR\nFBFBBFBRLR\nFBBFBBBRLL\nFBBBFFBLRR\nFBBFBFBRLL\nFFBBFBFRLL\nFFFBFBBRLL\nBBFFBFBLLR\nFBFBFFBLLR\nBBFBFFBRLR\nBFFBBFBRRR\nBFFFBFBLRL\nBFBFBFBLLL\nBBBBFFFRLL\nFBBFFBBRRR\nBBFBFFBRRR\nBBFBFBBRRL\nBFBBBBFRRR\nBFFFFBBLRL\nBBBFFBBLLL\nBFBBFFFLRL\nBFFFBFFRRR\nBFFBFFBRLR\nFBBFFFBLRL\nBFBBBBFLRL\nFBFBFFFLRR\nFFFBBBFRRL\nBFFBFFBLLL\nBFBBFBBRRL\nBFFFBFBRRL\nBFBFFBBLLR\nFFBBBFBLLR\nFFBBFBBLLL\nFFFBFBBLLL\nBBFBBFBRRL\nBFFBBFFLLL\nBFFFBFFLRR\nBFBFFFBRRR\nBBBBFFBRLR\nFBFFBBBRRL\nBBBFBBFLRR\nBBFFFFBRLL\nBBFBFFFRRR\nFFBBBFBLLL\nFBBBBFBRRL\nBBFFFFFRRL\nFFBFFFBLRR\nBFFBFBBRRL\nFFBFBBFRLR\nFBBBFFFLRR\nBBFFBBFRLR\nFBBFFFFRRL\nBBFBBFFLRL\nFFBFFFFLLL\nFFFBBFFLLL\nBBFFFBFLLL\nBFFFBFBRLL\nFFFBBFFRLR"),Fn='--- Day 5: Binary Boarding ---\nYou board your plane only to discover a new problem: you dropped your boarding pass! You aren\'t sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.\n\nYou write a quick program to use your phone\'s camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.\n\nInstead of zones or groups, this airline uses binary space partitioning to seat people. A seat might be specified like FBFBBFFRLR, where F means "front", B means "back", L means "left", and R means "right".\n\nThe first 7 characters will either be F or B; these specify exactly one of the 128 rows on the plane (numbered 0 through 127). \nEach letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the front (0 through 63) or the back (64 through 127). \nThe next letter indicates which half of that region the seat is in, and so on until you\'re left with exactly one row.\n\nFor example, consider just the first seven characters of FBFBBFFRLR:\n\nStart by considering the whole range, rows 0 through 127.\nF means to take the lower half, keeping rows 0 through 63.\nB means to take the upper half, keeping rows 32 through 63.\nF means to take the lower half, keeping rows 32 through 47.\nB means to take the upper half, keeping rows 40 through 47.\nB keeps rows 44 through 47.\nF keeps rows 44 through 45.\nThe final F keeps the lower of the two, row 44.\nThe last three characters will be either L or R; these specify exactly one of the 8 columns of seats on the plane (numbered 0 through 7). \nThe same process as above proceeds again, this time with only three steps. L means to keep the lower half, while R means to keep the upper half.\n\nFor example, consider just the last 3 characters of FBFBBFFRLR:\n\nStart by considering the whole range, columns 0 through 7.\nR means to take the upper half, keeping columns 4 through 7.\nL means to take the lower half, keeping columns 4 through 5.\nThe final R keeps the upper of the two, column 5.\nSo, decoding FBFBBFFRLR reveals that it is the seat at row 44, column 5.\n\nEvery seat also has a unique seat ID: multiply the row by 8, then add the column. In this example, the seat has ID 44 * 8 + 5 = 357.\n\nHere are some other boarding passes:\n\nBFFFBBFRRR: row 70, column 7, seat ID 567.\nFFFBBBFRRR: row 14, column 7, seat ID 119.\nBBFFBBFRLL: row 102, column 4, seat ID 820.\nAs a sanity check, look through your list of boarding passes. What is the highest seat ID on a boarding pass?\n\n--- Part Two ---\nDing! The "fasten seat belt" signs have turned on. Time to find your seat.\n\nIt\'s a completely full flight, so your seat should be the only missing boarding pass in your list. However, there\'s a catch: some of the seats at the very front and back of the plane don\'t exist on this aircraft, \nso they\'ll be missing from your list as well.\n\nYour seat wasn\'t at the very front or back, though; the seats with IDs +1 and -1 from yours will be in your list.\n\nWhat is the ID of your seat?\n\n',mn='Solve(inputData) {\n    // Solve the task there and then call \'SetResult(Result)\'\n    // with the correct answer\n    // The answer can be checked at \'https://adventofcode.com/\'\n\n    inputData = inputData.split("\\n")\n\n    // Part One\n    var topScore = 0\n\n    // Store IDs for Part Two\n    var uniqueIDs = new Array(inputData.length + 1).fill(-1)\n\n    inputData.forEach(element => {\n        // Change rows and columns to binaries. This way it is easy to solve row and col just by parsing it\n        var RowNumber = parseInt(element.slice(0,7).replaceAll("F","0").replaceAll("B","1"), 2)\n        var ColumnNumber = parseInt(element.slice(7,10).replaceAll("L","0").replaceAll("R","1"), 2)\n\n        ColumnNumber = ColumnNumber ? ColumnNumber : 0\n        RowNumber = RowNumber ? RowNumber : 0\n\n        var UniqueID = RowNumber * 8 + ColumnNumber\n\n        // This is for Part Two. Store 1 for the UniqueID index when it is found.\n        uniqueIDs[UniqueID] = 1\n\n        topScore = topScore < UniqueID ? UniqueID : topScore\n    });\n\n    this.SetResult(topScore)\n\n    // Part Two\n    for (let i = 1; i < uniqueIDs.length - 2; i++) {\n        if (uniqueIDs[i] == -1 && uniqueIDs[i-1] == 1 && uniqueIDs[i+1] == 1) {\n            this.SetResult(i)\n            break;\n        }\n    }\n}',Bn={components:{"show-task":E},data:function(){return{CurrentInputData:un,CurrentTaskData:Fn,CurrentSolutionData:mn,InputData:un,TaskResult:[]}},mounted:function(){this.Solve(un)},methods:{Solve:function(n){n=n.split("\n");var a=0,L=new Array(n.length+1).fill(-1);n.forEach((function(n){var t=parseInt(n.slice(0,7).replaceAll("F","0").replaceAll("B","1"),2),e=parseInt(n.slice(7,10).replaceAll("L","0").replaceAll("R","1"),2);e=e||0,t=t||0;var r=8*t+e;L[r]=1,a=a<r?r:a})),this.SetResult(a);for(var t=1;t<L.length-2;t++)if(-1==L[t]&&1==L[t-1]&&1==L[t+1]){this.SetResult(t);break}},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},yn=Bn,fn=Object(c["a"])(yn,hn,pn,!1,null,null,null),vn=fn.exports,wn=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},kn=[],Rn="atxmhdzkjgivwcqu\nconirfdgplhvsa\nghbvdefsaniyc\n\nc\nc\ncas\nxc\ncz\n\nsdxtfzo\nstfzno\n\nt\nt\nt\nt\nt\n\nnkjexbhrswugov\njxugwhbroves\n\nmeqnof\nvxwhzpmqo\njno\nbkoliycr\n\nu\nu\n\nrbyuds\nsurjb\nlbrxsawhu\n\nsd\ndq\nds\nds\n\nzo\nz\nvz\n\nczhuijskmt\nutszkmhijc\nkzmuictsjh\nchimtzksuj\n\nuwhmbl\nwblur\nwublm\nbflesuw\n\nbo\nwcszvk\n\nhtfsqoriyngzjbvx\ndujtmikcpzrwehaxl\n\nrubwcon\nvwo\nomwhl\nrxwbo\n\naj\naj\nfaj\naj\n\nnwfmajzslokrxhgtyq\nvicapdwkbuh\n\nvdwysctjq\njmilqgh\njqgf\n\ntnoemqphdcbj\njfavhsqkntg\n\nqjrpfwckgbvenam\nqpucwvgmjfabro\n\nfmqwzhbytnacdr\nfmncdrhqywatzb\n\nr\nw\nw\n\numrbzaypkwinh\neyuwhi\nyhuwie\nehiywu\nhwyui\n\ndxynjlhfbi\nfjxd\nmxdfj\nfdxmj\njdfoxs\n\nikdeutpqynboghfs\nyjfkmidnqtgueb\n\njpzfsbwgdkvtiymneuca\nvbpkjgtdaucezymwsn\nctmydbsjgapewnzuvk\n\ngyxjvqk\ngwkjfvi\nrkcbegvjm\n\nsgzakoq\nkoszqa\n\nqmzjhtsodfurnpegy\naurfdgojzmetpnbis\ngtezmrodujfpsyn\n\nqyknpixtrfuolw\nfkpwgntyxlqumrio\nyrflupnoqitxwak\niypferukwqtonlx\nqurtxlnoiwkyfp\n\nxbweyquhnairjtzopvmg\nbyhuwnaxqoimtzepvjrg\njzxbqmrnwgvdpaeyotuhi\nnwtpovmruhqieyjxabgz\nyoeamwhqbrtjvgniupzx\n\nic\nic\nic\niuperc\nacsi\n\noicl\nc\nc\nc\n\nuyxbejfrqhvpcknziowtlad\nfxhnwdebmjzpitkgqualrv\n\nme\nme\nwme\nyemc\nem\n\nzxgncvbdrewkyls\nlzbnwesxckgryvd\nkrvsyadlgbzecxwn\nnwcblgzdsxrkevy\nvgwbrxleckzydns\n\nbdrhenpgofqyv\nuazwsjlitk\nwlcatxm\n\njsdnlwkto\nonkdhysjtwl\nojhkstnlfwd\nwfjeodnklts\nwkngdtqulaozjs\n\njseag\nlazegosfj\ngaesj\nrjagse\n\nvycnwzfah\nyhwanzcvf\nfycvwzhna\n\nkdenoqr\ndrnokqe\n\nfudosahtj\nhzygvbjdu\nqubhjdep\nezdujxbhw\n\nasrfbcnuywm\nnyrawufmbcs\nmbyrasnufwc\nfusrncywmba\nracbyufmnsw\n\neldyp\npgdjb\njdpb\n\nxiky\nximqy\nyxinl\niyx\nyiekx\n\nlzbmt\notbpu\n\nupobyhamecgwtjkx\nkytepobcxhwuajgm\nkobtcgphxeujmwya\ntbpjehaukgycwomx\n\nlgjrbcymkatpx\npbazritkysjmlx\ntkpymrejqxab\ntayxbjnlourdfpkwm\n\nkvqxyecmirno\neinsmcdxkyrvoq\nevxqrkoiymnc\nyvikqxecmron\nyqemnrickvox\n\ntlroieuszcwpkdbmh\nypgxfdatn\njqpdvt\n\nkuynfegcxrt\nytnuzecgfxk\nxhgsflynecw\n\nq\nq\n\nmu\num\nuwm\nmu\num\n\nabyhrzfe\nyqhrfebz\nfrhzeyb\nbkfreyazh\nebrzyhf\n\nvdo\nse\nx\nx\n\npeckiwfxzqsal\npaiuofxlqyczeswk\nzxlarkseiwfcpnj\nlnkijaeswqpfzcx\nmtpilgsbchfwzexka\n\nvnuoec\nfveonub\nevsrniquo\nondeuav\nnuovte\n\nypnmo\nomypn\nympon\n\npgbej\npjbg\npjgb\njpbg\n\nxwognfphakcjritb\nfvcoexrpughatk\norahqctxfzgkp\nxgfrhcokmapt\n\ng\nytab\n\nq\nyw\n\nravlebmfjodkzgu\nrujyetlnszmkvad\n\nmgktpszhdeolvbqa\noqnbagktzpvshdle\nsltvkgpezabqdh\nkpsghlqzedbaft\ndknetrlqgpzahbs\n\nrejugfqtbaklixcmhodwsnyzv\ngmukinscxjpvehbrodfqyawz\naswfqonbuvhkdizjgmrxyec\njrgiyhdmwcexuqfzoabkvsn\n\nnfcsiavmzglehorwd\norcmwveigashnzdfl\ngcmhdvfawlsnzxrioe\nqfehovruzlgncwmsida\n\nqrufx\nfrozu\nqfsrjub\nnvfuxr\nwcydflreu\n\ntawnehfqjsc\nocaznquitbs\npnaqcshtv\n\ntwvz\ntzwv\nzvwt\n\nejv\nvje\nejv\n\nzicejtfhnuq\nhzjcquitenf\nvjznuqhtiefc\ntuqcnjefzih\nhitnjezfcuq\n\nw\nw\nf\n\njufqelnptbragsmocdwk\nembpluswrkdovjnqcfg\n\nspzytuih\ntevqnxrhi\n\nnxeolsqucv\nlosqenvu\nnveljqugso\nopurwesnvql\nvbeflqugwnosrp\n\nfcekwrx\nvczrowmxa\n\nydtqbl\nldytbq\nbdqltyv\nqytldb\n\nfzbucokxnimrdvsplta\nztnkgarvdlxfiwu\nudzxtkfvhrnlia\n\nqnzmokyluv\noczmvlnyqku\nkvlqzymuon\n\nqchbuvepxwm\nubxvpcwd\nwsubcnvprdatx\nrvpbxydcwu\n\nibeayjghko\ncslrtwdvmbxqpfnuoz\n\nuzp\nuzp\npzu\npuz\nzup\n\ngqhbwupsmeklf\nebmlkfgshpwuq\nmbsqkpgewulhf\nufphbmsqlkgwe\n\npxsqkfa\npkmcrqefgx\nkfxpq\npqkyfx\nkzdqfxp\n\nyimkxaqtcnospueg\npngtsyqkcuoamiex\nncygqsmatiupxkeo\nquichtngeypsaxkom\n\njew\neylr\n\nuc\nuc\ncu\n\ngapelusnokrw\nzloakewgpsrun\npnrkwosagule\nnuwaesypkgomlrv\niarpwkugolhesn\n\nqdyzmoitxflwbnver\nudwlojxfipkshacnqvg\n\nbutecshxlvanoy\noctsbudkilhnzeyavrxg\ntyavloucspenbxh\nqebhpxsunovalmwjcty\nxhvstmbaulyceon\n\nvtspwicxbz\nspbzixvtcew\nvcxpwtsibz\ncizvpxstwb\ntiwcbxpszv\n\navrgucfhxjblspwzmdtnyiqek\nwvlmbfipargeyxscjthznuk\n\nclzbqry\nlrebz\nzlbpr\nurlzb\nlbzr\n\ndvqtxlgowke\nidtvexwlog\nwvlotxgde\ndygtopxlvwe\n\nxuybmdgwacejltzkhr\nlojbxtwyrhdgufkpec\nlyebujkxhtrcwpdg\n\nzhxigcsotywpuelband\ngirdhbonymwfpuvx\n\nprofkjw\nnylxubzptsg\nvidrop\newpfh\n\nvc\ncuv\nvc\n\ngjytrlzpeonxwcdbafh\ndhxgwpyjlroazenftcb\n\nfymaqc\nafmcqy\n\nwxcazpmrfyb\npnvrzhacfji\nzvctfapr\ntpzlchiafr\n\nizrdmuwebqk\nmreahwzsuqd\nruqyezahwpdnm\n\nrj\njr\nrj\nfjr\nrj\n\ntxjnrfocwlemuiapbh\nlqjuaweo\naujlkesoyw\njwoealu\nujodaelwvkgz\n\nzo\nzo\nz\nmzd\n\ndx\nc\nc\n\nmprvcwluqo\ntloukican\n\nodvtfhqjawgpzbxre\ntgoxqwrfhjcbaev\n\nfdaljwguepsiykxz\nlpseagdjzufkywix\nsywukzgjlfixaped\nbpuyjswgrkdaxliezf\n\nuncv\nicnv\ncnvu\n\nktaqgr\ntwgaqykrjm\nvqgpkfuxtchrae\n\narmwntdgzfxikehupj\nxtfhgjmrdzpaiunewk\n\nyxrkv\nvfykru\nrviesjyt\n\nplyfkjxasvuzdcgbtwi\nxzjiwylkpctbfvdugsa\nfkxjvlbactydpgzsuiw\nqgwcbfjtypzkvluxsdiam\nbtzplfwigkdjasxyvuc\n\ngwloycsuz\nmusyrzwlaoge\nuovyzhlswgc\n\nqndaivetjcgblwzsykhu\nagorkdnxvmswpfhqiuetzyc\n\nfgxopdsinm\nmsgdeponfxhi\nxpodgmsinf\nnfmodxisgp\n\nrx\nx\nx\noxed\nx\n\ntwrjcfumd\ncvjbfuw\noyasjulepkgwx\numirnjw\n\nunhbzo\nhnuobz\nuzonhb\nubhyonz\nuzhbon\n\narfjnt\nnetj\netnqj\nyjxsntm\nfntjvg\n\nkhqap\naqhp\npjovizqh\nqph\n\nuosyjc\nzrledfqmpi\nkjxotw\ntgay\n\nnrzckijesf\nihrbgsjn\njshbintrom\nhrmnsibj\nmjsirwn\n\nilqbcavozr\ntarjqpolv\n\npiokgqecjz\ngfjkleochzip\npeczjiokg\nzkpjioegc\nzciekojgp\n\npwi\nwip\npi\npi\npih\n\ngmjlzhpkqbfiuvdsy\ndjfvsyglzcikmqbup\nmzsjgidkewauvqflypb\nvzuglyndmftspikqjb\n\nl\njl\n\nyiucsmkgalz\niaulzghkmnc\n\npny\npkyn\n\nmgflvdoj\nvlmodfgj\njoglvmidf\njdomlvgf\n\nbctiyxqnazrpd\nqautyfzjegx\ntyqaxzojv\nqajgytzfx\nxqazylt\n\nwmkauglpbyzno\ndjrhciqfxs\n\nzvk\nzkv\n\nvrlencohidajmxub\nxordabecpnluvmhi\nnjrieodvaclbhumx\nuebfcsiorldaynvxmh\n\nm\nm\nom\nm\n\nelyhutb\nethub\nutebh\ntxzuehdgbnr\nubeth\n\nos\no\n\nva\nhv\nhv\n\nespkqfnj\nneqp\nnepq\nenqp\nnqpre\n\nmzthqn\ndrnmtzq\ntqmnxyizw\n\nkvt\nftv\nvlt\n\nvasmgbthenrwxdicl\nxcbstgrnvedwauimhl\neamctuvdgsrhxniblw\nbknedmhcxigrwtlvsa\n\nyomwcsxjienprztgubklvd\nivfgqukempnbwaryj\n\nhuvpmdyswlj\nwpyhvljmsud\nmdhwjvuspyl\nwlypuvmjdhs\nlmjwhyvspud\n\nlmwjpzcoavteiq\nmlwkogxvabrqejci\najmhcedvliqwo\nvomafiwqljcue\n\nmpukzsthlv\nvwzpkmhult\nkuvhwtzmlp\nvhmjztplku\nutmvczpkhl\n\nghmjkozbcevyrdixwputf\nejmyvnpgzkwbuxfoctdr\ngdjmetkfxourplyvwcbz\nrojxycmfteuvwbkpgzd\neywujmctvqgfdzkxrobp\n\nthoagp\nbtaphg\nptaghwm\n\nvnmuxtqjifowya\netqlonrwmfadzpxbuj\ngxjquatnmowvf\nonmfctjuqxakw\n\nbeinxhzlmjatkc\nhmxctiklajnbz\nzlnkxctjhambi\ntlxzhknmwjacbui\n\nycvpzimohndk\nimyzekhpcod\n\npeaxqrgofmjbytuzvd\nwduhliarofgxzntjev\njgasdekoutvrfxbz\n\npkstbjaclrzd\nkelpszrmg\neojrskczltu\nihrvlzxqfsyk\n\nrpjdlcybgniahuzqs\nzhpgruqjtcsabnidyl\nutljniqdrpsbzhaygc\nznojdrpcuiyqshablg\n\nxtnjlk\nxknjti\nnxkjt\ntkjxn\n\nhcleuvbargstowm\nbhwoulsegvtramc\nhmasguvceltwobr\narutogvschmeblw\nservlmabghckwotu\n\no\no\no\noy\no\n\ngtjbzkvas\nbgkjvtzsapl\nzrvtgwcakfjbso\ntjbkugvasz\nvbagszkjt\n\ngfeoirwlbmdjhk\nkirjwlhmoebfp\nrolkeiwbhmjf\nhbirkejwfmlo\n\nyzptkfhal\ntlzfkyhap\ntplzyhfka\nhfplztkay\n\nvmrqh\nvhjmxqgyidw\nqhmnv\n\njdhwkilngubeoa\nsxpluz\n\njusbk\nuxsz\nvylqdmugtpne\nazfu\n\nzxtbn\ntbnx\ntbxn\nbtwxnu\nnaxdbt\n\nv\nv\nv\nv\n\nioruk\nuriko\n\nunmxsykzgcilw\nnokmu\nmjnuqk\nakunmv\n\nrfyibxnevstdz\nfsextzdnvbyir\n\nehsdnwqugifbvjlk\nxkesuhnfldijbytgwv\nivjqhwfdgskenulb\nvlwijqbsfkzudegnh\nibudhwelgfkvsqnj\n\nwhxsbrjkqy\ndxhkwfsg\nhxuonzvictapme\n\nui\nui\niu\n\nofzuh\nczquo\nzohu\nuzof\n\nakphewcvmiqzuxdsf\nfrmsviubcqgkzdwxjnh\n\njywpvmdhut\nxjeakczsi\n\nxaenzqsirfm\nxzsanmqifer\nxzfoqrsajmein\n\nypirboxntkl\nyobrxintkpl\n\nbenomiyjqdptszaxc\nncayqsmbjfzpotx\n\npoygwzfkuahrvqimbnscjdexlt\nxqwnagemrlscbdouykhivjzftp\n\nvsphtodb\ndstvobp\ndvpsrbomt\nhtovbdsp\npsodbtv\n\ndyxao\noabtscl\nvhgnaui\naesm\neak\n\ngw\nkrosgqelnc\n\nhvnfalkbdcexi\nbeunfqcaxivkdl\nlinxezbfcakdv\nkdxbiecfpavnl\n\nbp\nqul\nb\np\np\n\nwbvefx\nhuqymact\ngpir\nmoykz\ndju\n\ndt\ndt\nted\ndt\ntd\n\nelhjvm\nmu\nomnap\nfywtsmrc\nogrzm\n\nefb\nbfr\nfb\n\npuszjmhfo\naxjwtomegyrku\nldvbujchofmz\njmdoupl\n\nbvweypzsfroah\nknpleztqcgrvdashfujmyio\n\nrgdtzhj\nohswzxaijd\nmlhfduvznj\n\nfaqdszhwtovk\ndhfvskonzalurmtqwc\n\nectigrqjnhyzvxomlp\ngprjuxloceibv\nelricvspxjog\nfivcorpxjgel\nrclogpejxdiv\n\ncgshrel\nanfsk\n\ny\nsmgwxh\nd\nd\nt\n\nxwvtlpayobgshjq\ntahyjpxlqogwsc\nslgwptojqhxy\ntzywskjlqhpxfg\n\nxakmubfreyop\nzsaxruky\nkayruxst\naxulykqsr\nyukrax\n\ngqhsy\nvdkc\nikexpt\nalujfmnr\n\nqd\ndq\ncdspk\ndt\n\nkv\nlvk\n\nlcn\nmsnyx\nuepnl\n\nidwqrmpjzo\ndojqzmpiw\n\nyboluqi\nxzbenhvwftos\n\nvsqmcylrugfezitxbhpnaw\nebcxztpvgaswfyiuqolhmn\nywqmpxzesuovtfighclanb\n\nfwpxel\nzlefpxwm\n\nxahkdvyig\nugdixykhav\nhagkivydx\nahykgjvdix\n\nfqypwlzaxcnh\nmbjfrzpakwd\n\nfoajsvbkqnwurhmtic\njfwxuhmlyetcpgra\n\nsaynjgeklirmfozuth\ntskreflaogzcmnyiujh\njiylarkmshonuftegz\nfjxrtdavnmgiyoeuzslhk\nglotsukjrfyahmeizn\n\nfgvzuiksxlptcqwmnohr\noqztcmspnhwvijkdgu\n\nwhfx\nkfh\nhfr\nbnjzhsdfi\nufqch\n\nncbfhpexm\nxremnpfc\nbencmpxfw\n\nrpyknb\nktpcb\ncpzkb\n\nbeou\nuej\n\nqgyudcrhfml\npvkjzneo\n\nazosqblkfdjuipemwygr\nnxqjumytrglaohsidp\nuoamsqgyrjdiplx\ndlumpoyarsgjqci\n\npkbhegfducs\nsukehcfbtjdg\n\nqfjm\nqkselfmob\nqfcxnvm\njmqwf\nmfq\n\nivmpywfqruhs\nrupmfhqiyswv\n\ndkav\nvadk\nkvda\n\nkincpbv\ncknuv\nvnuckxag\n\nflhdeonaxsciv\ndescoflahnvix\nnofiacdvhxsel\nehlfoisvxcnda\n\nhs\nztedwx\nnlva\n\nmeqycx\ncqmiye\nqgmotyce\nmcqgye\nemcqy\n\ndwshy\nswhyd\nhwyds\nswyhd\n\nwbqvtxal\n\ntlfdbvkyu\nflydbk\nbsrpfidqxky\n\nunwtfcv\nkvrfbnw\n\nxazgi\nagz\nysga\nnawgv\n\nswtx\ngnqayohzm\n\nun\nz\n\ntr\ng\ng\nd\nk\n\ndl\ntl\ndl\n\nv\nyoudan\nejm\n\narktbdczqfvx\nqtzxbdkarfcv\n\ngfve\nvefkg\n\nemojkagtqclzxdf\njtamfedbocz\nhzpijrveasomwdfcyt\nmetazdkcjfulo\n\nuplwm\npwulm\ncmwup\nwupm\numwp\n\napjeybkdmq\nkdjqpmyea\n\nk\nk\ni\nk\neng\n\nw\nwh\nf\nj\n\nrykcomu\nmcyorxuk\nmuoyrck\nrcoykmu\nyukocrm\n\nuc\nmcn\nsfl\nexqazjb\nvdc\n\nhpoack\ncltek\n\nesjqog\nqeso\nseqo\nqesoy\neqos\n\nd\no\nv\nag\n\nrnzgaehid\nparned\ndnaefr\npdrnyake\nsernad\n\nxzhlvcnjykdmp\nzlvxihpwjkyn\nyzklnvxhgqjp\n\nv\nv\nvt\nv\n\nksmfiwl\nmklsfwi\nsfkmwli\nifkswlm\nimlsfwk\n\nnzogsphkcw\nhkgpowzcbsn\ngowhkscpnjxz\nhspwckgzon\n\nkqoxpyvzuw\nlorghcfmjte\n\nuldnticjqhrzwmx\nmnwuqclgzpjrske\nlfcynwrvmzjuqa\nlhnomxjzuqgcwr\n\ntdpxnfrj\ntxpjdr\nptjrdx\ndxjtrp\nrdpxtjb\n\nzfaeqorn\nqmezdfxr\nuqbyeizphrgtjsk\n\nghizjpctfdnql\nrvoaecnykifdtp\n\nliszmpruehocfndgt\nbdiruxnsfplkgoe\n\nmzvcwhrqabpnstxjyoleifd\nmbwtcxlzosyeqpvfdinajrh\nhqenawizmxyjvlrptbcdsfo\ntzovqajmwdsepcyflhrxbin\n\nehodx\nsvycbltpmoa\nirohkxe\nfzjuo\n\nrv\nrv\nrv\nvr\nvr\n\naxoez\nzoexa\nxozae\naoxze\nzoaex\n\nvmgthlaxsnbidk\nnqtzilcrhgsjauxm\n\noahz\nhzqaoc\nohaz\nhezao\n\nobkwvazgc\nkvsaegcopnwbdz\nzgkbwvoac\nkzgawbovc\ncgoakzbvwl\n\nklnmgi\nmciln\nscnpi\nyniw\n\nekwcfunhsba\nsjuhcnfeakb\nsbefhaqkucn\nkaoudnferscbhy\n\nebcoplsnuw\ncamnjlepubo\nlsoebcnupz\n\ntfxyvgznocdleb\ntihbfsn\ntnfhbp\n\neyojwm\nyjomex\nmjeyo\n\nwpvtdjzrcf\nxmfuncgiybjhpsqlkz\n\ntzcwnlei\ntwceinl\ninlcvgtkew\nilcwxetn\nncmwtaiel\n\nhzwocd\nqvhkn\nhytliebm\nfshq\n\nsxlbnowmv\nmsonwxb\n\nhdknsxog\nnfojk\navelwctzqmripuy\n\nslgrm\nmsrgl\nglsrm\n\nshjieplz\nzogimjcv\nrkfqxdynwbu\n\noejgdcamtxzhyn\njhcntdealyzxogq\nejthagzcxonyd\nonxdjsmycgztaeh\n\nuyloghq\nyguhlqro\nuoyqlgh\nouyhqgl\nyoluqhg\n\noxqtmpjzieunbdak\nnlmhzwjedxouyisctfpvrg\n\nkmrnhzcad\nahzrcndm\n\nsbcmuhfkanitw\nscbkmaftwhdinu\nswmbkhnacitfu\nntcaukbwmshif\nkswhbufimctna\n\nnlhwqxvpjgmsr\nrvgmyjxhsplaqewn\nsmvnlwgqxrphj\nqjnxpmlwhrsvg\nlmsjpqrwnxhgv\n\nfivwsrdz\nekcq\nxg\n\numhborsxcg\nbghsmqxuc\n\njwnv\nwjnv\nvnjw\nvwjn\nwlvnj\n\nvlfhdjz\nhjlzdvf\ndozvmlhfj\njlhvzfd\n\nfue\nksmad\nl\n\nwcjsaepudqvionrt\nrlhydbgixmznkcjt\n\ncqh\nqc\ncql\nqc\n\nkwapzcyisfexgmolnhbrqv\nvfdlyxsmkotwhbpziraqcg\n\nctmgd\ngtdm\n\nxwornpgqkmizhutfdlb\nnzdjoiwprvhtflkcgum\ntrigoqlwhzmkpdufn\n\nnix\nxni\nnxi\n\nnrvcsp\nfjbkd\n\nfvdmgq\nfqdmvg\nmvqfgd\n\nblx\nx\ntv\nrkqzge\nl\n\nj\nd\nuc\nf\nj\n\nmnqbwykj\nnksfmwtbzepi\nmndjkwrqb\ndbkwnm\n\neskvjnozwclrumqgiydhpat\nzptyjudvmlaehnqoiscgrwk\nepgmahlktynjdsvouqizwcr\nmnltkagqcxwyveidsourjzph\ndpmjiovtqswrzluhknyegca\n\nwd\nws\ndhw\n\nhcs\nshc\nhcs\nchs\nsch\n\nfsajcbywgh\nfougyesbrcahjv\nbfhsjyagc\nhfacgbsjy\nyjagcsbhf\n\nymnkoucts\nsykmzotc\nouyktsmc\n\nv\ntv\nv\nv\nvbf\n\nuxplo\nupxl\nlxpu\ncunlxp\nlpux\n\nbclgqmi\nibmlcg\nmlibgcan\nligmcb\n\nje\nkje\necnhi\njye\n\nxoy\nyxo\noyx\n\ntdkglesr\npqkrhevxulo\nrzsyetlakd\n\ngauz\nzuag\nzagu\nzgau\nzgua\n\nvsph\nhuspgvl\nvpksh\npuhvg\nahmpivodq\n\nuewjqlcdghxszbr\nntrxwsljz\nlrojxkfaszw\nzjfipyxslwrv\n\ndqkswrctf\nsvwfebmkdrzpyqjx\nrdswgqnfklt\n\nnjwzbhkfilvec\nnvjcelwhbgfz\nefcwlhbxvzjn\nsefbhpljwzcvn\nnljfcvzwexhb\n\ntiflgjea\nogjfaqvitl\n\navrklgztmw\nmzwegvnkatlq\nvmtlakzgw\nmagtzklfibwv\nvlaetnzkugwm\n\nvfa\natvf\nfva\n\npgxnohyielrtdbzk\ntxfhrpyoedkgmn\n\ncry\ncry\nycr\n\nsqogwpir\nirdoqxwpge\ngqrywipo\npdwijgqor\ngfvobipwqmlr\n\nmb\nbzm\nz\nq\n\nbgowltrfchp\ngbhlopctfrw\nrpohbwlcfgstax\n\ngquyvhfizapblmdcnkewx\nmwsukfhcqbglexiavznyd\niefbqnxvwlzmkuhcaydg\n\nwctkbxhpv\nladpwgrzovshmt\nuntwvihp\netjwqphv\nyvptwfh\n\neqsyvjwfctgplhxabzr\nmunwkdibo\n\ndqlbhkcwzrsmtpi\nwklrtmsdczhabipq\n\nqhesvmjdyxw\nivqetudjb\njavdteq\njoqdve\n\nkrdltagi\npcgqmxje\nfgmb\n\nolxaykprm\nmpylsaxr\n\nwm\nj\nj\nj\n\nfkcogpsdjbhmrlixwya\ndxozrtmjsycpiwbelqgf\nwgunpmldzxfeoiycsrbj\nlocvwxgfjmsbtypdir\n\nek\nke\nek\n\njxsczemidvof\novfmdzicjxse\nedovzsmcxjif\nexfomdzvcjis\n\nbovesgqckmlnzd\nlozkvnegbmchsqd\nkglnesdvqobzcm\n\niynrwcudgzpvmbhkl\nphybgwrjiznlavudc\n\ninhflg\nlghnfqis\nhrlxfngi\nghinakwflyu\nltrnhbigf\n\neij\nluej\nwcjep\n\ncmbwja\nmacrbwg\n\ngbnaxskwovjhqtyf\nnhofbspvktwqz\n\npmq\ns\nc\nj\nvs\n\nt\nty\ntn\n\nglxsy\nyskixgjld\nbswalux\nnxjls\n\nvueh\nuevh\n\nmjvlyedipz\nmvzdjeiwry\nmevizodyj\n\nbrhntfpvglmo\ncmzvt\nviamct\n\nymbviloeqth\nhkltyqcmoxudjnb\nbwqzmpytolh\nmovehlytbwqi\n\nlbdqjzrfayh\nafgdebjthyl\nhdkjbalfyu\n\nyv\ngv\nv\n\ndxyqclmgvpahor\nktjmr\nzbwfnrm\nmtzewjr\nrmsui\n\nghksqe\nnlerhxqkmsvo\nqekshg\nheksqg\nqsgyhke\n\njecfapg\nasgpmjnfw\n\nlshjykoirpuzcgmwdqv\nqwgzoudypclsvrhimjk\ndrmjwylhqvpigcsuzok\n\npoclyq\nlpoycq\n\nwsfcn\ncisz\n\no\nd\no\no\no\n\ngoqubkareptcj\nmkrcebtspaj\npkbjracte\n\nlcwvagpbzi\nlwgap\nlwgpax\n\nnmxilaeurpkbcqt\nexcklrinuatyqpb\noxzrbcnqlgtapiuwe\nqbtodxcnreuail\nfqevniubrjclstaxh\n\nkbqclfmnrowuzh\ncromfwbznhkluq\ncfrunokbmhzlqw\nucmfbnwkolzqhr\nlcunfhmzkboqrw\n\nzabujhtvnkiwlprse\nrwbxgszjhfdotvinpela\nivptyewzmhdcnjalsbqr\n\nm\nmocztn\n\ndocyu\nuzdocmy\nocfsdyrut\n\nn\nn\nn\nng\n\nzntxuekvgasqjbhdcpywir\nbzpakvruhewjqiycdgtxsn\ndwgubaxqkvepizsnjrcyth\nsthxpekqviydwazujgrbcn\n\ne\nke\nydv\ne\nk\n\nausdlnoefwzyrxbqmjiv\nhrsizvqnwmejofabguxld\nedmfjzlvoinxyqprwaus\nievajdrlfkzqcstnouxwm\n\ndkxoaplqsbz\nzdrxpfltkobywasq\n\nhpcniyojgsztdlub\nlitbsnghpojcyzdu\njdhbycapzuwgtnlsio\nhbsiltzyudcpngjo\n\njkbog\nuvgok\nvog\nxgieom\n\nf\ny\ny\n\nzoswvb\nswgbzdvot\nwsrezbvoc\n\ngdutplihzvfocxa\nzpqonktlyrucaidmfvh\ntuavsxdhfozlgciebjpw\n\nhtydg\ntlg\nmeygtd\ntqjrg\n\nzhugty\ntzghy\nezysgth\n\neirgsfbqmhoxkyj\nwkhfsoeibmjgqyxr\nqgokmyxeishjrfb\ndfbsuriyjogeqvhxmk\n\nu\nubi\nu\nu\nu\n\ncvseaypi\niycpve\npveiyc\nivycpe\n\nojgxqrzpf\nqfzrgoijxp\nqojgrxfzp\ngropqxjzf\njrgxfqzpo\n\noswduz\nozuswd\nwozusd\nwosdzu\n\nzepyf\nwpe\ndep\n\nptsoviyubhefwdg\neugbfwotdvspy\ndabcyetvufgpos\n\ngvwjbspykdzoarinteh\nhjrecqndygmabifp\n\nbelwimkrtvhnzojau\nnvaqblwkreohsmtcz\novaxdmgnzbeykrtlhw\nkwzorvhnbplqtema\n\nyskfpmjebdich\nexzjvwsbipomqr\nijsbutamfheldpc\n\nxowyihcmreuqldkjgv\nymqlrhduocepkzijxwv\nwdyljroqshcvfekbmuitxz\neiolxkjvqcwmuyhard\n\nrifsactz\ndtrlaspjefbicozn\nwfizahcvrqkts\nvmtfyhqacirszg\n\njgbdalcpw\nputak\ndzacrwop\ngopadq\n\nscotnlhavpyjqmfgzk\nygtocpjnzfvmlkqa\nqcjlytnkfozvmpag\n\niu\nbu\ndul\nu\nu\n\ngadyx\njti\n\nf\nf\n\nda\npxa\n\nmgbskecwd\nwgcktmse\nsgecmtkw\ncekbwsmdg\nsaegcfvkwm\n\njm\nmj\nmj\nkmj\nmj\n\nbdkzv\nftloezbkdvy\nzbvxdk\nbzwkdv\nvkdbszu\n\nbtkesqymhzuwcpd\ntcaiwjxsg\nwsct\ntinwcs\n\namqgrkjsv\njsgmqzakro\naksmqgjr\narkmgsqj\ngraqjmsk\n\nvwbjpyehxfrcguzlit\nefskqzadontm\n\nt\nt\nt\nt\nt\n\nmnos\njdvsnfomx\naosnm\n\nzoh\nznoh\nohf\nkdhto\n\nzb\nbzn\njzb\njzb\nzbj\n\njomtfxgs\nnkqytilrace\n\nmzkberyufodx\nujnpckbhxroz\nlkbxorzui\nuqozrcjbkx\nzorbxuik\n\nhklmwxyvtdcpgoq\nvjgpxqaohmdlwktc\nxftwhlpvkqgdmoc\nxqdpotmvhfylcwgk\n\nocu\ncou\ncou\n\nijanryulhzg\nujainhlszgr\nlagnhrizjk\nahnrbdgizjlv\n\nvdnce\ndcqne\ndnejc\nnectd\n\neifwmbdut\nmdftwiube\ntuinmwfdbe\nmfdwitbeu\n\nipsbgk\njsai\n\nsqtucpvhbimroydkfjxlaz\nazmdqcrefjyubkwhsotpv\n\nygczbjvlrnk\nlgjivzc\nclsgpvdzjqm\nohjvzlmcg\n\nsavmyfxg\nxeyfsmag\nqmsxgyfrw\nxvfkmgyahs\n\nynzsbet\nbsrtnzv\nbdjwzhamfnqk\nnzbciex\nnobzgvps\n\ngjmaqcdiebhupywzfltvko\nktqibcuvalsmnghefyprdoj\n\nmvqwdhflazokj\nokfqwvdmelhzaj\nzvjwacmuloqiskgtdyh\nflnpwzxvhqjdmroka\nqzmoalwkhpvjd\n\nn\nh\nth\nfsoxd\n\npeqynb\nqepbyw\nqeprby\nbpqayvel\nqyabpe\n\nsykhfvwmgnutbeadql\ngtkmuflbndvwhsyeaqc\ndjwftvybqumneskhgal\nskwtqbzrmhegulanydvfi\n\nfuz\nfuz\nuzf\nuzfx\nzuf\n\nyrpkxfnzbmgqwvsluoa\npsyulngqwrazvkfxemo\npmqwxayzobklrugnfevs\nxrgqnsivfpwazlkuoym\njsglfrdaqvomxypzwknu\n\narm\nrnhamv\ntlabjmx\n\nrxpzbehywfuts\nxruyvzwbmsef\nryebwfqgsuxz\nzsrxbeuwyf\n\nbufrwlvodngkmxitpha\nloufnmdtqrkabghxiwvep\nhdutjkmafzxnrgvowpbil\nkxuphaodvbirwfmtlgn\n\nhgdeptiafxsujklr\ndskupraelhxtfivgj\ntuegfxjshdkprlia\n\nejsbfhcvnx\nfrtecbvxnjszh\n\niouylrj\nuojlxyri\nfyuoikjlrm\n\nbteiydmrh\nedmairhwftb\n\niygeubcal\nbiycheplzagu\n\nxnpmz\nycnmzpbdq\nzmnpk\npnzm\npnzm\n\nwzlhmaoq\nwafiyomc\nptgawvoer\n\ntpynexdwkolrfhqj\nhlnprfxoytqwdjek\nqxwkortdnyfhljpe\nwnqkjyfxdlohpret\n\npsjucnhrbefvzyl\ndnwzqmauglcti\nzqudiclnk\n\nsg\nsg\ngs\n\nphbydkeljnzaow\najnkzbcige\neakbjrcqxnz\n\nsjcdoehzu\nceuoshdjz\ndjocseuzh\n\nnkxlgspidmhwzqeojv\nfnhwxuiktzmjogqvdl\n\ndoirbfxv\noxysdbufri\ndboixvf\nifndxob\nmoixzdfbj\n\ndtbmegpvux\nnlhcjayz\nonjfrsqkw\n\nlqpamhfudgjtv\nlgjudvhfqtpam\nvtaglfumdhqpj\n\nz\niz\nz\nz\n\ndewlyguxtivcqb\nxleqbcitgvduwy\nlbtwegqkcivdxshyu\n\nyrxqbsonfcui\noszafcntugd\n\nobke\nkbeo\nebok\nobek\neobk\n\nwtoxd\nodxwt\nodwtx\n\nkndxiqheltrpacwbu\nidekwaovchjpxrtbunql\nbuilrdxnpcehtjwsqa\niuabpznqrlhfdtemycxw\nebrxiuaqpclkdwgtnh\n\nitvghlycjnz\nhyjltiznvg\nwnjzmklhvgity\nbhyizgtjvnl\ngnjviylzth\n\njzp\nuki\nrevlhqgayn\nfsjt\nbiw\n\nyadxckevlw\nwlkcvydx\nxkdwvlyc\n\nxqsw\nqsxw\nsxwq\nqxws\nwsqxf\n\ndmqyrznsoifej\nwyge\ngktlabye\n\nrnyqsv\nnqsrvjy\n\nzuw\nz\n\nfawqurvtmopkc\nkcmquvwptfoa\nkomcuavqtwpf\nuaovkwpqfcmjt\nocmwvfupqakt\n\nztlsuyribvogcpme\nouvmrltbescizypg\ngmsvutbeoylricpz\nzmgticyleusobprv\n\npfhniyksrwcvduqogat\nknfgaviyqrcusodh\nrukvogciqfandsyh\nfkacsgyqdoivurhn\n\nq\ne\nm\n\ncbr\nrbc\nbrc\nrbc\nbrc\n\nzlps\nzpsl\nspzl\nzjlps\nzlsp\n\nzvi\nv\n\nskfw\nsw\n\ntuygxsjhiczeapmbvwkqn\ntenjiavpshbyckwmqzugx\ngtsqkmneacvbzdjophuixw\n\ntbl\nlsyzjmcg\n\nntofwi\ntnofi\nitjeofn\n\no\nl\nl\n\nqoaujcnksbpiwgtheryvfxmlz\nanvhyiscfoekqupglxrzdtmjb\nlxscnzkqofbyeuvtmrhgiapj\n\nrakhwzxtclnymgbsiej\nrcustiyeagmnxbzkhwl\nbnfrtwslzyhcexqkamig\n\ntbo\ntbevu\nbt\n\nzfkgeyjmuplqsrxdbwtvhconia\nbremfqgkdlvsuyxazwpntocjhi\njbimlwsznaktxhvrfoygcepuqd\njaedlpixsfomuhgwqrzctbyvkn\n\nbqskzjafrehwu\nakwsjufzebqh\n\neqfmkpjztwrxhugbyn\nghrbtmfuqypexjkwnz\nebptfnqxhryujwmkzg\njuzewkctxqlfmhpygbrn\ntbhrgmyfxqnkuzpwej\n\nafqpvgjxehwdo\njgzbeafwdophvx\nxkaesfvdhpjgmow\nzhpuveldxwgfqjao\nxjzadovrepfhgwy\n\nhzfwtimqxyl\nwfylhxtqzmi\nqtxfhzwlimy\nthimxwlfyqz\n\ngyikxanutzjvrhod\nxedlmbopwfcrtnyjsazq\n\nyhznowsvmiplc\nlyizcvohsnxmw\nnywacvmirfbzlsgh\nsczlmwynivh\n\nxbjzeyamohuftwirpl\nyqwgjurichlevfbz\n\ngrzilwbosadunexh\nzswunredgtaobkhxpl\n\nhpqsuokcydmwl\ninewxzrg\nzwvjb\nwg\nwatr\n\nhdkjnms\nbmdhjscnk\nxsijavqmoklpf\n\njelhuczo\nxpojuhlbqzrt\n\norkbs\ncbs\nmxdbij\nbr\n\nmkpna\nkapn\npnak\n\nrpdw\npwdr\n\nqc\nqc\ncq\ncq\nqch\n\numqepd\nceapd\nxqdpelh\npukedf\n\nvfkdrqcbumxoian\ncnwmukjvqrbodai\n\ntbeizdphysfxwrlaokuq\nywzaqsprukdtbheoxil\nrvkieodhtqsupywxcazl\nhsdiwzeqoryulpktax\naxoqulrigtnwehsdkzypm\n\ngvfkhzwtlm\nzrsmwnbuie\n\nzrxtwfnqod\nfvloabkyirwzmn\n\niltbsmy\ntliybms\nbylsitm\n\nk\ng\nvoh\npm\n\nyrdneovzfghxalmspuckt\ntqnikyerogxuhmfvpzla\n\nylckwbrtmsjv\ntkjlvcqrfea\n\ntwjumlapesnz\npmeoazub\npmabuoez\n\nxmgyd\nxdymg\ndxygm\ndgymx\ngxudcvmy\n\nv\nvw\npvd\nvu\nv\n\nqwmfrncxb\ndrjqglsakpwtbi",jn='--- Day 6: Custom Customs ---\nAs your flight approaches the regional airport where you\'ll switch to a much larger plane, customs declaration forms are distributed to the passengers.\n\nThe form asks a series of 26 yes-or-no questions marked a through z. All you need to do is identify the questions for which anyone in your group answers "yes". \nSince your group is just you, this doesn\'t take very long.\n\nHowever, the person sitting next to you seems to be experiencing a language barrier and asks if you can help. For each of the people in their group, \nyou write down the questions for which they answer "yes", one per line. For example:\n\nabcx\nabcy\nabcz\nIn this group, there are 6 questions to which anyone answered "yes": a, b, c, x, y, and z. (Duplicate answers to the same question don\'t count extra; each question counts at most once.)\n\nAnother group asks for your help, then another, and eventually you\'ve collected answers from every group on the plane (your puzzle input). \nEach group\'s answers are separated by a blank line, and within each group, each person\'s answers are on a single line. For example:\n\nabc\n\na\nb\nc\n\nab\nac\n\na\na\na\na\n\nb\nThis list represents answers from five groups:\n\nThe first group contains one person who answered "yes" to 3 questions: a, b, and c.\nThe second group contains three people; combined, they answered "yes" to 3 questions: a, b, and c.\nThe third group contains two people; combined, they answered "yes" to 3 questions: a, b, and c.\nThe fourth group contains four people; combined, they answered "yes" to only 1 question, a.\nThe last group contains one person who answered "yes" to only 1 question, b.\nIn this example, the sum of these counts is 3 + 3 + 3 + 1 + 1 = 11.\n\nFor each group, count the number of questions to which anyone answered "yes". What is the sum of those counts?\n\n--- Part Two ---\nAs you finish the last group\'s customs declaration, you notice that you misread one word in the instructions:\n\nYou don\'t need to identify the questions to which anyone answered "yes"; you need to identify the questions to which everyone answered "yes"!\n\nUsing the same example as above:\n\nabc\n\na\nb\nc\n\nab\nac\n\na\na\na\na\n\nb\nThis list represents answers from five groups:\n\nIn the first group, everyone (all 1 person) answered "yes" to 3 questions: a, b, and c.\nIn the second group, there is no question to which everyone answered "yes".\nIn the third group, everyone answered yes to only 1 question, a. Since some people did not answer "yes" to b or c, they don\'t count.\nIn the fourth group, everyone answered yes to only 1 question, a.\nIn the fifth group, everyone (all 1 person) answered "yes" to 1 question, b.\nIn this example, the sum of these counts is 3 + 0 + 1 + 1 + 1 = 6.\n\nFor each group, count the number of questions to which everyone answered "yes". What is the sum of those counts?\n\n',xn="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n    inputData = inputData.split('\\n\\n')\n\n    // --- Part One ---\n    var groupAnswers = []\n    \n    inputData.forEach(element => {\n        element = element.split('\\n')\n        var subElements = []\n\n        element.forEach(subElement => {\n            subElements.push(subElement)\n        });\n        \n        groupAnswers.push(subElements)\n    });\n\n    var PartOneAnswer = 0;\n    for (let i = 0; i < groupAnswers.length; i++) {\n        if (groupAnswers.length == 0) {\n            console.log('Found empty')\n        }\n\n        var allGroupAnswers = new Array(0)\n        groupAnswers[i].map(x => x.split('').map(y => allGroupAnswers.push(y)))\n\n        var groupSingletonAnswers = new Array(0)\n        allGroupAnswers.map(x => {\n            if (!groupSingletonAnswers.includes(x)) {\n                groupSingletonAnswers.push(x)\n            }\n        })\n        \n        PartOneAnswer += groupSingletonAnswers.length\n    }\n    \n    this.SetResult(PartOneAnswer)\n\n    // --- Part Two ---\n    var PartTwoAnswer = 0\n\n    groupAnswers.map(x => {\n        PartTwoAnswer += this.FindDuplicantsFromArray(x).length\n    })\n\n    this.SetResult(PartTwoAnswer)\n\n},\nFindDuplicantsFromArray(arrays) {\n    var foundItems = new Array(0)\n\n    if(arrays.length == 0)\n        return foundItems\n\n    arrays[0].split('').map(x => {\n        var Found = false;\n        \n        // Starting from 0 counts 1 -length arrays aswell\n        for (let i = 0; i < arrays.length; i++) {\n            Found = arrays[i].includes(x)\n\n            if (!Found)\n                break;\n        }\n\n        if (Found)\n            foundItems.push(x)\n    })\n\n    return foundItems;\n}",zn={components:{"show-task":E},data:function(){return{CurrentInputData:Rn,CurrentTaskData:jn,CurrentSolutionData:xn,InputData:Rn,TaskResult:[]}},mounted:function(){this.Solve(Rn)},methods:{Solve:function(n){var a=this;n=n.split("\n\n");var L=[];n.forEach((function(n){n=n.split("\n");var a=[];n.forEach((function(n){a.push(n)})),L.push(a)}));for(var t=0,e=0;e<L.length;e++){0==L.length&&console.log("Found empty");var r=new Array(0);L[e].map((function(n){return n.split("").map((function(n){return r.push(n)}))}));var i=new Array(0);r.map((function(n){i.includes(n)||i.push(n)})),t+=i.length}this.SetResult(t);var s=0;L.map((function(n){s+=a.FindDuplicantsFromArray(n).length})),this.SetResult(s)},FindDuplicantsFromArray:function(n){var a=new Array(0);return 0==n.length||n[0].split("").map((function(L){for(var t=!1,e=0;e<n.length;e++)if(t=n[e].includes(L),!t)break;t&&a.push(L)})),a},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},qn=zn,Dn=Object(c["a"])(qn,wn,kn,!1,null,null,null),Sn=Dn.exports,Tn=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},In=[],En=(L("c975"),"shiny purple bags contain 2 pale blue bags, 1 wavy fuchsia bag, 5 pale salmon bags.\nbright gray bags contain 4 dotted coral bags.\nclear chartreuse bags contain 3 dark magenta bags, 3 dull gray bags, 4 dark silver bags.\nposh maroon bags contain 5 bright brown bags, 3 posh brown bags, 4 clear bronze bags.\nwavy plum bags contain 2 dull turquoise bags, 2 dotted yellow bags, 2 drab silver bags, 5 wavy violet bags.\nbright plum bags contain 5 clear silver bags, 5 striped coral bags.\nlight coral bags contain 3 striped bronze bags, 1 bright turquoise bag.\nmuted coral bags contain 1 dim blue bag.\nclear tan bags contain 2 light turquoise bags, 2 faded fuchsia bags, 5 posh orange bags.\nlight maroon bags contain 4 dotted purple bags.\ndull orange bags contain 4 dull gray bags.\nvibrant gold bags contain 2 striped coral bags, 3 light beige bags.\nlight fuchsia bags contain 2 striped cyan bags, 1 light magenta bag, 2 dim plum bags.\nbright teal bags contain 2 drab fuchsia bags, 5 light silver bags, 1 pale orange bag.\nclear brown bags contain 3 dull yellow bags, 3 mirrored violet bags, 1 plaid tan bag.\nposh brown bags contain 2 posh purple bags, 2 pale indigo bags, 1 wavy green bag.\ndotted violet bags contain 1 shiny violet bag, 3 striped crimson bags.\ndark tomato bags contain 4 pale indigo bags, 4 dull white bags, 5 shiny gray bags, 3 light blue bags.\ndrab red bags contain 1 dotted beige bag, 1 shiny white bag, 5 bright teal bags, 4 drab indigo bags.\ndotted red bags contain 4 vibrant fuchsia bags, 5 clear chartreuse bags.\nclear magenta bags contain 2 striped plum bags, 3 wavy silver bags.\nvibrant turquoise bags contain 1 bright purple bag.\nwavy beige bags contain 2 pale orange bags, 1 dull olive bag.\nmirrored crimson bags contain 2 wavy gray bags, 1 bright gray bag, 3 posh green bags, 5 wavy magenta bags.\ndark green bags contain 1 dotted teal bag, 5 light lime bags, 2 mirrored tan bags.\nlight salmon bags contain 1 dull violet bag, 2 muted chartreuse bags, 4 clear black bags, 3 dark plum bags.\nmirrored indigo bags contain 4 clear beige bags, 5 posh purple bags, 5 pale tan bags.\ndim turquoise bags contain 1 muted cyan bag.\nstriped tomato bags contain 5 shiny olive bags, 2 dark lime bags, 2 wavy lavender bags, 3 striped tan bags.\nstriped white bags contain 3 dark violet bags, 2 posh green bags, 2 plaid white bags.\ndrab lavender bags contain 2 light plum bags, 3 vibrant purple bags, 4 light turquoise bags.\nmuted olive bags contain 4 clear gold bags, 1 dim plum bag, 5 vibrant silver bags.\nposh lime bags contain 4 vibrant gray bags, 1 striped magenta bag, 5 drab tomato bags, 2 mirrored tomato bags.\nclear aqua bags contain 4 posh green bags, 2 dim teal bags, 1 faded teal bag, 3 bright aqua bags.\nvibrant aqua bags contain 4 striped plum bags, 3 dull gray bags, 1 muted tomato bag.\nwavy gold bags contain 1 dotted violet bag, 2 dim turquoise bags, 3 light orange bags.\npale aqua bags contain 3 muted lavender bags.\nmuted plum bags contain 1 dim silver bag.\ndull olive bags contain 3 striped fuchsia bags, 1 vibrant aqua bag, 2 mirrored black bags, 1 shiny gray bag.\nfaded black bags contain 4 light purple bags.\nposh fuchsia bags contain 4 striped black bags, 1 dark silver bag, 4 dim beige bags.\nposh cyan bags contain 1 clear orange bag, 4 dull plum bags, 5 clear chartreuse bags, 5 pale silver bags.\nlight tomato bags contain 2 dotted orange bags, 2 dotted maroon bags, 2 dim silver bags.\nclear orange bags contain 4 pale silver bags.\ndim tan bags contain 3 posh orange bags.\nstriped indigo bags contain 4 dull plum bags, 1 clear magenta bag.\nshiny lime bags contain 2 dull yellow bags.\nlight turquoise bags contain 3 striped lime bags, 1 striped plum bag, 5 dim salmon bags, 5 wavy maroon bags.\nshiny aqua bags contain 5 dim cyan bags, 1 bright tomato bag.\nshiny silver bags contain 3 drab lime bags, 4 drab green bags, 2 bright beige bags, 1 muted gray bag.\nplaid aqua bags contain 1 dull plum bag, 5 posh orange bags, 1 dim indigo bag.\nmirrored silver bags contain 2 dark white bags, 2 vibrant yellow bags, 5 plaid crimson bags, 1 vibrant orange bag.\ndark black bags contain 4 wavy salmon bags.\ndim tomato bags contain 1 clear brown bag, 2 dark violet bags.\nwavy teal bags contain 4 pale coral bags, 4 vibrant lime bags.\npale brown bags contain 2 drab salmon bags, 2 light silver bags, 2 plaid orange bags, 1 dull plum bag.\nwavy silver bags contain 5 clear teal bags.\nstriped plum bags contain 2 light blue bags, 4 dull gray bags, 2 wavy lavender bags.\nshiny fuchsia bags contain 2 muted plum bags, 3 bright bronze bags, 5 striped tan bags.\nmuted turquoise bags contain 2 dark lime bags, 5 clear orange bags, 4 clear chartreuse bags.\nposh black bags contain 2 posh tomato bags, 5 posh red bags.\nmuted cyan bags contain 1 drab bronze bag, 4 pale silver bags, 4 dotted brown bags.\ndark violet bags contain 5 wavy gray bags, 5 dark white bags, 2 mirrored teal bags.\ndrab orange bags contain 3 vibrant purple bags, 2 clear indigo bags, 4 clear gold bags, 2 striped tomato bags.\nlight aqua bags contain 5 light plum bags, 5 clear gold bags.\nplaid green bags contain 4 dim teal bags, 5 striped lavender bags, 1 mirrored yellow bag, 3 bright beige bags.\nmirrored chartreuse bags contain 4 faded crimson bags, 3 dim salmon bags.\nfaded turquoise bags contain 1 dim tomato bag, 3 clear violet bags, 3 bright tan bags, 4 posh bronze bags.\npale crimson bags contain 1 drab tomato bag, 5 striped purple bags, 2 wavy brown bags, 3 dotted white bags.\nposh aqua bags contain 5 mirrored plum bags.\nstriped fuchsia bags contain 1 mirrored yellow bag, 5 faded black bags.\nclear green bags contain 4 drab teal bags, 1 shiny orange bag, 5 muted salmon bags, 4 dark magenta bags.\nbright white bags contain 2 shiny green bags, 2 muted turquoise bags, 5 striped plum bags, 5 vibrant aqua bags.\ndark bronze bags contain 4 shiny purple bags.\npale lime bags contain 4 dotted aqua bags, 5 wavy silver bags.\nposh turquoise bags contain 2 muted beige bags, 5 light coral bags, 2 posh purple bags, 5 striped gold bags.\ndrab indigo bags contain 2 shiny magenta bags, 2 vibrant yellow bags.\nstriped violet bags contain 4 muted magenta bags, 5 bright green bags, 1 light lavender bag.\ndull black bags contain 5 dull orange bags, 5 light magenta bags, 1 dull brown bag.\nclear cyan bags contain 5 dull fuchsia bags.\ndim lavender bags contain 4 clear teal bags, 5 striped magenta bags, 5 mirrored violet bags, 3 dotted magenta bags.\nmirrored teal bags contain 1 vibrant yellow bag, 1 dim plum bag, 1 drab fuchsia bag, 1 shiny yellow bag.\ndotted yellow bags contain 4 clear coral bags, 3 pale chartreuse bags.\nlight plum bags contain 5 light blue bags, 1 wavy brown bag.\nfaded crimson bags contain 2 posh aqua bags.\ndull crimson bags contain 4 muted lavender bags, 1 dark lime bag, 3 clear indigo bags, 5 wavy teal bags.\npale olive bags contain 1 plaid beige bag, 2 dark cyan bags, 3 mirrored blue bags, 5 dull lime bags.\ndull silver bags contain 1 faded purple bag.\nfaded blue bags contain 4 dull olive bags, 1 wavy maroon bag, 1 muted turquoise bag, 5 mirrored violet bags.\nshiny beige bags contain 1 wavy brown bag, 5 muted magenta bags, 1 clear yellow bag, 3 muted salmon bags.\nbright beige bags contain 4 posh cyan bags.\ndim indigo bags contain 1 light plum bag, 1 drab olive bag.\nwavy violet bags contain 3 light lavender bags, 3 pale salmon bags, 2 pale blue bags, 5 vibrant white bags.\nfaded red bags contain 1 clear yellow bag, 4 dotted maroon bags, 4 wavy aqua bags, 4 bright teal bags.\nmirrored red bags contain 4 bright maroon bags.\ndrab maroon bags contain 2 dim beige bags, 5 drab tomato bags, 2 clear coral bags.\nbright maroon bags contain 2 dull gray bags.\nshiny lavender bags contain 1 dark orange bag.\nmirrored beige bags contain 5 pale white bags, 1 posh plum bag.\nmuted black bags contain 3 light lavender bags, 1 striped tomato bag, 2 posh green bags.\nvibrant coral bags contain 4 shiny red bags.\nmuted bronze bags contain 2 dotted turquoise bags.\ndrab blue bags contain 3 mirrored purple bags, 4 clear bronze bags.\nshiny salmon bags contain 4 dim beige bags, 2 faded plum bags.\ndull tomato bags contain 3 dark chartreuse bags, 5 muted chartreuse bags, 3 mirrored purple bags.\nvibrant plum bags contain 1 faded lime bag, 3 mirrored gold bags, 4 mirrored aqua bags.\ndark blue bags contain 3 dull salmon bags, 1 dim black bag, 1 wavy gray bag, 3 muted aqua bags.\nposh beige bags contain 4 light lime bags, 5 pale crimson bags, 4 clear lavender bags, 2 dotted chartreuse bags.\ndark indigo bags contain 5 wavy salmon bags.\ndrab turquoise bags contain 5 muted red bags.\ndrab silver bags contain 3 plaid white bags, 3 clear brown bags.\nclear indigo bags contain 4 wavy gray bags, 5 dim plum bags.\ndotted cyan bags contain 4 striped lime bags, 2 bright tomato bags.\nfaded gray bags contain 1 dim maroon bag, 4 muted brown bags, 2 clear plum bags, 1 plaid olive bag.\ndotted turquoise bags contain 1 mirrored purple bag, 2 striped salmon bags.\npale tan bags contain 4 pale orange bags.\nclear tomato bags contain 4 clear turquoise bags, 1 bright tan bag, 2 shiny coral bags, 3 posh crimson bags.\ndark orange bags contain 4 vibrant yellow bags, 5 vibrant lavender bags.\nstriped cyan bags contain 3 vibrant yellow bags, 5 dull tomato bags, 4 dotted black bags, 5 striped plum bags.\ndrab black bags contain 3 muted salmon bags, 5 faded cyan bags.\nmirrored green bags contain 2 dark brown bags, 2 shiny gold bags, 1 clear plum bag, 5 faded teal bags.\ndotted orange bags contain 5 wavy brown bags.\nvibrant magenta bags contain 5 muted tomato bags.\nlight indigo bags contain 4 light olive bags, 1 dull maroon bag.\ndotted black bags contain 1 posh orange bag, 4 pale silver bags, 4 clear plum bags, 1 dotted white bag.\nvibrant lime bags contain 5 light teal bags, 2 wavy lime bags.\nfaded yellow bags contain 1 faded black bag, 3 wavy fuchsia bags, 4 light olive bags, 3 wavy indigo bags.\ndim chartreuse bags contain 2 bright gray bags.\nmirrored lime bags contain 1 bright teal bag, 5 mirrored teal bags, 3 muted lavender bags.\nmuted brown bags contain 4 plaid aqua bags.\nshiny red bags contain 1 clear orange bag.\ndrab magenta bags contain 2 light lavender bags, 4 shiny chartreuse bags, 3 wavy violet bags.\nvibrant tomato bags contain 5 pale violet bags, 3 clear purple bags, 2 light red bags.\nmirrored plum bags contain 1 dim white bag, 1 striped lavender bag.\ndark beige bags contain 3 wavy gray bags.\ndim plum bags contain 5 mirrored yellow bags, 4 posh cyan bags.\nfaded purple bags contain 3 posh purple bags, 5 dull bronze bags, 1 striped plum bag.\nvibrant olive bags contain 1 muted chartreuse bag, 2 striped blue bags, 1 shiny maroon bag.\ndull cyan bags contain 2 faded violet bags, 2 pale olive bags, 3 dull yellow bags, 3 drab olive bags.\nwavy magenta bags contain 5 dull bronze bags, 1 vibrant cyan bag, 1 clear plum bag.\nplaid lime bags contain 1 dull maroon bag, 1 pale teal bag, 3 pale orange bags, 1 shiny teal bag.\nvibrant maroon bags contain 5 shiny gray bags, 3 pale salmon bags.\nfaded tomato bags contain 2 pale orange bags, 5 dim tomato bags, 5 plaid lavender bags, 5 pale salmon bags.\nwavy lime bags contain 2 faded salmon bags, 3 muted olive bags, 2 dotted coral bags.\nshiny gold bags contain 5 drab olive bags, 4 pale green bags.\nmirrored black bags contain 1 faded fuchsia bag, 5 dull yellow bags.\nposh olive bags contain 5 dull plum bags, 2 wavy aqua bags, 5 posh brown bags.\nposh red bags contain 1 dim salmon bag, 4 bright gray bags.\npale purple bags contain 1 drab indigo bag, 3 mirrored silver bags.\ndotted coral bags contain 4 dim indigo bags, 5 shiny yellow bags, 3 dim plum bags, 1 light silver bag.\ndim beige bags contain 1 dim indigo bag.\ndark coral bags contain 4 bright lime bags, 1 muted white bag, 2 shiny olive bags.\nstriped silver bags contain 3 light white bags.\ndrab bronze bags contain 4 striped tomato bags, 1 dim coral bag, 2 clear brown bags.\nvibrant cyan bags contain 1 muted green bag, 4 vibrant silver bags, 4 dotted white bags, 4 muted magenta bags.\ndrab gray bags contain 3 dim indigo bags, 2 pale tomato bags, 1 dark fuchsia bag.\ndull chartreuse bags contain 5 dark brown bags, 5 dull blue bags, 3 bright cyan bags, 2 plaid indigo bags.\ndim crimson bags contain 3 wavy turquoise bags.\nposh crimson bags contain 1 bright silver bag, 4 dark purple bags, 1 bright black bag, 5 dotted salmon bags.\nplaid turquoise bags contain 1 striped gold bag.\nshiny tomato bags contain 4 vibrant gold bags, 5 vibrant teal bags, 2 vibrant yellow bags, 1 faded silver bag.\nmirrored white bags contain 3 plaid crimson bags.\nvibrant tan bags contain 1 posh red bag, 1 muted purple bag, 4 clear teal bags.\ndark lavender bags contain 3 dull yellow bags, 5 clear yellow bags, 5 clear plum bags, 2 posh orange bags.\ndark purple bags contain 2 light magenta bags, 1 clear violet bag.\nmuted indigo bags contain 5 mirrored coral bags, 1 posh purple bag.\nfaded aqua bags contain 5 faded fuchsia bags, 2 dark bronze bags, 4 vibrant white bags.\ndark silver bags contain no other bags.\nbright black bags contain 4 dotted fuchsia bags, 1 light silver bag, 4 wavy white bags.\npale teal bags contain 4 plaid lavender bags, 3 dim red bags, 2 vibrant yellow bags, 2 clear bronze bags.\ndrab lime bags contain 3 dull teal bags.\nshiny yellow bags contain 1 striped plum bag, 5 dull plum bags, 5 dark magenta bags, 1 vibrant silver bag.\ndull salmon bags contain 2 dotted magenta bags, 2 vibrant fuchsia bags, 1 wavy beige bag.\nmuted gray bags contain 1 drab indigo bag, 2 vibrant brown bags.\nclear turquoise bags contain 1 drab silver bag.\ndrab white bags contain 1 posh brown bag, 2 muted green bags, 2 vibrant yellow bags, 2 dotted white bags.\nlight silver bags contain 4 dark silver bags, 5 faded olive bags.\nplaid coral bags contain 5 vibrant tomato bags, 5 striped tan bags.\nlight gray bags contain 4 dark blue bags, 5 dull violet bags, 3 striped lime bags, 3 wavy magenta bags.\nstriped maroon bags contain 2 light coral bags.\nstriped green bags contain 1 shiny teal bag.\nmirrored cyan bags contain 2 vibrant white bags.\nmirrored fuchsia bags contain 2 drab blue bags, 2 wavy beige bags.\nclear yellow bags contain no other bags.\nfaded silver bags contain 1 muted magenta bag, 1 mirrored black bag, 5 light purple bags.\ndrab chartreuse bags contain 4 muted red bags, 2 plaid lavender bags.\nmuted beige bags contain 4 dark tomato bags, 2 wavy brown bags, 1 wavy beige bag.\npale maroon bags contain 3 muted tomato bags, 1 shiny maroon bag.\npale turquoise bags contain 4 muted beige bags, 2 pale beige bags.\nclear olive bags contain 1 clear yellow bag, 2 clear chartreuse bags.\nmuted tan bags contain 5 dotted bronze bags, 1 light green bag, 2 pale orange bags, 1 plaid tan bag.\nvibrant fuchsia bags contain 2 dull bronze bags, 4 plaid lavender bags, 3 clear bronze bags, 3 dull blue bags.\nstriped magenta bags contain 1 mirrored violet bag, 5 plaid aqua bags, 5 light plum bags.\ndim gray bags contain 3 mirrored blue bags, 2 vibrant crimson bags, 1 dull gold bag.\nmuted purple bags contain 3 plaid salmon bags.\ndrab plum bags contain 4 dark tomato bags, 1 muted white bag, 2 plaid magenta bags, 5 mirrored blue bags.\nmuted white bags contain 3 light silver bags, 2 striped magenta bags, 4 shiny indigo bags.\nshiny cyan bags contain 4 vibrant fuchsia bags, 1 striped cyan bag, 5 pale orange bags.\npale tomato bags contain 4 bright maroon bags, 4 faded chartreuse bags, 3 shiny black bags, 2 muted green bags.\nwavy gray bags contain 4 vibrant silver bags.\nwavy lavender bags contain 1 dull bronze bag, 5 dark silver bags, 5 light blue bags.\nplaid chartreuse bags contain 4 dotted tan bags, 1 clear silver bag, 2 dotted purple bags, 3 drab green bags.\nfaded olive bags contain no other bags.\ndrab aqua bags contain 1 vibrant indigo bag, 1 mirrored maroon bag, 4 pale silver bags.\ndotted chartreuse bags contain 1 dotted aqua bag, 3 dark red bags.\nmuted crimson bags contain 3 dull gold bags, 1 light cyan bag.\nlight orange bags contain 2 drab fuchsia bags, 2 faded black bags, 5 faded green bags.\ndrab teal bags contain 1 clear tan bag, 5 mirrored green bags.\nlight chartreuse bags contain 5 bright tomato bags, 4 clear coral bags.\nmirrored blue bags contain 3 dark violet bags, 2 dim silver bags, 2 vibrant white bags, 2 bright gray bags.\nwavy salmon bags contain 2 muted fuchsia bags, 5 vibrant lavender bags, 1 clear teal bag.\npale black bags contain 3 dull fuchsia bags, 5 light indigo bags, 2 muted aqua bags.\nwavy white bags contain 1 wavy gray bag.\ndotted indigo bags contain 3 clear bronze bags, 1 pale green bag, 1 faded fuchsia bag.\nwavy tomato bags contain 2 light black bags, 2 pale tan bags.\nclear gold bags contain 4 drab fuchsia bags.\nvibrant green bags contain 4 clear gray bags, 4 vibrant lavender bags, 4 pale beige bags.\nlight crimson bags contain 4 light turquoise bags.\nposh silver bags contain 4 pale silver bags.\ndotted green bags contain 3 pale turquoise bags, 1 wavy coral bag.\nclear coral bags contain 1 posh purple bag.\nclear fuchsia bags contain 1 dull teal bag.\nvibrant blue bags contain 5 faded olive bags, 1 dotted olive bag.\ndull bronze bags contain no other bags.\nplaid plum bags contain 5 light teal bags, 5 bright fuchsia bags, 4 dark cyan bags, 2 striped olive bags.\nmuted blue bags contain 2 bright green bags, 4 clear teal bags, 5 dotted blue bags, 3 shiny brown bags.\ndotted salmon bags contain 3 dull olive bags, 3 vibrant gray bags, 5 mirrored purple bags.\npale red bags contain 1 posh bronze bag, 1 posh plum bag.\ndotted beige bags contain 5 pale violet bags, 5 striped bronze bags.\ndark magenta bags contain no other bags.\nclear red bags contain 2 faded black bags, 3 striped lavender bags.\ndim purple bags contain 2 shiny orange bags.\nshiny teal bags contain 5 plaid magenta bags, 2 faded violet bags.\ndull tan bags contain 5 dark lime bags, 1 vibrant silver bag, 4 faded brown bags, 3 bright brown bags.\nbright yellow bags contain 2 light green bags, 4 muted magenta bags, 5 faded indigo bags, 3 bright beige bags.\nclear plum bags contain 5 light purple bags.\npale beige bags contain 5 plaid tan bags, 5 striped plum bags, 3 muted brown bags.\nvibrant beige bags contain 5 wavy violet bags, 5 faded maroon bags.\nshiny plum bags contain 4 pale blue bags, 5 dull brown bags, 5 mirrored black bags.\nplaid gold bags contain 3 muted magenta bags, 2 clear yellow bags, 3 light blue bags, 1 posh orange bag.\ndull lavender bags contain 2 bright aqua bags, 2 plaid plum bags, 3 dark tomato bags.\ndark salmon bags contain 3 plaid magenta bags, 4 bright turquoise bags.\nposh indigo bags contain 4 vibrant lavender bags, 2 clear bronze bags.\ndotted tan bags contain 5 dull gray bags, 4 wavy green bags, 4 vibrant bronze bags.\nclear black bags contain 1 shiny crimson bag, 3 shiny beige bags, 4 dotted red bags.\nvibrant indigo bags contain 2 clear beige bags, 2 dim salmon bags.\ndark brown bags contain 3 dim silver bags.\ndim white bags contain 1 clear gold bag.\ndrab fuchsia bags contain 5 dull bronze bags, 1 clear chartreuse bag.\nshiny orange bags contain 5 plaid aqua bags.\nstriped gray bags contain 2 plaid orange bags.\nbright blue bags contain 5 shiny crimson bags, 4 dim coral bags, 2 posh aqua bags, 2 bright orange bags.\nstriped brown bags contain 5 bright teal bags, 5 striped blue bags, 3 plaid brown bags, 3 drab violet bags.\ndim magenta bags contain 1 dark white bag.\nposh gray bags contain 2 mirrored silver bags, 4 light cyan bags, 1 posh lime bag.\nmirrored bronze bags contain 3 plaid brown bags, 4 wavy lavender bags, 4 vibrant coral bags, 5 striped bronze bags.\nlight olive bags contain 3 pale indigo bags.\nclear beige bags contain 4 striped plum bags, 1 striped fuchsia bag.\nmirrored coral bags contain 5 posh maroon bags, 3 dim yellow bags.\nwavy tan bags contain 4 dim yellow bags, 3 plaid beige bags.\nvibrant brown bags contain 2 dull olive bags, 5 light blue bags, 3 light purple bags.\nstriped blue bags contain 3 clear gold bags, 2 dull gray bags.\nwavy turquoise bags contain 2 vibrant aqua bags, 5 clear purple bags, 5 muted blue bags, 1 muted black bag.\nplaid teal bags contain 2 striped magenta bags.\ndim blue bags contain 3 wavy aqua bags, 3 plaid salmon bags.\npale chartreuse bags contain 1 faded coral bag.\ndark tan bags contain 1 dim olive bag, 5 pale violet bags.\nwavy olive bags contain 3 light tomato bags, 4 clear salmon bags.\ndrab beige bags contain 5 faded tomato bags, 3 dotted indigo bags, 1 posh purple bag.\nvibrant salmon bags contain 5 bright green bags, 2 shiny violet bags, 1 dark fuchsia bag.\ndull gold bags contain 4 pale maroon bags.\npale gold bags contain 4 dull salmon bags.\nclear gray bags contain 1 clear chartreuse bag.\nclear purple bags contain 3 clear coral bags, 3 drab lavender bags, 3 clear silver bags.\nbright magenta bags contain 4 posh coral bags, 2 striped salmon bags, 5 bright fuchsia bags.\nfaded lavender bags contain 3 drab olive bags, 5 clear plum bags, 5 light purple bags, 1 plaid gold bag.\ndark white bags contain 1 clear gold bag.\nbright gold bags contain 2 dotted black bags, 1 dotted indigo bag.\ndark gold bags contain 1 dotted fuchsia bag.\nplaid black bags contain 2 dotted lavender bags, 1 dim indigo bag, 1 wavy aqua bag, 1 pale white bag.\nmuted silver bags contain 3 posh crimson bags.\nbright red bags contain 3 shiny indigo bags, 1 clear yellow bag.\nmirrored orange bags contain 1 dull black bag, 1 faded gold bag, 5 muted yellow bags.\nbright chartreuse bags contain 2 drab gray bags, 4 dull green bags, 1 muted plum bag, 3 mirrored turquoise bags.\nplaid tan bags contain 4 drab fuchsia bags.\nmirrored tan bags contain 5 striped salmon bags, 5 drab crimson bags.\nshiny turquoise bags contain 2 dark indigo bags, 1 dotted crimson bag, 1 pale tomato bag.\npale magenta bags contain 3 light yellow bags, 5 bright turquoise bags, 5 striped turquoise bags, 3 dull red bags.\nmuted maroon bags contain 2 plaid orange bags.\nmirrored turquoise bags contain 3 drab gray bags.\nclear white bags contain 5 muted turquoise bags.\nstriped red bags contain 2 muted turquoise bags, 1 wavy cyan bag, 1 faded chartreuse bag, 2 mirrored beige bags.\nmuted yellow bags contain 4 dim beige bags, 2 muted magenta bags, 3 mirrored aqua bags, 5 striped brown bags.\ndotted brown bags contain 3 bright brown bags, 1 posh purple bag.\nposh gold bags contain 5 dotted indigo bags, 4 dull chartreuse bags.\nshiny magenta bags contain 5 light red bags, 1 dark lime bag.\nplaid red bags contain 3 dim maroon bags, 5 posh magenta bags, 1 drab coral bag.\nmirrored yellow bags contain 2 pale silver bags, 3 dim salmon bags, 4 bright teal bags, 2 pale green bags.\nclear lavender bags contain 1 pale blue bag.\nbright lime bags contain 2 clear orange bags.\nwavy red bags contain 2 dull teal bags, 3 striped fuchsia bags, 1 dull turquoise bag.\nstriped tan bags contain 5 light black bags, 4 posh cyan bags.\nlight blue bags contain no other bags.\nmuted lavender bags contain 1 muted tomato bag, 3 dim tomato bags, 5 plaid brown bags, 3 muted olive bags.\nvibrant purple bags contain 2 muted tomato bags, 4 vibrant silver bags, 3 drab olive bags, 5 dull gray bags.\nplaid indigo bags contain 3 drab silver bags, 4 wavy brown bags, 5 dotted gray bags, 3 dim silver bags.\nmirrored olive bags contain 3 dark tan bags.\nwavy cyan bags contain 4 drab gold bags, 5 clear teal bags.\npale indigo bags contain 2 dull gray bags.\npale violet bags contain 4 dull orange bags.\ndim orange bags contain 3 wavy orange bags.\npale plum bags contain 1 dim salmon bag, 1 posh cyan bag, 2 vibrant fuchsia bags.\nbright turquoise bags contain 4 wavy fuchsia bags, 3 faded crimson bags, 2 striped lime bags.\ndim cyan bags contain 4 striped plum bags, 1 shiny cyan bag, 3 dotted gold bags.\ndim fuchsia bags contain 5 shiny cyan bags.\nlight tan bags contain 2 shiny blue bags, 3 clear beige bags.\nfaded green bags contain 1 bright teal bag, 3 faded fuchsia bags, 5 light white bags.\nplaid violet bags contain 4 muted purple bags, 4 wavy white bags.\nwavy chartreuse bags contain 2 vibrant aqua bags, 2 mirrored black bags, 2 striped coral bags, 3 mirrored lime bags.\ndull white bags contain 3 light plum bags, 3 vibrant purple bags, 2 vibrant aqua bags, 1 bright teal bag.\ndark teal bags contain 2 plaid aqua bags, 2 bright blue bags, 5 dotted coral bags.\nplaid maroon bags contain 5 shiny green bags, 4 clear red bags.\ndull purple bags contain 2 dotted brown bags, 3 muted tomato bags, 5 vibrant green bags, 4 pale plum bags.\nstriped aqua bags contain 1 dark tan bag, 2 dull turquoise bags, 4 muted magenta bags.\nshiny chartreuse bags contain 2 muted bronze bags, 1 light white bag, 5 light turquoise bags.\nfaded white bags contain 3 muted red bags.\nstriped turquoise bags contain 2 posh lavender bags.\nbright lavender bags contain 2 wavy fuchsia bags, 4 faded purple bags.\nlight teal bags contain 4 mirrored yellow bags, 3 dull orange bags, 3 drab green bags.\nmuted fuchsia bags contain 3 clear gold bags.\nfaded bronze bags contain 4 muted green bags.\nstriped teal bags contain 4 muted fuchsia bags, 3 bright aqua bags.\nplaid gray bags contain 5 dark lavender bags, 2 bright crimson bags, 3 shiny salmon bags, 5 wavy cyan bags.\ndark red bags contain 2 striped salmon bags.\nstriped purple bags contain 3 shiny crimson bags.\npale blue bags contain 1 drab tan bag, 3 dark chartreuse bags, 2 mirrored gold bags, 3 muted turquoise bags.\nplaid bronze bags contain 5 dark olive bags, 5 pale blue bags, 1 posh red bag.\nmuted chartreuse bags contain 1 posh orange bag, 5 light purple bags, 3 drab olive bags.\nmuted teal bags contain 1 faded olive bag.\nplaid cyan bags contain 4 clear brown bags, 4 shiny yellow bags.\ndull brown bags contain 3 plaid tan bags, 5 muted brown bags, 4 dull white bags, 4 pale orange bags.\nwavy orange bags contain 2 striped gold bags, 5 drab crimson bags, 5 muted chartreuse bags, 1 striped coral bag.\npale gray bags contain 3 vibrant gold bags.\nclear crimson bags contain 1 wavy turquoise bag, 5 drab white bags, 3 wavy purple bags.\nwavy brown bags contain 5 drab fuchsia bags, 1 dull plum bag.\ndull gray bags contain 4 clear yellow bags, 3 vibrant silver bags.\nmirrored aqua bags contain 2 plaid crimson bags, 5 plaid white bags.\nvibrant bronze bags contain 1 shiny gray bag, 4 pale beige bags, 1 muted chartreuse bag, 3 striped cyan bags.\nlight magenta bags contain 3 striped crimson bags, 5 vibrant bronze bags, 3 faded gold bags.\nposh green bags contain 2 faded chartreuse bags.\nlight beige bags contain 4 wavy lavender bags, 3 light white bags.\ndotted tomato bags contain 1 plaid violet bag, 2 striped purple bags.\nfaded maroon bags contain 1 light plum bag.\nposh orange bags contain 4 pale silver bags, 5 wavy lavender bags, 2 faded olive bags, 5 striped plum bags.\ndull plum bags contain 3 muted tomato bags, 5 clear yellow bags.\nplaid blue bags contain 2 dark indigo bags.\ndotted gold bags contain 2 shiny plum bags, 4 clear indigo bags, 5 dull turquoise bags, 5 clear teal bags.\nposh salmon bags contain 2 pale purple bags, 3 dim chartreuse bags.\nclear bronze bags contain 3 muted tomato bags, 1 wavy brown bag, 4 dim indigo bags.\ndim red bags contain 2 dim white bags, 3 vibrant crimson bags, 1 mirrored violet bag, 5 striped brown bags.\nposh lavender bags contain 5 vibrant indigo bags, 3 plaid olive bags, 1 striped silver bag.\ndark chartreuse bags contain 1 clear yellow bag.\nlight lavender bags contain 4 dotted gold bags, 2 wavy silver bags, 2 shiny gray bags, 3 dull yellow bags.\nbright cyan bags contain 5 dark blue bags, 3 dim magenta bags, 5 dark white bags.\nposh white bags contain 3 pale salmon bags, 1 wavy tomato bag.\ndim yellow bags contain 1 dim tomato bag.\nwavy green bags contain 2 dotted white bags, 5 posh orange bags, 5 clear gold bags, 4 shiny gold bags.\ndrab gold bags contain 1 shiny violet bag, 5 wavy lavender bags.\nlight brown bags contain 5 wavy purple bags.\nplaid brown bags contain 2 pale plum bags.\ndrab purple bags contain 5 clear red bags, 5 drab plum bags, 2 dark violet bags, 1 dark lime bag.\nlight black bags contain 2 light plum bags.\nlight violet bags contain 4 posh orange bags, 5 mirrored cyan bags.\nmuted green bags contain 5 pale orange bags, 5 dark magenta bags, 1 drab fuchsia bag.\ndrab olive bags contain 2 dull gray bags.\nshiny brown bags contain 1 striped teal bag, 4 light blue bags, 2 dim coral bags, 1 plaid brown bag.\ndrab tan bags contain 4 clear gold bags, 3 mirrored black bags.\nbright fuchsia bags contain 3 faded blue bags, 5 striped plum bags, 4 dark lavender bags, 4 muted aqua bags.\nshiny tan bags contain 3 plaid aqua bags.\nstriped bronze bags contain 1 mirrored aqua bag.\nplaid orange bags contain 5 muted magenta bags, 4 clear teal bags.\ndull maroon bags contain 5 vibrant purple bags, 5 mirrored aqua bags, 5 wavy red bags.\nvibrant teal bags contain 1 muted tomato bag, 1 faded violet bag.\nwavy yellow bags contain 5 wavy violet bags, 3 mirrored fuchsia bags, 1 bright violet bag.\ndull coral bags contain 5 dark magenta bags, 3 clear indigo bags, 1 clear olive bag, 3 mirrored tomato bags.\ndull aqua bags contain 1 pale coral bag, 5 muted green bags, 2 mirrored fuchsia bags, 1 vibrant tomato bag.\nvibrant gray bags contain 4 drab chartreuse bags, 3 bright brown bags, 2 vibrant silver bags.\nmirrored magenta bags contain 1 wavy lavender bag, 4 vibrant olive bags, 4 faded indigo bags, 2 posh green bags.\ndotted crimson bags contain 4 dull brown bags, 1 drab fuchsia bag, 3 pale tomato bags, 2 dotted orange bags.\ndull lime bags contain 5 plaid beige bags.\nlight green bags contain 5 posh red bags, 5 pale blue bags, 4 striped lavender bags.\ndotted lavender bags contain 2 muted turquoise bags, 4 clear purple bags, 5 dim salmon bags, 4 clear yellow bags.\nposh purple bags contain 2 dull white bags, 2 clear gray bags, 4 plaid gold bags.\nclear silver bags contain 5 plaid olive bags.\nstriped olive bags contain 4 striped lavender bags, 3 muted purple bags.\nplaid lavender bags contain 2 mirrored yellow bags, 2 drab crimson bags, 3 light blue bags, 3 drab tan bags.\nbright crimson bags contain 4 drab olive bags.\nshiny crimson bags contain 2 dim coral bags, 1 plaid white bag, 4 wavy brown bags.\ndotted plum bags contain 4 drab fuchsia bags.\nbright tan bags contain 5 dark lavender bags.\nmuted violet bags contain 2 drab white bags.\nshiny black bags contain 4 wavy green bags, 1 dull white bag, 2 vibrant cyan bags.\ndull teal bags contain 5 pale yellow bags.\ndark aqua bags contain 3 striped tan bags.\nshiny gray bags contain 2 pale orange bags, 2 faded olive bags, 3 dim salmon bags.\ndotted gray bags contain 5 bright violet bags, 2 shiny cyan bags, 3 mirrored yellow bags.\nmuted orange bags contain 3 plaid salmon bags.\nbright orange bags contain 2 shiny green bags, 4 dark violet bags, 5 clear gold bags, 2 clear yellow bags.\nstriped orange bags contain 1 drab silver bag, 2 vibrant silver bags.\nposh tomato bags contain 2 light plum bags, 2 faded fuchsia bags, 4 mirrored cyan bags.\nwavy coral bags contain 4 bright blue bags, 5 mirrored yellow bags, 4 drab aqua bags, 5 pale coral bags.\nwavy maroon bags contain 4 plaid tan bags.\nfaded gold bags contain 1 shiny gray bag, 1 light turquoise bag.\nfaded salmon bags contain 5 clear violet bags, 5 faded black bags, 1 striped lime bag, 3 shiny olive bags.\ndark plum bags contain 5 bright fuchsia bags, 5 faded green bags, 3 mirrored blue bags, 5 pale red bags.\nplaid crimson bags contain 5 mirrored purple bags.\ndotted lime bags contain 3 light silver bags.\nbright indigo bags contain 1 dull coral bag, 4 faded brown bags, 3 muted fuchsia bags, 3 wavy maroon bags.\nposh yellow bags contain 5 dark indigo bags, 3 light tan bags.\npale silver bags contain no other bags.\ndim salmon bags contain 3 dull bronze bags, 3 clear yellow bags.\nbright green bags contain 3 drab fuchsia bags.\nbright bronze bags contain 1 clear blue bag, 1 mirrored white bag, 4 drab plum bags.\nfaded chartreuse bags contain 2 clear brown bags, 2 drab coral bags.\npale fuchsia bags contain 2 plaid silver bags.\ndim aqua bags contain 1 striped silver bag, 3 mirrored tan bags, 4 dotted violet bags, 3 dotted black bags.\ndrab tomato bags contain 3 dim chartreuse bags, 2 mirrored violet bags.\nwavy indigo bags contain 3 faded plum bags, 3 bright turquoise bags.\ndrab coral bags contain 2 plaid aqua bags, 2 dim plum bags, 3 light plum bags.\nplaid fuchsia bags contain 1 dark silver bag, 4 clear gold bags, 3 dim white bags, 3 dotted white bags.\nmuted lime bags contain 3 pale silver bags.\nvibrant red bags contain 4 drab plum bags, 3 pale yellow bags, 5 posh cyan bags, 5 light teal bags.\nplaid purple bags contain 4 dim green bags.\ndim bronze bags contain 5 dim salmon bags, 4 pale white bags, 5 vibrant cyan bags.\ndotted maroon bags contain 1 mirrored teal bag, 3 dark lime bags, 2 pale yellow bags.\npale cyan bags contain 4 dull salmon bags, 4 bright bronze bags.\ndrab crimson bags contain 4 plaid aqua bags, 2 dotted coral bags, 3 muted green bags, 1 dull white bag.\nfaded lime bags contain 3 posh blue bags.\npale yellow bags contain 1 mirrored gold bag, 3 faded brown bags, 3 pale silver bags, 4 light black bags.\nlight bronze bags contain 2 dark purple bags, 1 faded maroon bag, 5 faded purple bags.\ndotted white bags contain 3 vibrant silver bags, 2 faded olive bags.\ndark maroon bags contain 2 dull silver bags, 3 dark blue bags, 3 drab turquoise bags, 4 vibrant olive bags.\ndim brown bags contain 3 faded green bags, 3 muted tomato bags.\ndull indigo bags contain 3 faded fuchsia bags.\nplaid olive bags contain 4 mirrored gold bags, 4 dim indigo bags, 2 wavy gray bags.\nwavy blue bags contain 4 bright purple bags, 4 vibrant gold bags, 4 light blue bags, 4 dotted indigo bags.\nlight gold bags contain 2 dim lime bags, 2 dim yellow bags.\nshiny maroon bags contain 5 dull white bags, 4 shiny red bags, 2 clear bronze bags.\nlight white bags contain 2 dark magenta bags.\ndark olive bags contain 5 plaid brown bags, 3 muted fuchsia bags, 1 bright orange bag, 3 dotted red bags.\ndrab violet bags contain 3 posh orange bags.\nstriped crimson bags contain 4 mirrored yellow bags, 5 light plum bags.\nvibrant orange bags contain 4 pale silver bags, 2 plaid orange bags, 2 posh silver bags, 4 muted plum bags.\nwavy crimson bags contain 1 faded olive bag, 4 vibrant yellow bags, 5 vibrant white bags, 3 dotted red bags.\npale bronze bags contain 1 mirrored maroon bag, 5 drab salmon bags.\ndark gray bags contain 4 dim fuchsia bags.\nlight lime bags contain 5 dull plum bags, 2 dotted violet bags, 2 dull turquoise bags.\nshiny blue bags contain 2 clear coral bags, 4 vibrant bronze bags.\ndull magenta bags contain 2 mirrored aqua bags.\nvibrant lavender bags contain 3 vibrant fuchsia bags, 3 light red bags, 2 vibrant cyan bags.\nposh tan bags contain 5 drab blue bags, 2 bright magenta bags, 4 shiny chartreuse bags.\nplaid salmon bags contain 2 dull violet bags.\nposh bronze bags contain 2 muted plum bags, 5 faded fuchsia bags, 4 bright beige bags.\nposh teal bags contain 4 drab indigo bags, 1 posh black bag, 1 dark crimson bag, 1 shiny lavender bag.\nstriped coral bags contain 4 dim lime bags, 3 light plum bags, 5 dull bronze bags.\nfaded plum bags contain 2 muted magenta bags, 3 shiny cyan bags.\nstriped lime bags contain 1 vibrant silver bag, 4 drab fuchsia bags.\nvibrant chartreuse bags contain 5 dotted olive bags.\ndrab green bags contain 1 drab olive bag.\npale salmon bags contain 5 posh purple bags, 3 plaid tan bags, 2 vibrant white bags.\ndotted teal bags contain 1 dull yellow bag, 2 mirrored tomato bags, 1 dotted blue bag, 1 dim olive bag.\ndim black bags contain 3 posh purple bags, 5 dotted indigo bags, 1 faded fuchsia bag.\nfaded coral bags contain 1 dotted white bag, 4 shiny gray bags.\nstriped gold bags contain 1 posh tomato bag, 5 vibrant fuchsia bags, 3 dim chartreuse bags.\ndrab yellow bags contain 5 dark beige bags, 2 dull gray bags.\nstriped lavender bags contain 1 dark fuchsia bag, 5 striped magenta bags, 5 muted green bags.\nfaded brown bags contain 3 posh red bags, 2 plaid tan bags.\nfaded orange bags contain 3 muted white bags, 1 plaid beige bag, 2 clear gray bags, 2 wavy salmon bags.\nshiny violet bags contain 3 posh cyan bags.\nbright coral bags contain 3 plaid silver bags, 3 light gold bags.\ndim silver bags contain 5 dim indigo bags, 3 wavy maroon bags, 3 mirrored yellow bags.\nmuted gold bags contain 1 vibrant cyan bag, 3 muted chartreuse bags, 2 faded olive bags.\nbright silver bags contain 3 posh aqua bags.\ndotted blue bags contain 1 striped tan bag, 5 mirrored teal bags, 2 dull coral bags.\ndim lime bags contain 4 striped plum bags.\nlight red bags contain 2 shiny black bags, 2 posh brown bags, 2 dotted purple bags, 3 dim indigo bags.\nplaid yellow bags contain 4 shiny blue bags, 1 wavy white bag, 3 muted beige bags, 5 posh purple bags.\ndark fuchsia bags contain 2 bright lime bags, 4 pale silver bags.\nvibrant black bags contain 5 dark violet bags.\nbright purple bags contain 5 striped brown bags, 3 wavy maroon bags, 5 drab indigo bags, 2 bright brown bags.\npale lavender bags contain 1 shiny lime bag, 5 shiny green bags, 2 bright purple bags.\ndark yellow bags contain 4 drab lime bags.\npale white bags contain 3 shiny beige bags, 3 mirrored purple bags, 2 dark silver bags.\ndull green bags contain 5 clear olive bags, 2 pale green bags.\ndark crimson bags contain 4 clear turquoise bags, 1 wavy aqua bag, 2 bright tan bags, 4 mirrored tan bags.\ndim olive bags contain 2 dark lavender bags, 4 muted chartreuse bags, 2 posh purple bags.\ndotted olive bags contain 2 dull bronze bags, 1 faded lavender bag.\nlight yellow bags contain 3 posh brown bags, 4 muted orange bags.\nposh blue bags contain 4 clear olive bags, 1 clear teal bag, 1 pale silver bag, 4 shiny blue bags.\ndrab brown bags contain 5 light teal bags, 4 clear magenta bags, 5 clear olive bags, 2 striped silver bags.\nclear lime bags contain 5 drab blue bags, 5 shiny cyan bags, 5 shiny red bags.\nshiny coral bags contain 3 bright orange bags, 4 bright gray bags, 4 muted chartreuse bags, 4 dull salmon bags.\nplaid beige bags contain 3 mirrored gold bags, 2 pale tomato bags.\nclear maroon bags contain 1 striped magenta bag, 3 shiny violet bags, 1 wavy magenta bag.\nfaded beige bags contain 4 dotted crimson bags, 3 dull indigo bags, 2 mirrored orange bags, 2 dim white bags.\npale orange bags contain 2 clear orange bags, 3 vibrant aqua bags.\ndull fuchsia bags contain 1 light plum bag, 5 dotted white bags, 4 dotted purple bags, 2 dim teal bags.\nmirrored gray bags contain 3 faded white bags, 4 light olive bags, 5 muted turquoise bags.\nfaded cyan bags contain 4 shiny plum bags, 2 pale orange bags, 5 clear orange bags, 4 striped fuchsia bags.\nvibrant yellow bags contain 3 shiny yellow bags, 2 striped magenta bags.\ndotted fuchsia bags contain 5 shiny olive bags, 4 faded olive bags.\ndim teal bags contain 1 shiny yellow bag, 3 light purple bags, 4 mirrored teal bags.\ndull red bags contain 4 faded purple bags, 1 drab black bag.\nstriped beige bags contain 1 mirrored salmon bag, 5 faded purple bags, 5 clear beige bags.\nmirrored maroon bags contain 1 dim plum bag, 3 pale chartreuse bags, 1 striped tan bag.\ndim green bags contain 3 plaid olive bags.\nplaid tomato bags contain 3 drab yellow bags, 4 vibrant magenta bags, 2 muted cyan bags, 1 muted black bag.\nshiny green bags contain 1 dull tomato bag, 1 dotted orange bag.\nclear violet bags contain 1 dark violet bag.\ndull beige bags contain 1 light beige bag, 2 muted green bags, 5 plaid gold bags.\nshiny bronze bags contain 1 bright violet bag.\nwavy bronze bags contain 1 plaid lavender bag.\nclear blue bags contain 2 dark lavender bags.\npale green bags contain 3 bright teal bags, 3 dim lime bags, 2 vibrant purple bags, 5 light plum bags.\nposh violet bags contain 3 plaid beige bags.\ndim maroon bags contain 5 plaid cyan bags.\nfaded tan bags contain 3 vibrant bronze bags, 1 drab tomato bag, 2 dim indigo bags, 1 bright bronze bag.\ndark turquoise bags contain 2 pale salmon bags, 4 muted purple bags, 2 light olive bags.\nvibrant white bags contain 1 posh silver bag, 2 clear olive bags, 2 bright brown bags, 3 muted turquoise bags.\nstriped salmon bags contain 2 dotted orange bags, 4 dotted maroon bags.\nplaid silver bags contain 2 vibrant purple bags, 5 dark brown bags.\nmuted magenta bags contain no other bags.\nlight cyan bags contain 5 faded lavender bags.\nbright aqua bags contain 5 plaid white bags, 1 striped coral bag, 4 muted chartreuse bags, 3 light turquoise bags.\nmuted red bags contain 5 dotted gold bags.\nmirrored lavender bags contain 1 muted cyan bag.\ndrab salmon bags contain 3 light black bags, 5 posh lavender bags, 5 dull aqua bags, 2 mirrored white bags.\nmuted tomato bags contain no other bags.\nbright salmon bags contain 5 dim coral bags, 1 wavy beige bag, 2 striped gray bags.\nmirrored salmon bags contain 4 clear purple bags, 4 dim black bags.\nbright tomato bags contain 3 dark chartreuse bags.\nvibrant silver bags contain no other bags.\nwavy purple bags contain 4 posh silver bags, 4 pale tan bags, 3 drab fuchsia bags, 5 shiny violet bags.\nlight purple bags contain 5 clear yellow bags, 3 dotted white bags, 3 pale silver bags, 1 striped blue bag.\nmirrored tomato bags contain 3 shiny crimson bags, 1 muted chartreuse bag, 1 drab tan bag, 3 pale tomato bags.\nfaded fuchsia bags contain 1 posh orange bag, 4 clear chartreuse bags, 1 dull gray bag.\nmirrored purple bags contain 4 faded fuchsia bags, 4 dark magenta bags, 5 wavy brown bags.\nvibrant violet bags contain 5 dotted aqua bags.\nvibrant crimson bags contain 1 dotted maroon bag, 2 posh silver bags, 3 clear teal bags, 3 dim silver bags.\ndull yellow bags contain 1 clear chartreuse bag.\nclear salmon bags contain 2 clear red bags.\nshiny olive bags contain 3 dim indigo bags, 3 wavy maroon bags.\nbright violet bags contain 4 dotted red bags, 1 mirrored green bag.\ndull violet bags contain 3 bright lime bags, 4 striped plum bags, 5 drab crimson bags, 2 vibrant white bags.\nshiny white bags contain 3 vibrant aqua bags, 3 dim teal bags, 3 dark orange bags.\ndark lime bags contain 3 muted magenta bags.\nclear teal bags contain 4 posh cyan bags, 2 pale silver bags, 5 plaid aqua bags, 1 dull yellow bag.\nfaded indigo bags contain 3 plaid crimson bags.\nwavy aqua bags contain 5 striped black bags.\nmuted aqua bags contain 5 shiny green bags, 4 mirrored cyan bags, 2 light silver bags, 5 striped black bags.\ndotted magenta bags contain 5 striped plum bags, 3 shiny red bags.\nfaded teal bags contain 4 dim silver bags, 3 faded green bags, 5 drab coral bags.\nposh coral bags contain 3 plaid olive bags, 5 striped brown bags, 2 bright fuchsia bags, 1 bright tan bag.\nfaded magenta bags contain 3 striped cyan bags, 1 dim beige bag.\nposh plum bags contain 4 clear plum bags, 2 clear teal bags.\nfaded violet bags contain 2 clear beige bags, 4 shiny red bags.\ndotted bronze bags contain 4 dim brown bags.\nmirrored gold bags contain 3 posh cyan bags, 2 dim silver bags.\nmuted salmon bags contain 1 bright maroon bag, 3 dark tomato bags.\ndim gold bags contain 3 posh red bags, 5 vibrant silver bags, 4 drab tan bags.\nbright olive bags contain 3 dim salmon bags, 5 pale coral bags, 4 bright tomato bags.\nposh chartreuse bags contain 4 vibrant white bags, 2 dull indigo bags.\nwavy fuchsia bags contain 3 shiny magenta bags, 4 wavy red bags, 4 faded gold bags, 4 posh red bags.\nposh magenta bags contain 5 light turquoise bags, 1 dull blue bag.\ndim violet bags contain 5 shiny gold bags, 4 plaid aqua bags, 5 dull violet bags, 1 clear violet bag.\nplaid white bags contain 3 muted magenta bags, 3 plaid aqua bags, 2 faded black bags, 2 shiny gold bags.\ndotted silver bags contain 5 mirrored brown bags, 5 bright yellow bags.\nmirrored brown bags contain 4 dim plum bags.\ndull blue bags contain 1 pale indigo bag, 2 shiny black bags, 3 faded lavender bags.\ndim coral bags contain 2 plaid aqua bags, 1 dotted orange bag, 4 striped coral bags.\nmirrored violet bags contain 2 pale green bags, 5 dark lavender bags, 1 faded olive bag.\ndotted purple bags contain 3 pale indigo bags.\ndull turquoise bags contain 4 striped magenta bags, 2 dull gray bags, 3 shiny indigo bags.\nstriped black bags contain 2 mirrored teal bags.\nshiny indigo bags contain 3 shiny gray bags, 2 clear plum bags.\nplaid magenta bags contain 3 light white bags.\nwavy black bags contain 2 dull cyan bags, 3 pale orange bags, 4 clear magenta bags.\npale coral bags contain 1 bright tomato bag.\ndrab cyan bags contain 3 dark chartreuse bags, 2 dim black bags, 1 dotted gray bag.\ndark cyan bags contain 4 bright turquoise bags, 5 faded cyan bags, 5 dim salmon bags.\nbright brown bags contain 4 drab tan bags, 4 mirrored gold bags.\nstriped chartreuse bags contain 1 wavy silver bag.\nstriped yellow bags contain 3 dim beige bags, 5 dim coral bags.\ndotted aqua bags contain 1 mirrored green bag, 5 shiny maroon bags."),Nn="--- Day 7: Handy Haversacks ---\nYou land at the regional airport in time for your next flight. In fact, it looks like you'll even have time to grab some food: \nall flights are currently delayed due to issues in luggage processing.\n\nDue to recent aviation regulations, many rules (your puzzle input) are being enforced about bags and their contents; \nbags must be color-coded and must contain specific quantities of other color-coded bags. Apparently, nobody responsible \nfor these regulations considered how long they would take to enforce!\n\nFor example, consider the following rules:\n\nlight red bags contain 1 bright white bag, 2 muted yellow bags.\ndark orange bags contain 3 bright white bags, 4 muted yellow bags.\nbright white bags contain 1 shiny gold bag.\nmuted yellow bags contain 2 shiny gold bags, 9 faded blue bags.\nshiny gold bags contain 1 dark olive bag, 2 vibrant plum bags.\ndark olive bags contain 3 faded blue bags, 4 dotted black bags.\nvibrant plum bags contain 5 faded blue bags, 6 dotted black bags.\nfaded blue bags contain no other bags.\ndotted black bags contain no other bags.\nThese rules specify the required contents for 9 bag types. In this example, every faded blue bag is empty, every vibrant plum bag \ncontains 11 bags (5 faded blue and 6 dotted black), and so on.\n\nYou have a shiny gold bag. If you wanted to carry it in at least one other bag, how many different bag colors would be valid for the outermost bag? \n(In other words: how many colors can, eventually, contain at least one shiny gold bag?)\n\nIn the above rules, the following options would be available to you:\n\nA bright white bag, which can hold your shiny gold bag directly.\nA muted yellow bag, which can hold your shiny gold bag directly, plus some other bags.\nA dark orange bag, which can hold bright white and muted yellow bags, either of which could then hold your shiny gold bag.\nA light red bag, which can hold bright white and muted yellow bags, either of which could then hold your shiny gold bag.\nSo, in this example, the number of bag colors that can eventually contain at least one shiny gold bag is 4.\n\nHow many bag colors can eventually contain at least one shiny gold bag? (The list of rules is quite long; make sure you get all of it.)\n\n--- Part Two ---\nIt's getting pretty expensive to fly these days - not because of ticket prices, but because of the ridiculous number of bags you need to buy!\n\nConsider again your shiny gold bag and the rules from the above example:\n\nfaded blue bags contain 0 other bags.\ndotted black bags contain 0 other bags.\nvibrant plum bags contain 11 other bags: 5 faded blue bags and 6 dotted black bags.\ndark olive bags contain 7 other bags: 3 faded blue bags and 4 dotted black bags.\nSo, a single shiny gold bag must contain 1 dark olive bag (and the 7 bags within it) plus 2 vibrant plum bags (and the 11 bags within each of those): 1 + 1*7 + 2 + 2*11 = 32 bags!\n\nOf course, the actual rules have a small chance of going several levels deeper than this example; be sure to count all of the bags, even if the nesting becomes topologically impractical!\n\nHere's another example:\n\nshiny gold bags contain 2 dark red bags.\ndark red bags contain 2 dark orange bags.\ndark orange bags contain 2 dark yellow bags.\ndark yellow bags contain 2 dark green bags.\ndark green bags contain 2 dark blue bags.\ndark blue bags contain 2 dark violet bags.\ndark violet bags contain no other bags.\nIn this example, a single shiny gold bag must contain 126 other bags.\n\nHow many individual bags are required inside your single shiny gold bag?\n\n",Pn="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n\n    inputData = inputData.split(\".\\n\")\n    inputData.forEach(element => {\n\n        element = element.split(\" contain \")\n        element[0] = element[0].split(' ')\n        element[0][element[0].length - 1] = 'bag'\n        element[0] = element[0].join(' ')\n\n        var parsedContainsData = element[1].split(\", \")\n        \n        var containerIdx = this.GetDatacontainerIndex(element[0])\n\n        parsedContainsData.forEach(includeElement => {\n        \n            if (includeElement != \"no other bags\") {\n                var splitted = includeElement.split(' ')\n                var amount = Number(splitted.shift())\n                splitted[splitted.length - 1] = 'bag'\n                \n                for (let i = 0; i < amount; i++) {\n                    var bagId = splitted.join(' ')\n                    \n                    this.AddToContainer(containerIdx, bagId)\n                }\n            }\n        });\n    });\n\n    var PhaseOneResult = 0;\n\n    for (let i = 0; i < this.ParsedDataContainer.length; i++) {\n        var value = this.ContainsBagId(i, \"shiny gold bag\")\n        \n        this.ParsedDataContainer[i].containsGoldBag = value\n\n        if (value) {\n            PhaseOneResult++\n        }\n    }\n\n    this.SetResult(PhaseOneResult)\n\n    // -- Phase Two --\n    var goldBagId = this.ParsedDataContainer.find(x => x.dataId == 'shiny gold bag')\n    \n    this.SetResult(this.TotalBagsFoundInside(this.ParsedDataContainer.indexOf(goldBagId), 0))\n\n},\nGetDatacontainerIndex(dataId) {\n    var data = this.ParsedDataContainer.find(x => x.dataId == dataId)\n    var idx = -1\n    if (!data) {\n\n        data = {\n            dataId: dataId,\n            containsIndex: new Array(0),\n        }\n\n        this.ParsedDataContainer.push(data)\n    }\n\n    idx = this.ParsedDataContainer.indexOf(data)\n    return idx\n},\nAddToContainer(dataContainerIndex, dataId) {\n    var dataIndex = this.GetDatacontainerIndex(dataId)\n    \n    this.ParsedDataContainer[dataContainerIndex].containsIndex.push(dataIndex)\n},\nContainsBagId(bagIdx, bagIDToFind) {\n    if (this.ParsedDataContainer[bagIdx].containsGoldBag)\n        return true\n\n    var alreadyChecked = []\n\n    for (let i = 0; i < this.ParsedDataContainer[bagIdx].containsIndex.length; i++) {\n        \n        if (alreadyChecked.includes(this.ParsedDataContainer[bagIdx].containsIndex[i]))\n            continue\n\n        alreadyChecked.push(this.ParsedDataContainer[bagIdx].containsIndex[i])\n        \n        var returnValue = false\n        \n        if (bagIDToFind == this.ParsedDataContainer[this.ParsedDataContainer[bagIdx].containsIndex[i]].dataId) {\n            return true\n        }\n        \n        returnValue = this.ContainsBagId(this.ParsedDataContainer[bagIdx].containsIndex[i], bagIDToFind)\n\n        if (returnValue) {\n            this.ParsedDataContainer[bagIdx].containsGoldBag = true\n            return true\n        }\n    }\n\n    return false\n},\nTotalBagsFoundInside(bagIdx, amount) {\n    amount += this.ParsedDataContainer[bagIdx].containsIndex.length\n    \n    for (let i = 0; i < this.ParsedDataContainer[bagIdx].containsIndex.length; i++) {\n        amount = this.TotalBagsFoundInside(this.ParsedDataContainer[bagIdx].containsIndex[i], amount)\n    }\n\n    return amount\n},",Cn={components:{"show-task":E},data:function(){return{CurrentInputData:En,CurrentTaskData:Nn,CurrentSolutionData:Pn,InputData:En,TaskResult:[],ParsedDataContainer:[],Counter:0}},mounted:function(){this.Solve(En)},methods:{Solve:function(n){var a=this;n=n.split(".\n"),n.forEach((function(n){n=n.split(" contain "),n[0]=n[0].split(" "),n[0][n[0].length-1]="bag",n[0]=n[0].join(" ");var L=n[1].split(", "),t=a.GetDatacontainerIndex(n[0]);L.forEach((function(n){if("no other bags"!=n){var L=n.split(" "),e=Number(L.shift());L[L.length-1]="bag";for(var r=0;r<e;r++){var i=L.join(" ");a.AddToContainer(t,i)}}}))}));for(var L=0,t=0;t<this.ParsedDataContainer.length;t++){var e=this.ContainsBagId(t,"shiny gold bag");this.ParsedDataContainer[t].containsGoldBag=e,e&&L++}this.SetResult(L);var r=this.ParsedDataContainer.find((function(n){return"shiny gold bag"==n.dataId}));this.SetResult(this.TotalBagsFoundInside(this.ParsedDataContainer.indexOf(r),0))},GetDatacontainerIndex:function(n){var a=this.ParsedDataContainer.find((function(a){return a.dataId==n})),L=-1;return a||(a={dataId:n,containsIndex:new Array(0)},this.ParsedDataContainer.push(a)),L=this.ParsedDataContainer.indexOf(a),L},AddToContainer:function(n,a){var L=this.GetDatacontainerIndex(a);this.ParsedDataContainer[n].containsIndex.push(L)},ContainsBagId:function(n,a){if(this.ParsedDataContainer[n].containsGoldBag)return!0;for(var L=[],t=0;t<this.ParsedDataContainer[n].containsIndex.length;t++)if(!L.includes(this.ParsedDataContainer[n].containsIndex[t])){L.push(this.ParsedDataContainer[n].containsIndex[t]);var e=!1;if(a==this.ParsedDataContainer[this.ParsedDataContainer[n].containsIndex[t]].dataId)return!0;if(e=this.ContainsBagId(this.ParsedDataContainer[n].containsIndex[t],a),e)return this.ParsedDataContainer[n].containsGoldBag=!0,!0}return!1},TotalBagsFoundInside:function(n,a){a+=this.ParsedDataContainer[n].containsIndex.length;for(var L=0;L<this.ParsedDataContainer[n].containsIndex.length;L++)a=this.TotalBagsFoundInside(this.ParsedDataContainer[n].containsIndex[L],a);return a},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},Wn=Cn,An=Object(c["a"])(Wn,Tn,In,!1,null,null,null),On=An.exports,_n=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},Mn=[],Vn=(L("4de4"),"nop +456\nnop +38\nacc +9\njmp +153\nacc +15\nnop +560\njmp +452\nacc +26\nacc +42\njmp +376\nacc -5\nacc +12\nacc -5\njmp +15\njmp +1\nacc -9\njmp +533\nacc +19\nacc +33\nacc +34\njmp -6\nnop +404\nnop +140\nacc +0\njmp +123\nacc +45\nacc +0\njmp +496\njmp +487\nacc +9\nacc +34\njmp +484\nacc +0\nacc -14\njmp +466\nacc +40\nacc +6\nacc +30\njmp +444\nnop +386\njmp +215\nacc +43\nacc +5\nnop -4\njmp +535\njmp -13\nacc +3\nacc +7\nacc +49\nacc -1\njmp +245\nacc +9\nacc +31\nnop +142\njmp +554\nacc +3\njmp +493\nnop +399\njmp +232\nacc -16\nacc +33\njmp +410\nacc +33\nacc +5\nacc -17\njmp +272\nacc -3\nacc +37\njmp +181\njmp -12\nnop +344\nacc +5\nacc -16\njmp +290\nnop +530\nacc +15\nacc +3\njmp +343\nacc +2\nacc +19\njmp +298\nacc +43\nacc +25\nacc -19\njmp +439\nacc +43\nacc +45\nacc +20\njmp +355\nacc +13\nacc +24\nacc -15\nnop +396\njmp +215\nacc -7\nacc +17\njmp +441\nacc -8\nacc -19\njmp +505\njmp +282\nacc -17\nacc -8\nacc +20\njmp +359\nacc +26\nacc +14\nacc +47\nacc +3\njmp +298\nacc +31\nnop +205\nacc +0\nacc +7\njmp +389\nacc -5\nacc +47\njmp +94\nacc -13\njmp +358\nacc -13\njmp +134\nacc +8\nacc -19\njmp +312\nacc +43\nacc +17\njmp +97\njmp +48\nnop +253\nacc +48\nacc -7\nacc -2\njmp +23\nacc +26\nacc +14\nacc -14\nacc +17\njmp +18\nacc +14\nacc +8\njmp +341\nacc +35\njmp +227\nacc +15\nacc -7\njmp -95\nacc -19\njmp -59\njmp -31\nacc -6\nacc -4\nacc +24\njmp +84\nacc -15\njmp +82\nnop +74\nacc +8\nacc +9\nacc +13\njmp +194\njmp +376\nacc +34\nnop -16\njmp -90\nacc +4\nacc +43\nnop +215\njmp -147\nacc +0\nacc +11\nacc -15\nacc +23\njmp +130\nacc +40\njmp +106\nacc -4\nacc -18\nacc +18\nnop +329\njmp +230\nacc +19\nnop +172\nacc +43\njmp +304\nacc +44\nnop +213\nnop +195\nacc +6\njmp -79\nacc +41\nacc -11\nacc +18\nacc -9\njmp -25\nacc +27\nacc -6\nacc +31\njmp -56\nacc +5\nacc +12\nacc +32\nacc +34\njmp -189\nacc +32\nacc +5\nacc -16\njmp +301\nnop +108\nnop -108\njmp -141\nacc -12\njmp +273\nacc +3\njmp +140\nacc +7\nacc -11\nacc -17\nnop +194\njmp -122\nacc -14\nnop +186\nacc +24\njmp +277\nnop +341\nacc +18\njmp -64\nacc +45\nacc +42\njmp +52\nacc +39\nnop +91\nnop -8\njmp +217\nacc +44\nacc +15\njmp +72\nacc +24\njmp -231\nacc -16\nnop +55\nnop +262\nacc +40\njmp +234\njmp -14\nacc +31\nnop -177\nacc +40\njmp +343\nacc -8\njmp -169\nacc +30\nacc +12\nacc -11\njmp +41\nacc +9\nacc -9\njmp +65\nacc +38\nacc +14\njmp +335\nacc -19\nacc +38\nacc +16\nacc -11\njmp +230\njmp -71\nacc +48\nacc -13\nnop -255\njmp +1\njmp -220\nacc +2\njmp +157\njmp -105\nacc -16\nacc -5\njmp -196\nacc +30\njmp +139\njmp +83\nacc -3\nacc -12\njmp +254\njmp -60\nacc +33\njmp -37\nacc +17\nacc -14\njmp +93\nnop +178\nacc +38\nacc +47\njmp -89\njmp +271\nacc +43\nacc +32\njmp -240\nacc +26\nacc +32\nacc +30\nnop +284\njmp +169\nacc -7\nacc +37\njmp +102\nacc +4\njmp +86\njmp -123\nacc +0\nacc -14\nacc +18\njmp +1\njmp -5\njmp -36\njmp +148\nacc -17\nacc -14\nacc +28\nacc +15\njmp +79\njmp -289\nacc +42\nacc -5\nacc +13\njmp +240\nacc -10\nacc -18\nacc -16\njmp +103\nacc +21\njmp +32\nnop +118\nacc +22\nacc -16\nacc +15\njmp -186\nacc -2\nacc -14\nacc +22\nacc +16\njmp +73\nacc -6\njmp -225\nacc -18\nnop +113\nacc +50\nacc -6\njmp +181\nacc +41\njmp +1\nnop +92\nacc +23\njmp +190\nacc +39\nacc +0\nacc +33\njmp +111\nnop -63\nnop -81\nacc +9\nacc +35\njmp +50\nacc +11\njmp -295\nnop +230\nacc +34\nacc +12\nacc +47\njmp +126\nacc +0\nnop -1\nacc +19\nacc -16\njmp -360\nacc +29\nacc -2\njmp -110\nacc +2\nacc +50\njmp -36\njmp -107\njmp +178\nacc -11\njmp +181\nnop +115\nnop +186\njmp +95\njmp +1\nnop +148\nacc +2\nacc +49\njmp +173\nacc +38\njmp +178\nacc +28\nacc +6\nacc +15\njmp +110\nacc +49\nnop +100\njmp +57\nacc +45\nnop +65\nacc +43\nacc +12\njmp -272\njmp -260\nnop +100\njmp -224\njmp +142\njmp +52\njmp -34\njmp -110\nacc +35\nnop -112\njmp +16\njmp -18\njmp -157\njmp +81\nacc +1\njmp -107\nacc +16\nacc +23\njmp -255\nacc +22\njmp +42\nnop +168\nacc +41\njmp -311\njmp -163\njmp +118\nnop +4\nacc +18\njmp +54\njmp -414\nnop -181\nacc +10\nacc +23\njmp -321\nnop -322\nacc -9\njmp +101\nnop -7\nacc +35\nacc +46\njmp -312\nnop +64\nnop -386\njmp -280\nacc +16\njmp -156\nacc +13\nnop -131\njmp +1\njmp -416\njmp +15\njmp -94\njmp -330\nnop +93\nnop -205\nacc +48\njmp -19\njmp -70\nnop +21\nacc -5\nacc +19\njmp +62\nacc +22\njmp -448\njmp -77\nacc +26\nacc -2\njmp +70\nacc -2\nacc +21\njmp -195\nnop -114\njmp +107\nacc +37\nacc +6\njmp -436\nacc +48\njmp +96\njmp -121\nacc +0\njmp -74\njmp +1\nacc +27\nacc +2\njmp -279\nacc +7\nacc +0\njmp +1\njmp -413\nacc +6\njmp -180\nacc +18\nacc +10\njmp -437\njmp -338\nnop -456\njmp -463\nacc +1\nnop -54\njmp -168\nacc +27\njmp -479\nacc +42\njmp -408\njmp +85\nacc -16\nacc +24\njmp -391\njmp -206\nnop +8\njmp +1\nacc +38\nnop -473\njmp -94\nacc +10\nacc -14\njmp -425\nacc +17\nnop -208\nacc +39\njmp -265\nacc +3\njmp -284\nacc +19\nacc +5\nnop -111\nacc +22\njmp -309\nacc +12\nacc +39\njmp -151\nacc +33\nacc -14\njmp -450\nacc +16\nnop +50\njmp -188\nacc -13\nacc +15\nacc +4\njmp -484\nacc +27\njmp -98\nacc +34\njmp -120\njmp -537\nacc +43\nacc -8\nacc -6\njmp -405\nacc -8\nnop -179\nacc -11\njmp -264\nacc +24\njmp -280\nacc -6\nacc +1\njmp -353\nacc -18\njmp -58\nacc +1\nacc -7\nacc -2\nacc +44\njmp -115\nnop -328\nacc +27\nacc +2\njmp +20\nacc +14\nacc +34\njmp -460\nnop -445\nacc -9\nacc +24\nacc -11\njmp -72\njmp -434\njmp -370\nacc +35\nacc +43\nacc +45\nacc +44\njmp -287\njmp -546\nnop -474\nacc -6\njmp -357\nnop -163\nnop -218\nnop -342\njmp -570\nacc +44\nacc +4\nacc +35\nacc +6\njmp -541\njmp -274\nacc +48\nacc -18\njmp -171\nacc -13\nacc -14\nacc +25\nacc +26\njmp +1"),Gn="--- Day 8: Handheld Halting ---\nYour flight to the major airline hub reaches cruising altitude without incident. While you consider checking the in-flight menu for one of \nthose drinks that come with a little umbrella, you are interrupted by the kid sitting next to you.\n\nTheir handheld game console won't turn on! They ask if you can take a look.\n\nYou narrow the problem down to a strange infinite loop in the boot code (your puzzle input) of the device. \nYou should be able to fix it, but first you need to be able to run the code in isolation.\n\nThe boot code is represented as a text file with one instruction per line of text. Each instruction consists of an \noperation (acc, jmp, or nop) and an argument (a signed number like +4 or -20).\n\nacc increases or decreases a single global value called the accumulator by the value given in the argument. \n    For example, acc +7 would increase the accumulator by 7. The accumulator starts at 0. After an acc instruction, the instruction immediately below it is executed next.\njmp jumps to a new instruction relative to itself. The next instruction to execute is found \n    using the argument as an offset from the jmp instruction; for example, jmp +2 would skip the next instruction, jmp +1 would continue to the instruction immediately below \n    it, and jmp -20 would cause the instruction 20 lines above to be executed next.\nnop stands for No OPeration - it does nothing. The instruction immediately below it is executed next.\n\nFor example, consider the following program:\n\nnop +0\nacc +1\njmp +4\nacc +3\njmp -3\nacc -99\nacc +1\njmp -4\nacc +6\nThese instructions are visited in this order:\n\nnop +0  | 1\nacc +1  | 2, 8(!)\njmp +4  | 3\nacc +3  | 6\njmp -3  | 7\nacc -99 |\nacc +1  | 4\njmp -4  | 5\nacc +6  |\nFirst, the nop +0 does nothing. Then, the accumulator is increased from 0 to 1 (acc +1) and jmp +4 sets the next instruction \nto the other acc +1 near the bottom. After it increases the accumulator from 1 to 2, jmp -4 executes, setting the next instruction \nto the only acc +3. It sets the accumulator to 5, and jmp -3 causes the program to continue back at the first acc +1.\n\nThis is an infinite loop: with this sequence of jumps, the program will run forever. \nThe moment the program tries to run any instruction a second time, you know it will never terminate.\n\nImmediately before the program would run an instruction a second time, the value in the accumulator is 5.\n\nRun your copy of the boot code. Immediately before any instruction is executed a second time, what value is in the accumulator?\n\n--- Part Two ---\nAfter some careful analysis, you believe that exactly one instruction is corrupted.\n\nSomewhere in the program, either a jmp is supposed to be a nop, or a nop is supposed to be a jmp. (No acc instructions were harmed in the corruption of this boot code.)\n\nThe program is supposed to terminate by attempting to execute an instruction immediately after the last instruction in the file. \nBy changing exactly one jmp or nop, you can repair the boot code and make it terminate correctly.\n\nFor example, consider the same program from above:\n\nnop +0\nacc +1\njmp +4\nacc +3\njmp -3\nacc -99\nacc +1\njmp -4\nacc +6\nIf you change the first instruction from nop +0 to jmp +0, it would create a single-instruction infinite loop, never leaving that instruction. \nIf you change almost any of the jmp instructions, the program will still eventually find another jmp instruction and loop forever.\n\nHowever, if you change the second-to-last instruction (from jmp -4 to nop -4), the program terminates! The instructions are visited in this order:\n\nnop +0  | 1\nacc +1  | 2\njmp +4  | 3\nacc +3  |\njmp -3  |\nacc -99 |\nacc +1  | 4\nnop -4  | 5\nacc +6  | 6\nAfter the last instruction (acc +6), the program terminates by attempting to run the instruction below the last instruction in the file. With this change, \nafter the program terminates, the accumulator contains the value 8 (acc +1, acc +1, acc +6).\n\nFix the program so that it terminates normally by changing exactly one jmp (to nop) or nop (to jmp). What is the value of the accumulator after the program terminates?\n\n",Yn="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n\n    inputData = inputData.split('\\n')\n\n    for(let i = 0; i < inputData.length; i++) {\n        var splittedElement = inputData[i].split(' ')\n        inputData[i] = {\n            instruction: splittedElement[0],\n            value: splittedElement[1],\n            visited: false\n        }\n    }\n\n    var Results = this.RunData(inputData)\n    this.SetResult(Results.shift())\n\n    // For phase two, add finishing command to the end of input. This is the sign that program should stop.\n    inputData.push({\n        instruction: 'finished',\n        value: '+0',\n        visited: true\n    })\n\n    // Filter out instructions that are not 'nop' or 'jmp'\n    var filteredResults = Results.filter(x => inputData[x].instruction != 'nop' || inputData[x].instruction != 'jmp')\n    \n    // Sicne we have the route from phase 1, we can change one item one by one from the route to see, if we hit finish.\n    for (let i = 0; i < filteredResults.length; i++) {\n\n        let savedIndex = filteredResults[i]\n\n        if (inputData[savedIndex].instruction == 'nop')\n            inputData[savedIndex].instruction = 'jmp'\n        else if (inputData[savedIndex].instruction == 'jmp')\n            inputData[savedIndex].instruction = 'nop'\n\n        Results = this.RunData(inputData)\n        \n        var accAmount = Results.shift()\n\n        if (inputData[inputData.length - 1].instruction == 'Finito') {\n            // We hit finish, save the record\n            this.SetResult(accAmount)\n            break\n        }\n        else {\n            if (inputData[savedIndex].instruction == 'nop')\n                inputData[savedIndex].instruction = 'jmp'\n            else if (inputData[savedIndex].instruction == 'jmp')\n                inputData[savedIndex].instruction = 'nop'\n\n            inputData.map(x => x.visited = false)\n            inputData[inputData.length - 1].visited = true\n        }\n    }\n\n},\nRunData(inputData) {\n\n    var Result = 0\n    var CurrentIndex = [0]\n    var breakOut = false\n\n    while(!breakOut) {\n        if (inputData[CurrentIndex[0]].visited) {\n            \n            if (inputData[CurrentIndex[0]].instruction == 'finished') {\n                inputData[CurrentIndex[0]].instruction = 'Finito'\n            }\n\n            breakOut = true\n\n            // For phase two, we need the route to result aswell. One of these will need to be changed for the phase two\n            // Unshift results to first so it can be shifted away\n            CurrentIndex.unshift(Result)\n            \n            return CurrentIndex\n        }\n\n        inputData[CurrentIndex[0]].visited = true;\n        \n        switch(inputData[CurrentIndex[0]].instruction) {\n            case 'nop':\n                CurrentIndex.unshift(CurrentIndex[0] +1)\n                break;\n            case 'acc':\n                Result += +inputData[CurrentIndex[0]].value\n                CurrentIndex.unshift(CurrentIndex[0] +1)\n                break;\n            case 'jmp':\n                CurrentIndex.unshift(CurrentIndex[0] + +inputData[CurrentIndex[0]].value)\n                break\n        }\n    }\n\n},",Hn={components:{"show-task":E},data:function(){return{CurrentInputData:Vn,CurrentTaskData:Gn,CurrentSolutionData:Yn,InputData:Vn,TaskResult:[]}},mounted:function(){this.Solve(Vn)},methods:{Solve:function(n){n=n.split("\n");for(var a=0;a<n.length;a++){var L=n[a].split(" ");n[a]={instruction:L[0],value:L[1],visited:!1}}var t=this.RunData(n);this.SetResult(t.shift()),n.push({instruction:"finished",value:"+0",visited:!0});for(var e=t.filter((function(a){return"nop"!=n[a].instruction||"jmp"!=n[a].instruction})),r=0;r<e.length;r++){var i=e[r];"nop"==n[i].instruction?n[i].instruction="jmp":"jmp"==n[i].instruction&&(n[i].instruction="nop"),t=this.RunData(n);var s=t.shift();if("Finito"==n[n.length-1].instruction){this.SetResult(s);break}"nop"==n[i].instruction?n[i].instruction="jmp":"jmp"==n[i].instruction&&(n[i].instruction="nop"),n.map((function(n){return n.visited=!1})),n[n.length-1].visited=!0}},RunData:function(n){var a=0,L=[0],t=!1;while(!t){if(n[L[0]].visited)return"finished"==n[L[0]].instruction&&(n[L[0]].instruction="Finito"),t=!0,L.unshift(a),L;switch(n[L[0]].visited=!0,n[L[0]].instruction){case"nop":L.unshift(L[0]+1);break;case"acc":a+=+n[L[0]].value,L.unshift(L[0]+1);break;case"jmp":L.unshift(L[0]+ +n[L[0]].value);break}}},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},$n=Hn,Xn=Object(c["a"])($n,_n,Mn,!1,null,null,null),Un=Xn.exports,Jn=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},Kn=[],Qn="13\n47\n42\n30\n4\n32\n5\n45\n16\n27\n49\n41\n7\n46\n2\n28\n33\n34\n35\n24\n20\n19\n25\n14\n36\n43\n21\n23\n63\n38\n9\n71\n11\n57\n13\n15\n16\n17\n18\n22\n26\n60\n33\n27\n28\n42\n30\n20\n25\n74\n101\n24\n51\n29\n31\n36\n108\n37\n39\n32\n67\n47\n49\n38\n44\n45\n66\n48\n50\n52\n53\n98\n54\n55\n65\n56\n60\n61\n114\n63\n68\n69\n70\n100\n108\n87\n131\n118\n94\n102\n159\n101\n103\n110\n220\n116\n109\n111\n115\n121\n117\n123\n168\n132\n138\n137\n169\n189\n181\n196\n240\n195\n296\n197\n203\n204\n214\n218\n219\n227\n254\n320\n226\n298\n317\n255\n260\n333\n269\n275\n306\n517\n378\n376\n398\n392\n478\n400\n619\n407\n481\n724\n437\n711\n618\n750\n738\n486\n623\n515\n524\n529\n544\n888\n581\n682\n754\n813\n768\n790\n792\n807\n1044\n1109\n1145\n918\n923\n952\n1030\n1138\n1001\n1420\n1010\n1322\n1039\n1105\n1283\n1125\n1263\n2247\n1436\n1522\n1560\n1558\n1582\n1599\n1725\n1841\n2707\n1870\n2597\n1875\n1953\n2011\n2040\n2049\n2115\n2135\n2388\n2764\n2541\n3970\n5406\n2785\n3142\n2958\n3881\n3118\n3140\n4582\n3469\n4266\n3711\n3823\n3745\n3828\n3964\n4089\n4126\n4155\n4590\n6290\n4523\n5857\n7851\n5326\n5743\n12033\n7722\n6786\n6076\n7626\n6258\n6609\n7180\n7534\n8230\n7456\n7568\n7573\n7792\n12112\n8215\n8281\n8678\n9113\n9849\n13438\n11069\n20894\n11402\n11819\n15160\n14714\n31963\n12334\n13714\n12867\n21082\n14636\n15024\n15029\n15141\n15360\n15365\n20100\n16893\n46677\n16959\n17791\n18962\n29610\n22471\n22888\n23736\n26581\n24153\n27363\n27503\n25201\n28743\n27891\n27896\n29660\n29996\n44256\n30506\n39096\n30725\n32258\n33852\n57506\n49354\n45702\n36753\n52704\n45359\n68409\n46624\n47889\n50734\n53944\n52564\n58397\n53092\n76084\n55787\n57892\n102148\n61231\n110210\n64358\n62983\n64577\n82455\n70605\n89317\n99328\n83377\n93248\n91983\n107855\n138607\n94513\n118521\n109731\n105656\n191465\n117669\n108879\n140442\n113679\n128935\n169933\n124214\n127341\n127560\n133588\n147954\n162588\n204244\n248297\n175360\n210937\n293881\n275295\n200169\n203392\n213034\n214535\n272168\n375529\n506915\n264656\n222558\n426802\n237893\n251555\n290148\n590064\n302920\n261148\n281542\n310542\n337948\n817457\n378752\n386297\n510711\n403561\n618096\n435592\n416426\n427569\n517455\n693709\n460451\n474113\n483706\n489448\n991568\n499041\n512703\n1117137\n571690\n542690\n592084\n619490\n724245\n716700\n795178\n875745\n789858\n819987\n831130\n1140671\n843995\n876877\n1247556\n934564\n944157\n1994014\n973154\n1061138\n1785383\n1011744\n1041731\n1134774\n1191180\n1850031\n1162180\n1211574\n2827114\n1440945\n1511878\n1585036\n1763012\n1985888\n1651117\n1675125\n3671109\n1778559\n2146518\n3438137\n2096744\n2646652\n2053475\n2325954\n2072882\n2173924\n2925192\n2809899\n2346348\n2837305\n2990133\n2652519\n4461016\n2952823\n3025981\n3096914\n3236153\n3326242\n3429676\n3875303\n3453684\n5183653\n4320442\n4126357\n7556595\n4150219\n4398836\n4890780\n4246806\n5627608\n4520272\n4998867\n5156247\n5299171\n6526590\n7201545\n6755918\n6262134\n5978804\n8625413\n6333067\n6562395\n8766083\n6883360\n11706814\n9432488\n8276576\n8446799\n10129023\n8397025\n8549055\n8767078\n15152943\n12055089\n9519139\n13286355\n13318313\n12788724\n16315848\n14527859\n17965938\n16691418\n12240938\n12311871\n19983390\n14959420\n27464814\n15280385\n15159936\n16673601\n16723375\n16825631\n19648162\n32003760\n21831010\n18068194\n18286217\n21574228\n39631552\n22805494\n25100595\n29003289\n24552809\n57699746\n26768797\n28914539\n29035246\n27200358\n30440321\n43405238\n44074475\n44836991\n36371537\n35111848\n33499232\n34791569\n34893825\n47289506\n36354411\n73077764\n39642422\n56686076\n46127037\n47358303\n47906089\n49653404\n51321606\n65406783\n55804043\n68290801\n74433991\n63571895\n57640679\n66794732\n135085533\n68393057\n85769459\n69685394\n114076413\n69853643\n91579901\n82799914\n92158454\n93040487\n87000725\n87548511\n152407508\n104998982\n138603957\n99227695\n113225299\n157233905\n113444722\n119375938\n121212574\n182027609\n124435411\n135187789\n136480126\n186228420\n152485308\n179706965\n196578883\n152653557\n291227402\n169800639\n289133683\n240033819\n174549236\n186776206\n192547493\n356029059\n305138865\n212452994\n304142376\n234657296\n232820660\n243811349\n254563727\n366379522\n287841346\n259623200\n271667915\n523790979\n322285947\n322454196\n404457935\n344349875\n327202793\n356576845\n382253633\n361325442\n367096729\n441339933\n419596866\n489221023\n445273654\n478468645\n476632009\n467477956\n487384387\n801850499\n503434549\n945946601\n531291115\n610127293\n628244760\n593953862\n644740143\n649488740\n649656989\n743579075\n683779638\n843728738\n717902287\n786693595\n1121372152\n854481116\n860936799\n1126120749\n912751610\n921905663\n944109965\n1095722716\n1277733500\n1097388411\n1034725664\n1113561842\n1159535875\n1125244977\n1204081155\n1489181559\n1238694005\n1809900387\n2731806050\n1333436627\n1561631025\n3013981542\n1787838703\n1504595882\n1715417915\n1767232726\n1773688409\n1782842462\n1834657273\n2125986818\n2047150640\n1978835629\n3076224040\n1639024365\n2238806819\n2148287506\n2273097717\n2284780852\n2329326132\n4252675547\n2572130632\n4970612869\n2895067652\n3765011183\n3066226907\n3143620247\n3954224734\n3220013797\n6019908273\n7147743199\n4557878569\n3608345682\n5737067196\n3877831184\n3617859994\n3686175005\n6400963053\n3787311871\n5935599377\n6761480241\n5970955857\n11756975469\n4856911484\n4901456764\n5467198284\n6674572589\n5961294559\n7174238531\n6837873791\n6209847154\n6751965929\n11438154141\n6828359479\n13575201584\n12808829648\n7226205676\n7294520687\n7304034999\n7564006189\n7405171865\n10087138058\n8644223355\n14699692552\n20869722271\n11618391725\n16915497537\n9758368248\n15938744042\n14659825012\n11428492843\n12171141713\n19560795577\n12961813083\n13038206633\n13513882153\n14157137794\n14054565155\n19735147902\n14520726363\n14530240675\n14598555686\n14709206864\n14868041188\n14969178054\n19845506306\n24467575112\n21376759973\n21186861091\n26673865785\n22720181331\n21929509961\n22796574881\n23599634556\n24390305926\n35896067955\n25132954796\n26000019716\n26475695236\n29239447539\n28034608516\n28584805830\n28575291518\n29050967038\n55913313324\n41074250922\n29567733740\n29577248052\n29837219242\n34814684360\n41032367397\n42563621064\n49411368489\n43116371052\n46319815887\n68249325848\n53176882608\n51847541919\n47989940482\n50390325642\n54034628232\n51132974512\n52475714952\n54510303752\n96598249296\n56609900034\n57160097348\n59404952982\n95039336016\n81415275659\n59144981792\n88982201034\n59414467294\n64651903602\n75847051757\n93506696694\n111120203786\n89436186939\n91106311534\n109795278624\n101523300154\n107404407776\n156003202278\n98380266124\n126980026269\n103608689464\n105643278264\n156012716590\n115754881826\n113769997382\n116014853016\n175159834808\n118549934774\n165283238696\n118559449086\n123796885394\n160937767448\n140498955359\n154088090541\n184613008228\n187816453063\n180542498473\n196840594715\n219623542480\n204023544388\n271758084104\n216939715210\n201988955588\n209251967728\n304339383867\n303571334889\n219413275646\n404026283874\n229524879208\n242346820168\n291174687824\n237109383860\n242356334480\n294587045900\n345550775676\n425846174645\n349750923087\n328315408422\n334630589014\n365155506701\n389794466201\n377383093188\n513591351595\n498610590288\n718023865934\n680181364690\n680954428077\n411240923316\n471881213688\n461769610126\n448938154854\n456522659506\n466634263068\n471871699376\n812185038744\n863342274682\n479465718340\n587907110156\n1310795629032\n714906429788\n887615784771\n662945997436\n693470915123\n754949972902\n821678166207\n935988377846\n788624016504\n1356416912559\n909851513604\n867763582822\n860179078170\n920819368542\n918292269632\n1567135011646\n915572417922\n1731529679811\n923156922574\n938505962444\n1451570013940\n1342807993022\n1268089734844\n1067372828496\n2619145464582\n1377852427224\n1408377344911\n1417895970338\n2826273315249\n1841449192206\n1576628139109\n1656387599326\n2908822020702\n1648803094674\n1777615096426\n1727942660992\n1775751496092\n2475750173407\n2333468388260\n2374726936514\n1854078380366\n1861662885018\n1990529751070\n2005878790940\n2410180821518\n2335462563340\n2485268798834\n2645942162068\n2445225255720\n2786229772135\n2985005484020\n2994524109447\n3193647466430\n3354243235535\n4111214059432\n3582506930049\n3766281247162\n3733821451932\n3376745755666\n3503694157084\n4365256687584\n4979410550328\n4228805316880\n7354137486842\n3715741265384\n3844608131436\n5756810998232\n3996408542010\n4341341354280\n4745643384858\n4780687819060\n4930494054554\n6718826935952\n7845035511364\n5780753881582\n5979529593467\n6570393222096\n9483223750551\n8696775301716\n6880439912750\n6959252685715\n9344667237912\n7092487021050\n11109245229630\n8080997952968\n7560349396820\n9625362013018\n8073413448316\n18669594626450\n8461384650242\n7841016673446\n13529645907811\n8337749896290\n10911734576376\n9526331203918\n16891264169843\n10711247936136\n11760283475049\n15641347349788\n14800269359161\n15341824562992\n13450833134846\n13839692598465\n13972926933800\n14051739706765\n14519602082535\n14652836417870\n14933503694496\n15898099293110\n16534798098558\n22213185814690\n15914430121762\n16302401323688\n16178766569736\n16799134546532\n19048997832426\n24872547994848\n36732787897225\n22471531411185\n28571341789300\n24162081070982\n28792657697838\n25211116609895\n27290525733311\n27423760068646\n29753234458534\n27812619532265\n27891432305230\n44089660279843\n28704576124635\n29172438500405\n29586340112366\n30847933816258\n31812529414872\n32977901116268\n32093196691498\n39270665957717\n44222894615178\n35227764402162\n35848132378958\n41520529243611\n52057871523551\n88312554895021\n46633612482167\n49373197680877\n53102548915125\n52501642343206\n52634876678541\n121290456011289\n63040383934427\n55704051837495\n71363862649215\n56596008429865\n65071097807766\n74498430359879\n70118599773975\n60434273928624\n82481744861125",Zn="--- Day 9: Encoding Error ---\nWith your neighbor happily enjoying their video game, you turn your attention to an open data port on the little screen in the seat in front of you.\n\nThough the port is non-standard, you manage to connect it to your computer through the clever use of several paperclips. \nUpon connection, the port outputs a series of numbers (your puzzle input).\n\nThe data appears to be encrypted with the eXchange-Masking Addition System (XMAS) which, conveniently for you, is an old cypher with an important weakness.\n\nXMAS starts by transmitting a preamble of 25 numbers. After that, each number you receive should be the sum of any two of the 25 immediately previous numbers. \nThe two numbers will have different values, and there might be more than one such pair.\n\nFor example, suppose your preamble consists of the numbers 1 through 25 in a random order. To be valid, the next number must be the sum of two of those numbers:\n\n26 would be a valid next number, as it could be 1 plus 25 (or many other pairs, like 2 and 24).\n49 would be a valid next number, as it is the sum of 24 and 25.\n100 would not be valid; no two of the previous 25 numbers sum to 100.\n50 would also not be valid; although 25 appears in the previous 25 numbers, the two numbers in the pair must be different.\nSuppose the 26th number is 45, and the first number (no longer an option, as it is more than 25 numbers ago) was 20. Now, for the next number to be valid, \nthere needs to be some pair of numbers among 1-19, 21-25, or 45 that add up to it:\n\n26 would still be a valid next number, as 1 and 25 are still within the previous 25 numbers.\n65 would not be valid, as no two of the available numbers sum to it.\n64 and 66 would both be valid, as they are the result of 19+45 and 21+45 respectively.\nHere is a larger example which only considers the previous 5 numbers (and has a preamble of length 5):\n\n35\n20\n15\n25\n47\n40\n62\n55\n65\n95\n102\n117\n150\n182\n127\n219\n299\n277\n309\n576\nIn this example, after the 5-number preamble, almost every number is the sum of two of the previous 5 numbers; the only number that does not follow this rule is 127.\n\nThe first step of attacking the weakness in the XMAS data is to find the first number in the list (after the preamble) which is not the sum of two of the 25 numbers \nbefore it. What is the first number that does not have this property?\n\n--- Part Two ---\nThe final step in breaking the XMAS encryption relies on the invalid number you just found: you must find a contiguous set of at least \ntwo numbers in your list which sum to the invalid number from step 1.\n\nAgain consider the above example:\n\n35\n20\n15\n25\n47\n40\n62\n55\n65\n95\n102\n117\n150\n182\n127\n219\n299\n277\n309\n576\nIn this list, adding up all of the numbers from 15 through 40 produces the invalid number from step 1, 127. \n(Of course, the contiguous set of numbers in your actual list might be much longer.)\n\nTo find the encryption weakness, add together the smallest and largest number in this contiguous range; in this example, these are 15 and 47, producing 62.\n\nWhat is the encryption weakness in your XMAS-encrypted list of numbers?\n\n",na="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n    \n    inputData = inputData.split('\\n')\n\n    var preambleValue = 25\n    var startingIndex = preambleValue\n\n    // Save the result for Phase 2\n    var foundValue = 0\n\n    for (let i = startingIndex; i < inputData.length; i++) {\n        if (this.FindSum(inputData, inputData[i], i, preambleValue))\n            continue\n\n        foundValue = inputData[i]\n        this.SetResult(inputData[i])\n        break\n    }\n\n    var PhaseTwoResult = 0;\n\n    for (let i = 0; i < inputData.length; i++) {\n        PhaseTwoResult = this.FindSumFromGroup(inputData, foundValue, i)\n\n        if (PhaseTwoResult) {\n            this.SetResult(+Math.min(...PhaseTwoResult) + +Math.max(...PhaseTwoResult))\n            break;\n        }\n    }\n\n},\nFindSum(inputData, sumToFind, startIndex, length) {\n\n    for (let i = 1; i < length+1; i++) {\n        for (let j = i+1; j < length+1; j++) {\n            if (+inputData[startIndex - i] + +inputData[startIndex - j] == sumToFind)\n                return true\n        }\n    }\n\n    return false\n},\nFindSumFromGroup(inputData, sumToFind, startingIndex) {\n        var result = +inputData[startingIndex]\n\n        for (let i = startingIndex + 1; i < inputData.length; i++) {\n            result += +inputData[i]\n\n            if (result == sumToFind) {\n                return inputData.slice(startingIndex, i+1)\n            }\n            \n            if (result > sumToFind)\n                return null;\n        }\n},",aa={components:{"show-task":E},data:function(){return{CurrentInputData:Qn,CurrentTaskData:Zn,CurrentSolutionData:na,InputData:Qn,TaskResult:[]}},mounted:function(){this.Solve(Qn)},methods:{Solve:function(n){n=n.split("\n");for(var a=25,L=a,t=0,e=L;e<n.length;e++)if(!this.FindSum(n,n[e],e,a)){t=n[e],this.SetResult(n[e]);break}for(var r=0,i=0;i<n.length;i++)if(r=this.FindSumFromGroup(n,t,i),r){this.SetResult(+Math.min.apply(Math,Object(_["a"])(r))+ +Math.max.apply(Math,Object(_["a"])(r)));break}},FindSum:function(n,a,L,t){for(var e=1;e<t+1;e++)for(var r=e+1;r<t+1;r++)if(+n[L-e]+ +n[L-r]==a)return!0;return!1},FindSumFromGroup:function(n,a,L){for(var t=+n[L],e=L+1;e<n.length;e++){if(t+=+n[e],t==a)return n.slice(L,e+1);if(t>a)return null}},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},La=aa,ta=Object(c["a"])(La,Jn,Kn,!1,null,null,null),ea=ta.exports,ra=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},ia=[],sa=(L("a434"),"151\n94\n14\n118\n25\n143\n33\n23\n80\n95\n87\n44\n150\n39\n148\n51\n138\n121\n70\n69\n90\n155\n144\n40\n77\n8\n97\n45\n152\n58\n65\n63\n128\n101\n31\n112\n140\n86\n30\n55\n104\n135\n115\n16\n26\n60\n96\n85\n84\n48\n4\n131\n54\n52\n139\n76\n91\n46\n15\n17\n37\n156\n134\n98\n83\n111\n72\n34\n7\n108\n149\n116\n32\n110\n47\n157\n75\n13\n10\n145\n1\n127\n41\n53\n2\n3\n117\n71\n109\n105\n64\n27\n38\n59\n24\n20\n124\n9\n66"),oa="--- Day 10: Adapter Array ---\nPatched into the aircraft's data port, you discover weather forecasts of a massive tropical storm. \nBefore you can figure out whether it will impact your vacation plans, however, your device suddenly turns off!\n\nIts battery is dead.\n\nYou'll need to plug it in. There's only one problem: the charging outlet near your seat produces the wrong number of jolts. \n\nAlways prepared, you make a list of all of the joltage adapters in your bag.\n\nEach of your joltage adapters is rated for a specific output joltage (your puzzle input). Any given adapter can take an \ninput 1, 2, or 3 jolts lower than its rating and still produce its rated output joltage.\n\nIn addition, your device has a built-in joltage adapter rated for 3 jolts higher than the highest-rated adapter in your bag. \n(If your adapter list were 3, 9, and 6, your device's built-in adapter would be rated for 12 jolts.)\n\nTreat the charging outlet near your seat as having an effective joltage rating of 0.\n\nSince you have some time to kill, you might as well test all of your adapters. Wouldn't want to get to your resort and realize you can't even charge your device!\n\nIf you use every adapter in your bag at once, what is the distribution of joltage differences between the charging outlet, the adapters, and your device?\n\nFor example, suppose that in your bag, you have adapters with the following joltage ratings:\n\n16\n10\n15\n5\n1\n11\n7\n19\n6\n12\n4\nWith these adapters, your device's built-in joltage adapter would be rated for 19 + 3 = 22 jolts, 3 higher than the highest-rated adapter.\n\nBecause adapters can only connect to a source 1-3 jolts lower than its rating, in order to use every adapter, you'd need to choose them like this:\n\nThe charging outlet has an effective rating of 0 jolts, so the only adapters that could connect to it directly would need to have a joltage rating of 1, 2, or 3 jolts. \nOf these, only one you have is an adapter rated 1 jolt (difference of 1).\nFrom your 1-jolt rated adapter, the only choice is your 4-jolt rated adapter (difference of 3).\nFrom the 4-jolt rated adapter, the adapters rated 5, 6, or 7 are valid choices. However, in order to not skip any adapters, you have to pick the adapter rated 5 jolts (difference of 1).\nSimilarly, the next choices would need to be the adapter rated 6 and then the adapter rated 7 (with difference of 1 and 1).\nThe only adapter that works with the 7-jolt rated adapter is the one rated 10 jolts (difference of 3).\nFrom 10, the choices are 11 or 12; choose 11 (difference of 1) and then 12 (difference of 1).\nAfter 12, only valid adapter has a rating of 15 (difference of 3), then 16 (difference of 1), then 19 (difference of 3).\nFinally, your device's built-in adapter is always 3 higher than the highest adapter, so its rating is 22 jolts (always a difference of 3).\nIn this example, when using every adapter, there are 7 differences of 1 jolt and 5 differences of 3 jolts.\n\nHere is a larger example:\n\n28\n33\n18\n42\n31\n14\n46\n20\n48\n47\n24\n23\n49\n45\n19\n38\n39\n11\n1\n32\n25\n35\n8\n17\n7\n9\n4\n2\n34\n10\n3\nIn this larger example, in a chain that uses all of the adapters, there are 22 differences of 1 jolt and 10 differences of 3 jolts.\n\nFind a chain that uses all of your adapters to connect the charging outlet to your device's built-in adapter and count the joltage differences between the charging outlet, \nthe adapters, and your device. What is the number of 1-jolt differences multiplied by the number of 3-jolt differences?\n\n--- Part Two ---\nTo completely determine whether you have enough adapters, you'll need to figure out how many different ways they can be arranged. \nEvery arrangement needs to connect the charging outlet to your device. The previous rules about when adapters can successfully connect still apply.\n\nThe first example above (the one that starts with 16, 10, 15) supports the following arrangements:\n\n(0), 1, 4, 5, 6, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 5, 6, 7, 10, 12, 15, 16, 19, (22)\n(0), 1, 4, 5, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 5, 7, 10, 12, 15, 16, 19, (22)\n(0), 1, 4, 6, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 6, 7, 10, 12, 15, 16, 19, (22)\n(0), 1, 4, 7, 10, 11, 12, 15, 16, 19, (22)\n(0), 1, 4, 7, 10, 12, 15, 16, 19, (22)\n(The charging outlet and your device's built-in adapter are shown in parentheses.) Given the adapters from the first example, \nthe total number of arrangements that connect the charging outlet to your device is 8.\n\nThe second example above (the one that starts with 28, 33, 18) has many arrangements. Here are a few:\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 47, 48, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 47, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 48, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 46, 49, (52)\n\n(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 23, 24, 25, 28, 31,\n32, 33, 34, 35, 38, 39, 42, 45, 47, 48, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n46, 48, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n46, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n47, 48, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n47, 49, (52)\n\n(0), 3, 4, 7, 10, 11, 14, 17, 20, 23, 25, 28, 31, 34, 35, 38, 39, 42, 45,\n48, 49, (52)\nIn total, this set of adapters can connect the charging outlet to your device in 19208 distinct arrangements.\n\nYou glance back down at your bag and try to remember why you brought so many adapters; there must be more than a trillion valid ways to arrange them! \nSurely, there must be an efficient way to count the arrangements.\n\nWhat is the total number of distinct ways you can arrange the adapters to connect the charging outlet to your device?\n\n",la="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n\n    inputData = inputData.split('\\n')\n\n    inputData.sort((x, y) => {\n        return +x < +y ? -1 : 1\n    })\n\n    inputData.unshift(0)\n    inputData.push((+inputData[inputData.length - 1] + 3))\n\n    var calculatedData = {\n        1: 0,\n        2: 0,\n        3: 0\n    }\n    \n    for (let i = 1; i < inputData.length; i++) {\n        for (let j = i - 1; j >= i-2; j--) {\n            \n            var diff = +inputData[i] - +inputData[j]\n\n            if (diff > 3)\n                break;\n\n            if (diff == 1 || diff == 3)\n                calculatedData[diff] += 1\n\n        }\n    }\n    this.SetResult(calculatedData[1] * calculatedData[3])\n\n\n    // Split data so it can be handled with recursion.\n    var splittedInputData =[]\n\n    for (let i = 1; i < inputData.length - 1; i++) {\n        if (+inputData[i] - +inputData[i-1] >= 3) {\n            splittedInputData.push(inputData.splice(0, i))\n            i = 0\n        }\n    }\n    splittedInputData.push(inputData.splice(0))\n    \n    var Result = 1\n\n    for (let i = 0; i < splittedInputData.length; i++) {\n        Result *= this.CalculatePossibilities(splittedInputData[i], [splittedInputData[i]], 1).length\n    }\n\n    this.SetResult(Result)\n},\nCalculatePossibilities(inputData, results, idx) {\n    for (let i = idx; i < inputData.length - 1; i++) {\n        \n        if (+inputData[i+1] - +inputData[i-1] <= 3) {\n            var removedItem = inputData.splice(i, 1)\n\n            results.push(inputData.slice(0))\n            \n            this.CalculatePossibilities(inputData, results, i)\n\n            inputData.splice(i,0,+removedItem)\n        }\n    }\n    \n    return results\n},",ca={components:{"show-task":E},data:function(){return{CurrentInputData:sa,CurrentTaskData:oa,CurrentSolutionData:la,InputData:sa,TaskResult:[]}},mounted:function(){this.Solve(sa)},methods:{Solve:function(n){n=n.split("\n"),n.sort((function(n,a){return+n<+a?-1:1})),n.unshift(0),n.push(+n[n.length-1]+3);for(var a={1:0,2:0,3:0},L=1;L<n.length;L++)for(var t=L-1;t>=L-2;t--){var e=+n[L]-+n[t];if(e>3)break;1!=e&&3!=e||(a[e]+=1)}this.SetResult(a[1]*a[3]);for(var r=[],i=1;i<n.length-1;i++)+n[i]-+n[i-1]>=3&&(r.push(n.splice(0,i)),i=0);r.push(n.splice(0));for(var s=1,o=0;o<r.length;o++)s*=this.CalculatePossibilities(r[o],[r[o]],1).length;this.SetResult(s)},CalculatePossibilities:function(n,a,L){for(var t=L;t<n.length-1;t++)if(+n[t+1]-+n[t-1]<=3){var e=n.splice(t,1);a.push(n.slice(0)),this.CalculatePossibilities(n,a,t),n.splice(t,0,+e)}return a},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},ga=ca,ba=Object(c["a"])(ga,ra,ia,!1,null,null,null),da=ba.exports,ha=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},pa=[],ua="LLLLLLLLL.L.LLLL.LLLL.LLLLLLLL.LLLLLLLLLLLLL.LLLL.LLLLLL.LLLL..LLLLLL.LLLLLLLL.LLLLL.LL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLL..LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLL.LLLLLL.LLLLLLLLLLLLLLL..LL.LLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLL..LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLL.LLLLL.LLLLLLLLLL..LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLL.LLLL.LLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLL.LLLL.LLLLLLLLLL..LLLL.L.LLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLL.LLLLLL.LLLLLL.LLLLLLLLLLL.LLLLLLLLLL.L.LLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LL.L.LLLL.L.LLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLL\n......L.L.L....LL.L.L..L.L..LL...L......LL..L.....L.LL.LLLL.LL.L..LL........L..LL.LLL.L..L.LL.L..L\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLLLLL.L.LLLLLLLLLLLLLL.LLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLL.L.LL.LLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLL.LLLL.LLL.LLLLL.LL.LLLLLLLLL.LLLLLL.LLL..LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLL.L.LLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLL.LL.LLLLL.LLLLLLLL.LLLLLLLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLL.L...LLLLLLLL\nLLLLLLLLLLLLLLLL.LLLL.LLLL..LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLL.LLLLL.LLLLLLLLL.LLLL.LLLLLLLLLLLLL.L\nLLLLLLLL..LL.LLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLL.LLL.LLLLLLLLLLLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLL.LLLL.LL.LLLLLLLLLLLLLLLLLLLL\nLL..L.....L..L.L...LL...........LLL.L.L..L.L.....LL....LL....L...L...L..LL.L...LL.LL.LLL.L.L.LL.L.\nLLLLLLL.L.LLLLLL.LLL.LLLLLLLLLLLLLLLLLL.LLLL.LL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLL.LL.LLLL.LLLLLLLL.LLLLLLLL.LLLLLL.LL.LLLL.LLLLLL.LLLLLLL.LLLLLLLLLLLLLLLL.LLL.LLLLLLL\n.LLLLLLLL.LLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLL.LLLL.LLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLL.LL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLL.LLL.LLLLL.LLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLL.LLLLLL.L.LL.LLLLLLL.LLLLLLLLL.LLLLLLL.LLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLL..LLL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.L.LL.LLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLL.LL.LLL.LLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL..LLLLLLL.LLLL.LLLL.LLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL\n.L..L..L..........L...L.LL..L...LL....LL..LL..L...L.LL.L.L..LLLL..L.L....L.......LL........L.L..L.\nLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LL.LLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LL.LLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLL.LLLL.LLLL.L.LLLL.LLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL..LLL.LLLL.LLLLLLLLLLL.LLL.LLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLL.LL.LL.LLL.LLLL.LLLLLLLL.LLLLLLLLLLLLL.LLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLL.LL.LLLLLLLLLLLL\nLLLLLLL.L.LLL..LL.LLLLLLLLLLLL.LLLLLLLLL.LLL.LLLL.LLLLL..LLLL..LLLL.L.LLLLLLL.LLLLLL.LL.LLLLLLLLLL\nL.LL...L..L..L.....L...L..LL...L..LL.L.....LL.LL.L...LL.LL...L....LLL.L..LL.L.L.LL..L..LL.L.L.L..L\nLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLL..LLLLLL.LLLL.LLLLLLLL.LL.LLLLL.LLLL.LL.L.LLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.L.LLL.LLLL\nLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLL..LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL..LLLLLLLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL..LLL.LL..L.L.LLL.LLL.LLLLLLLLL.LLLLLLLLLL\nL...LLL.L......LL....L.......L..L.LLL..LL.LL.L.....LL.LL.L....L.L....LL....L....LL...L.L.....L....\nLLLLLLLLL.LLLLLL.L.LL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LL.LLLLLLLL.LLL.LLLLLLLLL..LL.LLLL.LLLLLLLLLLL..L.L.LLLLLLL.LL.LLLL.LLLLLLLLL.LLLLLLLLLL\n....L.L..L.L...L....L..L...L.LLL...L..LL.L..L.LL.L....L.................L...LL.LL......L...L...LL.\nLLLLLLLLL.LLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLL..LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.L.LL.LLLL.LLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LL.LLLLL.LLLLLLLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL\n.....L.LLLL.L.........LL.L..L...LL..LLL..L......LLL.....L.......L.LL.L.L........L...LLLLLL.L..LLL.\nLLLL.LLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLL.LLLL.LLLL.LLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLLLL.LLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.L.LLLLLL.LLLLLLLLLLLLL.LL.L.LLLLLLL.LLL.L.LLLLLLLLLLLLL.LLLLLL.LL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLL..LLLLLLLLLL.LLLLL.L.LLLLLLL.LLLLLLLLL.LLLLL.LLLL\nLLLL.....L.L...L.....L..L.L..L......LL..L...LL...L.LLL.L.L..L....L......LL.LL.L..L.L....L...LL..LL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLL.L\nLLLLLLLLL.L.LLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLL.LL.LLL..LLLLLLLLLLL.L.LLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLLLLLLLL.LL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLL.LL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LL.L..LLL.LLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL..LLLLLLLLLLL.LLLL.LLLLLLL.LLLLLLLLLLLLLLL.L.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.L.LL.LLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLLLLLLLLL.LLLL.LLLLLLLL.LLLLLLLL.L.LLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLL.LL.LLLLLLLLLLLLLLLLLLLL\n..LL.LL...L....LLLLL.....L.L..LL.L...LLLL.............L..L.LLL..........L.L...LL..LL.....LL.......\nLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LL.LLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLL..LLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLL.LLLLLLLLLLLLLL.LL.LLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLLLL.LLL.LLLLL.LLL.LLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLLLL.LLLL.LLLL.LLLLLLL.LLL.LL..LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LL.LLL.LLLL.LLLL.LLL.LLLLLLLLLLLLLLLLLL.LLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL..LLLLLLLLLL\n..LLLL.LLL...LLLLL..........L...L......L..LL.....L..L..L..L.L..L..L.L..L.......L..L....LL.L.L.L.L.\nLLLLLL.LL.LLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLL.LLL.LL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLL.L.LLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLL..LLLL..LLLLLLLLLLLLLLLLLLLLLLLLLL.LLL.LLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLL.LLL.LLLLLLLLLLLLL.LLLL.LLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLL..LLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLL.LLL..LLLL.LLL.LL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LL.LLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLL.LLLL.LLLLLLLLLL\nLLLLLLLLLLLLLLLL.LLLL.LLLLLLLL.LLLLLLLL.LLLL.LLL..LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL...LLLLLLLLL\nL.LLLLLLL.LLLLLLL.LLL.LLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLL.LLLLLLLLLLL.L\nLLLLLLL.L.LLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLL.LLLLLL..LLLLLLLLLL..LLLLLLL.LLLLLLLLLLLLLLLLLLLL\n.LL...............L..L.L.LL...L.LL.....LL..L.LL.L.L...L.......L..L.LL..L.L...LL...L...............\nLLLLLLLLL.LLLLLL..LLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLL.LLLL.LLLLLLLLLLLLL.LLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLL.L.LLLLLLLLLLL.LL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLL.LLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLL.L.LLL.LLLLLL.LLL.LLLL.L.LLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLL.LLLLLLLL.LL.LLL.LLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLLLLLLLLLLL.LLLLLL.LL.LLLLL.LLLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL\nL.LLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLL.LLLL.LLLLLL.LLLL.LLLLLL..LLLLLLL.LLLLLLLLL.LLLLLLLLLL",Fa="--- Day 11: Seating System ---\nYour plane lands with plenty of time to spare. The final leg of your journey is a ferry that goes directly to the tropical island where you can \nfinally start your vacation. As you reach the waiting area to board the ferry, you realize you're so early, nobody else has even arrived yet!\n\nBy modeling the process people use to choose (or abandon) their seat in the waiting area, you're pretty sure you can predict the best place to sit. \nYou make a quick map of the seat layout (your puzzle input).\n\nThe seat layout fits neatly on a grid. Each position is either floor (.), an empty seat (L), or an occupied seat (#). For example, the initial seat layout might look like this:\n\nL.LL.LL.LL\nLLLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL\nNow, you just need to model the people who will be arriving shortly. Fortunately, people are entirely predictable and always follow a simple set of rules. \nAll decisions are based on the number of occupied seats adjacent to a given seat (one of the eight positions immediately up, down, left, right, or \ndiagonal from the seat). The following rules are applied to every seat simultaneously:\n\nIf a seat is empty (L) and there are no occupied seats adjacent to it, the seat becomes occupied.\nIf a seat is occupied (#) and four or more seats adjacent to it are also occupied, the seat becomes empty.\nOtherwise, the seat's state does not change.\nFloor (.) never changes; seats don't move, and nobody sits on the floor.\n\nAfter one round of these rules, every seat in the example layout becomes occupied:\n\n#.##.##.##\n#######.##\n#.#.#..#..\n####.##.##\n#.##.##.##\n#.#####.##\n..#.#.....\n##########\n#.######.#\n#.#####.##\nAfter a second round, the seats with four or more occupied adjacent seats become empty again:\n\n#.LL.L#.##\n#LLLLLL.L#\nL.L.L..L..\n#LLL.LL.L#\n#.LL.LL.LL\n#.LLLL#.##\n..L.L.....\n#LLLLLLLL#\n#.LLLLLL.L\n#.#LLLL.##\nThis process continues for three more rounds:\n\n#.##.L#.##\n#L###LL.L#\nL.#.#..#..\n#L##.##.L#\n#.##.LL.LL\n#.###L#.##\n..#.#.....\n#L######L#\n#.LL###L.L\n#.#L###.##\n#.#L.L#.##\n#LLL#LL.L#\nL.L.L..#..\n#LLL.##.L#\n#.LL.LL.LL\n#.LL#L#.##\n..L.L.....\n#L#LLLL#L#\n#.LLLLLL.L\n#.#L#L#.##\n#.#L.L#.##\n#LLL#LL.L#\nL.#.L..#..\n#L##.##.L#\n#.#L.LL.LL\n#.#L#L#.##\n..L.L.....\n#L#L##L#L#\n#.LLLLLL.L\n#.#L#L#.##\nAt this point, something interesting happens: the chaos stabilizes and further applications of these rules cause no seats to change state! \nOnce people stop moving around, you count 37 occupied seats.\n\nSimulate your seating area by applying the seating rules repeatedly until no seats change state. How many seats end up occupied?\n\n--- Part Two ---\nAs soon as people start to arrive, you realize your mistake. People don't just care about adjacent seats - they care about the first seat they can see in each of those eight directions!\n\nNow, instead of considering just the eight immediately adjacent seats, consider the first seat in each of those eight directions. For example, the empty seat below would see eight occupied seats:\n\n.......#.\n...#.....\n.#.......\n.........\n..#L....#\n....#....\n.........\n#........\n...#.....\nThe leftmost empty seat below would only see one empty seat, but cannot see any of the occupied ones:\n\n.............\n.L.L.#.#.#.#.\n.............\nThe empty seat below would see no occupied seats:\n\n.##.##.\n#.#.#.#\n##...##\n...L...\n##...##\n#.#.#.#\n.##.##.\nAlso, people seem to be more tolerant than you expected: it now takes five or more visible occupied seats for an occupied seat to become empty (rather than four or more from the previous rules). \nThe other rules still apply: empty seats that see no occupied seats become occupied, seats matching no rule don't change, and floor never changes.\n\nGiven the same starting layout as above, these new rules cause the seating area to shift around as follows:\n\nL.LL.LL.LL\nLLLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL\n#.##.##.##\n#######.##\n#.#.#..#..\n####.##.##\n#.##.##.##\n#.#####.##\n..#.#.....\n##########\n#.######.#\n#.#####.##\n#.LL.LL.L#\n#LLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLL#\n#.LLLLLL.L\n#.LLLLL.L#\n#.L#.##.L#\n#L#####.LL\nL.#.#..#..\n##L#.##.##\n#.##.#L.##\n#.#####.#L\n..#.#.....\nLLL####LL#\n#.L#####.L\n#.L####.L#\n#.L#.L#.L#\n#LLLLLL.LL\nL.L.L..#..\n##LL.LL.L#\nL.LL.LL.L#\n#.LLLLL.LL\n..L.L.....\nLLLLLLLLL#\n#.LLLLL#.L\n#.L#LL#.L#\n#.L#.L#.L#\n#LLLLLL.LL\nL.L.L..#..\n##L#.#L.L#\nL.L#.#L.L#\n#.L####.LL\n..#.#.....\nLLL###LLL#\n#.LLLLL#.L\n#.L#LL#.L#\n#.L#.L#.L#\n#LLLLLL.LL\nL.L.L..#..\n##L#.#L.L#\nL.L#.LL.L#\n#.LLLL#.LL\n..#.L.....\nLLL###LLL#\n#.LLLLL#.L\n#.L#LL#.L#\nAgain, at this point, people stop shifting around and the seating area reaches equilibrium. Once this occurs, you count 26 occupied seats.\n\nGiven the new visibility method and the rule change for occupied seats becoming empty, once equilibrium is reached, how many seats end up occupied?\n\n",ma="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n\n    var PhaseTwoInputData = inputData.slice(0)\n    inputData = inputData.split('\\n')\n    PhaseTwoInputData = PhaseTwoInputData.split('\\n')\n\n    for (let i = 0; i < inputData.length; i++) {\n        inputData[i] = inputData[i].split('')\n        PhaseTwoInputData[i] = PhaseTwoInputData[i].split('')\n    }\n\n    var resultChanged = true\n    var Rounds = 0\n    // Phase 1\n    while (resultChanged && Rounds < 10000) {\n        resultChanged = false\n        var nextRoundData = []\n\n        for (let i = 0; i < inputData.length; i++) {\n            nextRoundData.push(inputData[i].slice(0)) // new data\n        }\n        \n        for (let y = 0; y < inputData.length; y++) {\n            for (let x = 0; x < inputData[y].length; x++) {\n                if (inputData[y][x] == 'L') {\n                    if (this.FindAdjacentOccupiedAmount(x, y, inputData) == 0) {\n                        nextRoundData[y][x] = '#'\n                    }\n                }\n                else if (inputData[y][x] == '#') {\n                    if (this.FindAdjacentOccupiedAmount(x, y, inputData) >= 4) {\n                        nextRoundData[y][x] = 'L'\n                    }\n                }\n\n                if (!resultChanged)\n                    resultChanged = nextRoundData[y][x] != inputData[y][x]\n            }\n        }\n\n        inputData = []\n        for (let i = 0; i < nextRoundData.length; i++) {\n            inputData.push(nextRoundData[i].slice(0))\n        }\n\n        Rounds++\n    }\n\n    // inputData = inputData.join('')\n    // console.log(inputData)\n    inputData = inputData.join('').split('')\n    this.SetResult(inputData.filter((x) => x == \"#\").length)\n\n    // Phase 2\n    resultChanged = true\n    Rounds = 0\n    while (resultChanged && Rounds < 1000) {\n        resultChanged = false\n        nextRoundData = []\n\n        for (let i = 0; i < PhaseTwoInputData.length; i++) {\n            nextRoundData.push(PhaseTwoInputData[i].slice(0))\n        }\n\n        for (let y = 0; y < PhaseTwoInputData.length; y++) {\n            for (let x = 0; x < PhaseTwoInputData[y].length; x++) {\n                if (PhaseTwoInputData[y][x] == 'L') {\n                    if (this.FindForwardOccupiedAmount(x, y, PhaseTwoInputData) == 0) {\n                        nextRoundData[y][x] = '#'\n                    }\n                }\n                else if (PhaseTwoInputData[y][x] == '#') {\n                    if (this.FindForwardOccupiedAmount(x, y, PhaseTwoInputData) >= 5) {\n                        nextRoundData[y][x] = 'L'\n                    }\n                }\n\n                if (!resultChanged)\n                    resultChanged = nextRoundData[y][x] != PhaseTwoInputData[y][x]\n            }\n        }\n\n        PhaseTwoInputData = []\n        for (let i = 0; i < nextRoundData.length; i++) {\n            PhaseTwoInputData.push(nextRoundData[i].slice(0))\n        }\n        \n        Rounds++\n    }\n\n    PhaseTwoInputData = PhaseTwoInputData.join('').split('')\n    this.SetResult(PhaseTwoInputData.filter((x) => x == '#').length)\n},\nFindAdjacentOccupiedAmount(x, y, inputData) {\n    var result = []\n    for (let i = y-1; i <= y+1; i++) {\n        if (i < 0 || i >= inputData.length) {\n            continue\n        }\n\n        for (let j = x-1; j <= x+1; j++) {\n            \n            if (j < 0 || j >= inputData[i].length) {\n                continue\n            }\n                \n            if (i != y || j != x) {\n                result.push(inputData[i][j])\n            }\n        }\n    }\n    result = result.filter((x) => x == '#')\n    \n    return result ? result.length : 0\n},\nFindForwardOccupiedAmount(x, y, inputData) {\n    var result = []\n    for (let xD = -1; xD <= 1; xD++) {\n        for (let yD = -1; yD <= 1; yD++){\n            if (xD == 0 && yD == 0)\n                continue\n\n            result.push(this.FindFirstInDirection(x, y, xD, yD, inputData))\n        }\n    }\n    result = result.filter((x) => x == '#')\n\n    return result ? result.length : 0\n},\nFindFirstInDirection(xPos, yPos, xDir, yDir, inputData) {\n    var xEof = false\n    var yEof = false\n\n    while (!xEof && !yEof) {\n        \n        xPos += xDir\n        yPos += yDir\n        \n        if (yPos < 0) {\n            yEof = true\n            yPos = 0\n        }\n        else if (yPos > inputData.length -1) {\n            yEof = true\n            yPos = inputData.length - 1\n        }\n        \n        if (xPos < 0) {\n            xEof = true\n            xPos = 0\n        }\n        else if (xPos > inputData[yPos].length -1) {\n            xEof = true\n            xPos = inputData[yPos].length - 1\n        }\n\n\n        if (!xEof && !yEof && inputData[yPos][xPos] != '.') {\n            return inputData[yPos][xPos]\n        }\n    }\n\n    return ''\n},",Ba={components:{"show-task":E},data:function(){return{CurrentInputData:ua,CurrentTaskData:Fa,CurrentSolutionData:ma,InputData:ua,TaskResult:[]}},mounted:function(){this.Solve(ua)},methods:{Solve:function(n){var a=n.slice(0);n=n.split("\n"),a=a.split("\n");for(var L=0;L<n.length;L++)n[L]=n[L].split(""),a[L]=a[L].split("");var t=!0,e=0;while(t&&e<1e4){t=!1;for(var r=[],i=0;i<n.length;i++)r.push(n[i].slice(0));for(var s=0;s<n.length;s++)for(var o=0;o<n[s].length;o++)"L"==n[s][o]?0==this.FindAdjacentOccupiedAmount(o,s,n)&&(r[s][o]="#"):"#"==n[s][o]&&this.FindAdjacentOccupiedAmount(o,s,n)>=4&&(r[s][o]="L"),t||(t=r[s][o]!=n[s][o]);n=[];for(var l=0;l<r.length;l++)n.push(r[l].slice(0));e++}n=n.join("").split(""),this.SetResult(n.filter((function(n){return"#"==n})).length),t=!0,e=0;while(t&&e<1e3){t=!1,r=[];for(var c=0;c<a.length;c++)r.push(a[c].slice(0));for(var g=0;g<a.length;g++)for(var b=0;b<a[g].length;b++)"L"==a[g][b]?0==this.FindForwardOccupiedAmount(b,g,a)&&(r[g][b]="#"):"#"==a[g][b]&&this.FindForwardOccupiedAmount(b,g,a)>=5&&(r[g][b]="L"),t||(t=r[g][b]!=a[g][b]);a=[];for(var d=0;d<r.length;d++)a.push(r[d].slice(0));e++}a=a.join("").split(""),this.SetResult(a.filter((function(n){return"#"==n})).length)},FindAdjacentOccupiedAmount:function(n,a,L){for(var t=[],e=a-1;e<=a+1;e++)if(!(e<0||e>=L.length))for(var r=n-1;r<=n+1;r++)r<0||r>=L[e].length||e==a&&r==n||t.push(L[e][r]);return t=t.filter((function(n){return"#"==n})),t?t.length:0},FindForwardOccupiedAmount:function(n,a,L){for(var t=[],e=-1;e<=1;e++)for(var r=-1;r<=1;r++)0==e&&0==r||t.push(this.FindFirstInDirection(n,a,e,r,L));return t=t.filter((function(n){return"#"==n})),t?t.length:0},FindFirstInDirection:function(n,a,L,t,e){var r=!1,i=!1;while(!r&&!i)if(n+=L,a+=t,a<0?(i=!0,a=0):a>e.length-1&&(i=!0,a=e.length-1),n<0?(r=!0,n=0):n>e[a].length-1&&(r=!0,n=e[a].length-1),!r&&!i&&"."!=e[a][n])return e[a][n];return""},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},ya=Ba,fa=Object(c["a"])(ya,ha,pa,!1,null,null,null),va=fa.exports,wa=function(){var n=this,a=n.$createElement,L=n._self._c||a;return L("div",[L("show-task",{attrs:{resultData:n.TaskResult,taskData:n.CurrentTaskData,inputData:n.CurrentInputData,solutionData:n.CurrentSolutionData}})],1)},ka=[],Ra="R180\nE1\nN1\nR90\nE4\nF84\nW3\nF19\nE5\nN1\nW5\nW4\nR90\nS1\nF70\nR90\nW2\nS3\nL180\nE2\nR90\nE1\nR90\nN2\nE3\nF55\nW3\nR90\nS2\nE4\nL90\nF33\nW4\nS3\nF11\nN4\nW4\nF88\nW3\nF62\nL90\nS3\nW3\nN1\nE3\nE2\nN1\nE3\nS3\nE5\nS4\nW5\nL90\nW5\nR90\nE4\nF36\nN4\nE4\nE5\nF47\nR90\nN3\nE3\nL180\nS5\nR90\nS5\nW2\nS3\nF43\nW2\nR180\nW2\nS2\nL180\nE2\nF49\nL90\nF77\nS5\nE1\nS2\nF39\nL180\nF12\nW1\nL90\nF60\nS2\nE3\nN1\nE5\nR90\nE1\nN4\nW4\nS4\nE2\nL90\nF100\nE3\nF58\nS2\nE4\nF83\nW3\nN1\nR90\nF99\nW5\nW4\nF19\nN3\nW1\nW5\nF70\nR180\nR90\nF58\nE5\nN3\nR90\nN4\nF86\nN4\nF70\nL90\nF36\nR90\nS4\nR180\nN5\nF81\nW5\nR90\nE5\nL90\nF73\nS5\nE3\nN1\nF27\nE2\nN3\nL180\nW2\nF24\nN2\nL90\nF69\nN2\nE3\nF49\nL90\nS4\nW5\nF18\nR180\nF62\nS2\nF65\nE3\nF100\nN1\nF96\nW1\nF75\nL180\nW2\nS2\nF93\nE5\nS3\nR90\nS2\nF34\nR90\nF83\nS1\nW1\nF58\nL180\nN4\nE1\nR90\nW2\nF93\nS3\nF20\nR90\nN3\nE3\nN3\nL90\nF8\nS3\nF18\nS3\nN2\nF6\nL270\nF70\nW5\nS3\nF54\nE2\nF75\nE3\nR90\nN2\nW3\nL90\nE4\nF58\nN5\nF97\nW2\nL90\nW5\nS2\nW1\nS5\nF85\nN1\nE1\nN4\nE4\nL90\nE1\nR90\nS5\nL180\nR270\nN1\nL90\nE4\nN3\nF45\nN2\nF68\nR90\nF36\nN5\nF82\nS5\nE4\nR180\nS2\nL180\nN3\nR270\nW5\nF70\nL90\nW5\nF80\nW4\nN2\nR90\nS3\nW1\nF23\nN1\nW1\nN4\nF70\nS3\nL180\nF57\nR90\nL90\nF55\nL90\nN4\nF87\nL90\nF1\nL270\nF17\nN5\nR180\nF84\nR90\nW5\nF7\nW1\nS1\nE3\nF46\nS5\nE2\nF23\nR90\nE4\nW2\nF96\nE5\nL90\nF65\nF3\nS5\nE5\nN3\nW4\nL90\nS2\nF57\nE1\nR90\nF68\nE3\nL90\nW1\nF29\nN5\nW5\nN1\nF95\nN1\nL90\nF31\nS5\nL180\nN2\nW5\nR90\nF27\nE1\nR90\nE3\nS5\nF10\nR90\nN4\nE2\nF25\nS4\nE5\nF51\nN3\nW2\nL90\nS3\nL180\nF17\nE4\nF93\nE3\nL90\nF41\nL90\nS5\nL90\nW5\nN1\nF81\nL90\nE4\nW2\nR90\nW1\nS5\nR90\nF39\nW3\nR90\nN5\nE1\nL90\nF82\nS3\nR90\nW4\nF66\nF4\nL90\nF77\nR90\nE1\nL90\nF53\nS4\nF35\nW1\nF64\nR90\nF9\nS1\nE1\nL90\nW4\nR90\nS2\nW5\nR90\nS4\nL90\nN3\nF8\nL180\nN5\nE5\nN4\nF35\nN5\nW1\nN1\nE5\nF15\nR180\nF92\nW3\nL90\nF4\nL90\nE1\nS3\nW3\nR90\nF37\nN5\nF19\nS2\nF98\nL90\nF24\nW3\nF68\nN5\nR90\nW3\nL90\nW3\nL90\nS1\nL90\nS4\nW3\nF56\nN4\nR90\nE3\nW1\nL90\nE4\nN3\nR180\nE1\nS1\nW2\nR90\nN3\nF82\nN2\nF37\nS3\nL180\nE2\nL180\nF6\nN2\nF96\nE2\nR180\nE2\nW3\nR90\nE2\nS5\nS1\nF23\nR90\nW5\nF75\nS1\nL90\nS3\nE1\nF83\nW4\nL180\nW5\nL90\nN1\nE1\nS2\nF17\nL90\nS2\nF53\nR90\nS3\nN3\nW1\nN4\nL180\nL90\nE3\nF9\nS5\nF24\nW3\nE5\nN2\nF73\nN1\nF28\nN2\nW4\nN3\nF53\nE5\nF47\nW2\nF60\nL90\nE2\nF19\nS1\nF63\nW5\nF100\nN3\nL180\nF83\nN4\nW5\nF37\nS1\nF50\nE1\nN2\nW3\nR90\nF85\nS4\nF72\nN4\nL90\nF48\nR90\nF99\nR90\nF58\nW3\nW4\nF64\nE1\nR90\nF74\nL90\nF23\nN3\nN3\nE1\nS1\nW5\nL180\nF98\nL90\nF36\nW4\nS2\nW3\nF9\nF72\nW5\nF78\nN2\nF65\nS3\nF47\nS5\nR90\nF68\nL180\nW2\nF7\nE2\nE3\nS4\nR90\nN2\nL180\nW2\nR180\nE4\nR90\nW3\nL90\nE4\nF54\nL180\nE2\nF6\nW5\nF82\nE4\nR90\nE4\nF25\nN2\nR270\nN4\nF18\nN5\nR90\nS3\nR90\nF38\nR90\nF97\nW4\nF85\nS4\nF56\nE4\nS1\nF40\nW3\nF52\nL90\nF76\nN4\nF15\nS2\nF22\nS5\nL180\nF91\nL180\nF8\nL90\nE4\nN4\nF67\nL90\nS3\nR180\nR90\nN4\nF71\nW3\nF34\nE2\nN1\nF43\nW5\nL180\nN5\nW2\nF42\nR90\nW3\nF39\nE1\nS2\nL180\nN5\nE3\nN5\nF28\nE1\nR90\nS3\nF40\nL90\nS2\nS2\nL90\nW5\nL90\nF93\nR180\nW4\nS4\nW4\nF100\nS3\nR90\nE2\nL180\nW1\nE3\nS5\nL90\nF87\nN1\nR90\nF3\nR90\nE5\nR90\nS3\nF45\nL90\nS2\nF42\nR90\nF95\nL90\nE1\nN3\nR90\nF73\nS3\nE1\nL90\nS2\nE3\nL90\nL270\nF38\nS5\nR90\nF42\nL90\nN1\nF7\nS3\nF65\nN2\nF42\nL180\nW5\nS4\nE4\nF65\nS4\nE5\nF51\nE4\nR180\nF70\nR90\nF28\nN5\nW5\nN1\nF96\nL90\nW4\nS3\nW3\nF89\nW1\nL90\nF75\nL270\nS3\nR90\nL90\nF7\nE2\nF24\nR180\nS2\nL180\nF48\nR90\nF37\nW2\nR90\nW4\nL90\nW3\nF81\nE4\nN2\nF39\nE4\nN1\nW1\nL90\nF59",ja="--- Day 12: Rain Risk ---\nYour ferry made decent progress toward the island, but the storm came in faster than anyone expected. The ferry needs to take evasive actions!\n\nUnfortunately, the ship's navigation computer seems to be malfunctioning; rather than giving a route directly to safety, \nit produced extremely circuitous instructions. When the captain uses the PA system to ask if anyone can help, you quickly volunteer.\n\nThe navigation instructions (your puzzle input) consists of a sequence of single-character actions paired with integer input values. \nAfter staring at them for a few minutes, you work out what they probably mean:\n\nAction N means to move north by the given value.\nAction S means to move south by the given value.\nAction E means to move east by the given value.\nAction W means to move west by the given value.\nAction L means to turn left the given number of degrees.\nAction R means to turn right the given number of degrees.\nAction F means to move forward by the given value in the direction the ship is currently facing.\nThe ship starts by facing east. Only the L and R actions change the direction the ship is facing. (That is, if the ship is facing east and the \nnext instruction is N10, the ship would move north 10 units, but would still move east if the following action were F.)\n\nFor example:\n\nF10\nN3\nF7\nR90\nF11\nThese instructions would be handled as follows:\n\nF10 would move the ship 10 units east (because the ship starts by facing east) to east 10, north 0.\nN3 would move the ship 3 units north to east 10, north 3.\nF7 would move the ship another 7 units east (because the ship is still facing east) to east 17, north 3.\nR90 would cause the ship to turn right by 90 degrees and face south; it remains at east 17, north 3.\nF11 would move the ship 11 units south to east 17, south 8.\nAt the end of these instructions, the ship's Manhattan distance (sum of the absolute values of its east/west position and its north/south position) from its starting position is 17 + 8 = 25.\n\nFigure out where the navigation instructions lead. What is the Manhattan distance between that location and the ship's starting position?\n\n--- Part Two ---\nBefore you can give the destination to the captain, you realize that the actual action meanings were printed on the back of the instructions the whole time.\n\nAlmost all of the actions indicate how to move a waypoint which is relative to the ship's position:\n\nAction N means to move the waypoint north by the given value.\nAction S means to move the waypoint south by the given value.\nAction E means to move the waypoint east by the given value.\nAction W means to move the waypoint west by the given value.\nAction L means to rotate the waypoint around the ship left (counter-clockwise) the given number of degrees.\nAction R means to rotate the waypoint around the ship right (clockwise) the given number of degrees.\nAction F means to move forward to the waypoint a number of times equal to the given value.\nThe waypoint starts 10 units east and 1 unit north relative to the ship. The waypoint is relative to the ship; that is, if the ship moves, the waypoint moves with it.\n\nFor example, using the same instructions as above:\n\nF10 moves the ship to the waypoint 10 times (a total of 100 units east and 10 units north), leaving the ship at east 100, north 10. The waypoint stays 10 units east and 1 unit north of the ship.\nN3 moves the waypoint 3 units north to 10 units east and 4 units north of the ship. The ship remains at east 100, north 10.\nF7 moves the ship to the waypoint 7 times (a total of 70 units east and 28 units north), leaving the ship at east 170, north 38. The waypoint stays 10 units east and 4 units north of the ship.\nR90 rotates the waypoint around the ship clockwise 90 degrees, moving it to 4 units east and 10 units south of the ship. The ship remains at east 170, north 38.\nF11 moves the ship to the waypoint 11 times (a total of 44 units east and 110 units south), leaving the ship at east 214, south 72. The waypoint stays 4 units east and 10 units south of the ship.\nAfter these operations, the ship's Manhattan distance from its starting position is 214 + 72 = 286.\n\nFigure out where the navigation instructions actually lead. What is the Manhattan distance between that location and the ship's starting position?\n\n",xa="Solve(inputData) {\n    // Solve the task there and then call 'SetResult(Result)'\n    // with the correct answer\n    // The answer can be checked at 'https://adventofcode.com/'\n    \n    // Phase one\n    inputData = inputData.split('\\n')\n    var ShipDirections = ['N','E','S','W']\n    var ShipPosition = {\n        EW: 0,\n        NS: 0\n    } // EW, NS, position\n    var CurrentDirection = 1 // Starting direction is east (E)\n\n    var command, c1, c2, cached\n\n    for (let i = 0; i < inputData.length; i++) {\n        command = inputData[i].split('')\n        c1 = command.shift()\n        c2 = +command.join('')\n\n        if (c1 == 'F')\n            c1 = ShipDirections[CurrentDirection]\n\n        switch (c1) {\n            case 'N':\n                ShipPosition.NS += c2\n                break\n            case 'S':\n                ShipPosition.NS -= c2\n                break\n            case 'E':\n                ShipPosition.EW += c2\n                break\n            case 'W':\n                ShipPosition.EW -= c2\n                break\n            case 'R':\n                c2 = c2 / 90\n                CurrentDirection += c2\n                CurrentDirection = CurrentDirection > 3 ? CurrentDirection - 4 : CurrentDirection\n                break\n            case 'L':\n                c2 = c2 / 90\n                CurrentDirection -= c2\n                CurrentDirection = CurrentDirection < 0 ? CurrentDirection + 4 : CurrentDirection\n                break\n            default:\n                break\n        }\n    }\n\n    this.SetResult(Math.abs(+ShipPosition.EW) + Math.abs(+ShipPosition.NS))\n\n    // Phase two\n    ShipPosition = {\n        EW: 0,\n        NS: 0\n    }\n    var NavigationPosition = {\n        EW: 10,\n        NS: 1\n    }\n\n    for (let i = 0 ; i < inputData.length; i++) {\n        command = inputData[i].split('')\n        c1 = command.shift()\n        c2 = +command.join('')\n        switch(c1) {\n            case 'F':\n                var NSDirection = NavigationPosition.NS - ShipPosition.NS\n                var EWDirection = NavigationPosition.EW - ShipPosition.EW\n\n                for (let j = 0; j < c2; j++) {\n                    ShipPosition.EW += EWDirection\n                    ShipPosition.NS += NSDirection\n                }\n\n                NavigationPosition.EW = (ShipPosition.EW + EWDirection)\n                NavigationPosition.NS = (ShipPosition.NS + NSDirection)\n                break\n            case 'N':\n                NavigationPosition.NS += c2\n                break\n            case 'S':\n                NavigationPosition.NS -= c2\n                break\n            case 'E':\n                NavigationPosition.EW += c2\n                break\n            case 'W':\n                NavigationPosition.EW -= c2\n                break\n            case 'R':\n                c2 = c2 / 90\n                NavigationPosition.EW = NavigationPosition.EW - ShipPosition.EW\n                NavigationPosition.NS = NavigationPosition.NS - ShipPosition.NS\n                for (let j = 0; j < c2; j++) {\n                    cached = NavigationPosition.EW\n                    NavigationPosition.EW = NavigationPosition.NS\n                    NavigationPosition.NS = cached * -1\n                }\n                NavigationPosition.EW = NavigationPosition.EW + ShipPosition.EW\n                NavigationPosition.NS = NavigationPosition.NS + ShipPosition.NS\n                break\n            case 'L':\n                c2 = c2 / 90\n                NavigationPosition.EW = NavigationPosition.EW - ShipPosition.EW\n                NavigationPosition.NS = NavigationPosition.NS - ShipPosition.NS\n                for (let j = 0; j < c2; j++) {\n                    cached = NavigationPosition.NS\n                    NavigationPosition.NS = NavigationPosition.EW\n                    NavigationPosition.EW = cached * -1\n                }\n                NavigationPosition.EW = NavigationPosition.EW + ShipPosition.EW\n                NavigationPosition.NS = NavigationPosition.NS + ShipPosition.NS\n                break\n            default:\n                break\n        }\n    }\n\n    this.SetResult(Math.abs(+ShipPosition.EW) + Math.abs(+ShipPosition.NS))\n\n},",za={components:{"show-task":E},data:function(){return{CurrentInputData:Ra,CurrentTaskData:ja,CurrentSolutionData:xa,InputData:Ra,TaskResult:[]}},mounted:function(){this.Solve(Ra)},methods:{Solve:function(n){n=n.split("\n");for(var a,L,t,e,r=["N","E","S","W"],i={EW:0,NS:0},s=1,o=0;o<n.length;o++)switch(a=n[o].split(""),L=a.shift(),t=+a.join(""),"F"==L&&(L=r[s]),L){case"N":i.NS+=t;break;case"S":i.NS-=t;break;case"E":i.EW+=t;break;case"W":i.EW-=t;break;case"R":t/=90,s+=t,s=s>3?s-4:s;break;case"L":t/=90,s-=t,s=s<0?s+4:s;break;default:break}this.SetResult(Math.abs(+i.EW)+Math.abs(+i.NS)),i={EW:0,NS:0};for(var l={EW:10,NS:1},c=0;c<n.length;c++)switch(a=n[c].split(""),L=a.shift(),t=+a.join(""),L){case"F":for(var g=l.NS-i.NS,b=l.EW-i.EW,d=0;d<t;d++)i.EW+=b,i.NS+=g;l.EW=i.EW+b,l.NS=i.NS+g;break;case"N":l.NS+=t;break;case"S":l.NS-=t;break;case"E":l.EW+=t;break;case"W":l.EW-=t;break;case"R":t/=90,l.EW=l.EW-i.EW,l.NS=l.NS-i.NS;for(var h=0;h<t;h++)e=l.EW,l.EW=l.NS,l.NS=-1*e;l.EW=l.EW+i.EW,l.NS=l.NS+i.NS;break;case"L":t/=90,l.EW=l.EW-i.EW,l.NS=l.NS-i.NS;for(var p=0;p<t;p++)e=l.NS,l.NS=l.EW,l.EW=-1*e;l.EW=l.EW+i.EW,l.NS=l.NS+i.NS;break;default:break}this.SetResult(Math.abs(+i.EW)+Math.abs(+i.NS))},SetResult:function(n){this.TaskResult.push(n.toString()+"\n")}}},qa=za,Da=Object(c["a"])(qa,wa,ka,!1,null,null,null),Sa=Da.exports,Ta={name:"App",components:{"no-content":b,"day-1":W,"day-2":X,"day-3":tn,"day-4":dn,"day-5":vn,"day-6":Sn,"day-7":On,"day-8":Un,"day-9":ea,"day-10":da,"day-11":va,"day-12":Sa},data:function(){return{Days:[{Title:"Day 1",Value:"day-1"},{Title:"Day 2",Value:"day-2"},{Title:"Day 3",Value:"day-3"},{Title:"Day 4",Value:"day-4"},{Title:"Day 5",Value:"day-5"},{Title:"Day 6",Value:"day-6"},{Title:"Day 7",Value:"day-7"},{Title:"Day 8",Value:"day-8"},{Title:"Day 9",Value:"day-9"},{Title:"Day 10",Value:"day-10"},{Title:"Day 11",Value:"day-11"},{Title:"Day 12",Value:"day-12"}],SelectedDay:"",FoundComponent:!1}},computed:{DayTitles:function(){return this.Days.map((function(n){return n.Title}))}},methods:{DayValue:function(n){var a=this.Days.find((function(a){return a.Title==n}));if(a)return this.FoundComponent=!0,this.Days.find((function(a){return a.Title==n})).Value}}},Ia=Ta,Ea=(L("034f"),L("7496")),Na=L("b974"),Pa=Object(c["a"])(Ia,e,r,!1,null,null,null),Ca=Pa.exports;R()(Pa,{VApp:Ea["a"],VCol:j["a"],VSelect:Na["a"]});var Wa=L("f309");t["a"].use(Wa["a"]);var Aa=new Wa["a"]({});t["a"].config.productionTip=!1,new t["a"]({vuetify:Aa,render:function(n){return n(Ca)}}).$mount("#app")},"85ec":function(n,a,L){}});
//# sourceMappingURL=app.228c9b28.js.map